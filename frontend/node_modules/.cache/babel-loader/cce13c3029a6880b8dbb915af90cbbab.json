{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.2/conquer2/frontend/src/pages/Map.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\"; // import { useSpring, animated } from \"react-spring\";\n\nimport \"./Map.css\";\nimport { connect } from \"../api/index.js\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"; //NOTE: For API, please see src/api/index.js;\n\nclass GameMap extends Component {\n  constructor() {\n    super();\n    connect();\n    const naam = \"Shashwat\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SideBar, {\n      props: \"Shashwat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  }\n\n} // function MapDisplay() {\n//   return (\n//     <div>\n//       <SideBar />\n//     </div>\n//   );\n// }\n//Variables for each country to display for Sidebar\n// var country;\n// var pop_est;\n// var gdp;\n// var subrg;\n// var continent;\n// var displayCountryDetails = false;\n// var troopsInLand;\n// var yourland;\n\n\nfunction CountryDetails(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Spy Report On \", props.country, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Population: \", props.pop_est), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"GDP (PPP): \", props.gdp), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Subregion: \", props.subrg), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Continent: \", props.continent));\n}\n\nfunction SideBar() {\n  const [state, setState] = useState(\"\");\n  const [spydata, setSpydata] = useState({\n    Country: \"\",\n    Population: \"\",\n    GDP: \"\",\n    Subregion: \"\",\n    Continent: \"\",\n    Display: false\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-info-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Welcome Commander!\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"), spydata.display && /*#__PURE__*/React.createElement(CountryDetails, {\n    props: spydata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 31\n    }\n  }))), /*#__PURE__*/React.createElement(MapSettings, {\n    setTooltipContent: setState,\n    setSpydata: props => {\n      setSpydata({\n        Country: props.country,\n        Population: props.population,\n        GDP: props.gdp,\n        Subregion: props.subregion,\n        Continent: props.continent,\n        Display: props.display\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, state));\n}\n\nconst getnum = num => {\n  var num = Math.round(num);\n\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n\n  return num;\n};\n\nconst MapSettings = ({\n  setTooltipContent,\n  setSpydata\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    fill: \"#AAA\",\n    stroke: \"#FFF\",\n    onMouseEnter: () => {\n      const {\n        NAME,\n        POP_EST,\n        GDP_MD_EST,\n        SUBREGION,\n        CONTINENT\n      } = geo.properties;\n      setTooltipContent(`${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`);\n      const name = NAME;\n      const pop_est = getnum(POP_EST);\n      const gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\n      const subrg = SUBREGION;\n      const continent = CONTINENT;\n      setSpydata(name, pop_est, gdp, subrg, continent, true);\n    },\n    onMouseLeave: () => {\n      setTooltipContent(\"\");\n      setSpydata(\"\", \"\", \"\", \"\", \"\", false);\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default GameMap;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.2/conquer2/frontend/src/pages/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","ReactTooltip","connect","geoUrl","GameMap","constructor","naam","render","CountryDetails","props","country","pop_est","gdp","subrg","continent","SideBar","state","setState","spydata","setSpydata","Country","Population","GDP","Subregion","Continent","Display","display","population","subregion","getnum","num","Math","round","pow","MapSettings","setTooltipContent","geographies","map","geo","rsmKey","NAME","POP_EST","GDP_MD_EST","SUBREGION","CONTINENT","properties","name","default","fill","outline","hover","pressed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,aAJF,QAKO,mBALP;AAMA,OAAOC,YAAP,MAAyB,eAAzB,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,MAAM,GACV,wGADF,C,CAGA;;AAEA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAC9BU,EAAAA,WAAW,GAAG;AACZ;AACAH,IAAAA,OAAO;AACP,UAAMI,IAAI,GAAG,UAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAT6B,C,CAYhC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBA,KAAK,CAACC,OAAzB,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBD,KAAK,CAACE,OAAvB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBF,KAAK,CAACG,GAAtB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBH,KAAK,CAACI,KAAtB,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBJ,KAAK,CAACK,SAAtB,CALF,CADF;AASD;;AAED,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC;AACrCwB,IAAAA,OAAO,EAAE,EAD4B;AAErCC,IAAAA,UAAU,EAAE,EAFyB;AAGrCC,IAAAA,GAAG,EAAE,EAHgC;AAIrCC,IAAAA,SAAS,EAAE,EAJ0B;AAKrCC,IAAAA,SAAS,EAAE,EAL0B;AAMrCC,IAAAA,OAAO,EAAE;AAN4B,GAAD,CAAtC;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAJF,EASGP,OAAO,CAACQ,OAAR,iBAAmB,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAER,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATtB,CADF,CADF,eAcE,oBAAC,WAAD;AACE,IAAA,iBAAiB,EAAED,QADrB;AAEE,IAAA,UAAU,EAAGR,KAAD,IAAW;AACrBU,MAAAA,UAAU,CAAC;AACTC,QAAAA,OAAO,EAAEX,KAAK,CAACC,OADN;AAETW,QAAAA,UAAU,EAAEZ,KAAK,CAACkB,UAFT;AAGTL,QAAAA,GAAG,EAAEb,KAAK,CAACG,GAHF;AAITW,QAAAA,SAAS,EAAEd,KAAK,CAACmB,SAJR;AAKTJ,QAAAA,SAAS,EAAEf,KAAK,CAACK,SALR;AAMTW,QAAAA,OAAO,EAAEhB,KAAK,CAACiB;AANN,OAAD,CAAV;AAQD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eA2BE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeV,KAAf,CA3BF,CADF;AA+BD;;AAED,MAAMa,MAAM,GAAIC,GAAD,IAAS;AACtB,MAAIA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAV;;AACA,MAAIA,GAAG,GAAGC,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,EAAb,CAAV,EAA4B;AAC1BH,IAAAA,GAAG,GAAGA,GAAG,GAAGC,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,EAAb,CAAN,GAAyB,WAA/B;AACD,GAFD,MAEO,IAAIH,GAAG,GAAGC,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAV,EAA2B;AAChCH,IAAAA,GAAG,GAAGA,GAAG,GAAGC,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAN,GAAwB,UAA9B;AACD,GAFM,MAEA,IAAIH,GAAG,GAAGC,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAV,EAA2B;AAChCH,IAAAA,GAAG,GAAGA,GAAG,GAAGC,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAN,GAAwB,UAA9B;AACD;;AACD,SAAOH,GAAP;AACD,CAVD;;AAYA,MAAMI,WAAW,GAAG,CAAC;AAAEC,EAAAA,iBAAF;AAAqBhB,EAAAA;AAArB,CAAD,KAAuC;AACzD,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,gBAAS,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEhB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEiC,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAiBC,GAAD,iBACd,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACC,MADX;AAEE,IAAA,SAAS,EAAED,GAFb;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,YAAY,EAAE,MAAM;AAClB,YAAM;AACJE,QAAAA,IADI;AAEJC,QAAAA,OAFI;AAGJC,QAAAA,UAHI;AAIJC,QAAAA,SAJI;AAKJC,QAAAA;AALI,UAMFN,GAAG,CAACO,UANR;AAOAV,MAAAA,iBAAiB,CACd,GAAEK,IAAK,OAAMX,MAAM,CAACa,UAAU,GAAGX,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAd,CAA+B,EADpC,CAAjB;AAGA,YAAMa,IAAI,GAAGN,IAAb;AACA,YAAM7B,OAAO,GAAGkB,MAAM,CAACY,OAAD,CAAtB;AACA,YAAM7B,GAAG,GAAGiB,MAAM,CAACa,UAAU,GAAGX,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAd,CAAlB;AACA,YAAMpB,KAAK,GAAG8B,SAAd;AACA,YAAM7B,SAAS,GAAG8B,SAAlB;AACAzB,MAAAA,UAAU,CAAC2B,IAAD,EAAOnC,OAAP,EAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,SAA5B,EAAuC,IAAvC,CAAV;AACD,KAtBH;AAuBE,IAAA,YAAY,EAAE,MAAM;AAClBqB,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAhB,MAAAA,UAAU,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,KAArB,CAAV;AACD,KA1BH;AA2BE,IAAA,KAAK,EAAE;AACL4B,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OADJ;AAKLC,MAAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OALF;AASLE,MAAAA,OAAO,EAAE;AACPH,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,OAAO,EAAE;AAFF;AATJ,KA3BT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CADF,CADF,CADF;AAwDD,CAzDD;;AA2DA,eAAe7C,OAAf","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\n// import { useSpring, animated } from \"react-spring\";\nimport \"./Map.css\";\nimport { connect } from \"../api/index.js\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n//NOTE: For API, please see src/api/index.js;\n\nclass GameMap extends Component {\n  constructor() {\n    super();\n    connect();\n    const naam = \"Shashwat\";\n  }\n\n  render() {\n    return <SideBar props=\"Shashwat\" />;\n  }\n}\n\n// function MapDisplay() {\n//   return (\n//     <div>\n//       <SideBar />\n//     </div>\n//   );\n// }\n\n//Variables for each country to display for Sidebar\n// var country;\n// var pop_est;\n// var gdp;\n// var subrg;\n// var continent;\n// var displayCountryDetails = false;\n// var troopsInLand;\n// var yourland;\n\nfunction CountryDetails(props) {\n  return (\n    <div>\n      <h2>Spy Report On {props.country}:</h2>\n      <h3>Population: {props.pop_est}</h3>\n      <h3>GDP (PPP): {props.gdp}</h3>\n      <h3>Subregion: {props.subrg}</h3>\n      <h3>Continent: {props.continent}</h3>\n    </div>\n  );\n}\n\nfunction SideBar() {\n  const [state, setState] = useState(\"\");\n  const [spydata, setSpydata] = useState({\n    Country: \"\",\n    Population: \"\",\n    GDP: \"\",\n    Subregion: \"\",\n    Continent: \"\",\n    Display: false,\n  });\n\n  return (\n    <div>\n      <div className=\"map-sidebar-wrapper\">\n        <div className=\"map-sidebar-info-wrapper\">\n          <div>\n            <h1>Welcome Commander!</h1>\n          </div>\n          <p>\n            This is your war control room. Help us attain victory over our\n            enemies. The Gods are on our side!\n          </p>\n          {/* {displayCountryDetails ? <CountryDetails /> : null} */}\n          {spydata.display && <CountryDetails props={spydata} />}\n        </div>\n      </div>\n      <MapSettings\n        setTooltipContent={setState}\n        setSpydata={(props) => {\n          setSpydata({\n            Country: props.country,\n            Population: props.population,\n            GDP: props.gdp,\n            Subregion: props.subregion,\n            Continent: props.continent,\n            Display: props.display,\n          });\n        }}\n      />\n      <ReactTooltip>{state}</ReactTooltip>\n    </div>\n  );\n}\n\nconst getnum = (num) => {\n  var num = Math.round(num);\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n  return num;\n};\n\nconst MapSettings = ({ setTooltipContent, setSpydata }) => {\n  return (\n    <div className=\"map-wrapper\">\n      <ComposableMap data-tip=\"\">\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill=\"#AAA\"\n                  stroke=\"#FFF\"\n                  onMouseEnter={() => {\n                    const {\n                      NAME,\n                      POP_EST,\n                      GDP_MD_EST,\n                      SUBREGION,\n                      CONTINENT,\n                    } = geo.properties;\n                    setTooltipContent(\n                      `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n                    );\n                    const name = NAME;\n                    const pop_est = getnum(POP_EST);\n                    const gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\n                    const subrg = SUBREGION;\n                    const continent = CONTINENT;\n                    setSpydata(name, pop_est, gdp, subrg, continent, true);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                    setSpydata(\"\", \"\", \"\", \"\", \"\", false);\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\",\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default GameMap;\n"]},"metadata":{},"sourceType":"module"}