{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Documents/Projects/conquer2/V0.2/conquer2/frontend/src/pages/Map.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./Map.css\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst id = \"test\";\nconst socketURL = \"ws://localhost:8080/game/\" + id + \"ws\";\n\nclass GameMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.socket = new WebSocket(socketURL + id + \"ws\");\n  }\n\n  componentDidMount() {\n    this.socket.onopen = () => {\n      console.log(\"Connection Successful\");\n    };\n\n    this.socket.onmessage = msg => {\n      const message = JSON.parse(msg.data);\n      console.log(msg);\n    };\n\n    this.socket.onclose = () => {\n      console.log(\"Disconnected\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MapDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nfunction MapDisplay() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar country;\nvar pop_est;\nvar gdp;\nvar subrg;\nvar continent;\nvar displayCountryDetails = false;\n\nconst CountryDetails = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Spy Report On \", country, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Population: \", pop_est), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"GDP: \", gdp), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Subregion: \", subrg), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Continent: \", continent));\n};\n\nfunction SideBar() {\n  const [state, setState] = useState(\"\");\n  const [spydata, setSpydata] = useState({\n    Country: \"\",\n    Population: \"\",\n    GDP: \"\",\n    Subregion: \"\",\n    Continent: \"\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-info-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Welcome Commander!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"), displayCountryDetails ? /*#__PURE__*/React.createElement(CountryDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 36\n    }\n  }) : null)), /*#__PURE__*/React.createElement(MapSettings, {\n    setTooltipContent: setState,\n    setSpydata: setSpydata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, state));\n}\n\nconst getnum = num => {\n  var num = Math.round(num);\n\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n\n  return num;\n};\n\nconst MapSettings = ({\n  setTooltipContent,\n  setSpydata\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    fill: \"#AAA\",\n    stroke: \"#FFF\",\n    onMouseEnter: () => {\n      const {\n        NAME,\n        POP_EST,\n        GDP_MD_EST,\n        SUBREGION,\n        CONTINENT\n      } = geo.properties;\n      setTooltipContent(`${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`);\n      country = NAME;\n      pop_est = getnum(POP_EST);\n      gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\n      subrg = SUBREGION;\n      continent = CONTINENT; // setSpydata(NAME, POP_EST, GDP_MD_EST, SUBREGION, CONTINENT);\n\n      displayCountryDetails = true;\n    },\n    onMouseLeave: () => {\n      setTooltipContent(\"\"); // setSpydata(\"\", \"\", \"\", \"\", \"\");\n\n      displayCountryDetails = false;\n    },\n    onClick: () => {\n      const {\n        NAME,\n        POP_EST,\n        GDP_MD_EST,\n        SUBREGION,\n        CONTINENT\n      } = geo.properties;\n      country = NAME;\n      pop_est = getnum(POP_EST);\n      gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\n      subrg = SUBREGION;\n      continent = CONTINENT;\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default GameMap;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Documents/Projects/conquer2/V0.2/conquer2/frontend/src/pages/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","ReactTooltip","useSpring","animated","geoUrl","id","socketURL","GameMap","socket","WebSocket","componentDidMount","onopen","console","log","onmessage","msg","message","JSON","parse","data","onclose","render","MapDisplay","country","pop_est","gdp","subrg","continent","displayCountryDetails","CountryDetails","props","SideBar","state","setState","spydata","setSpydata","Country","Population","GDP","Subregion","Continent","getnum","num","Math","round","pow","MapSettings","setTooltipContent","geographies","map","geo","rsmKey","NAME","POP_EST","GDP_MD_EST","SUBREGION","CONTINENT","properties","default","fill","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./Map.css\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst id = \"test\";\nconst socketURL = \"ws://localhost:8080/game/\" + id + \"ws\";\n\nclass GameMap extends Component {\n  socket = new WebSocket(socketURL + id + \"ws\");\n  componentDidMount() {\n    this.socket.onopen = () => {\n      console.log(\"Connection Successful\");\n    };\n\n    this.socket.onmessage = (msg) => {\n      const message = JSON.parse(msg.data);\n      console.log(msg);\n    };\n\n    this.socket.onclose = () => {\n      console.log(\"Disconnected\");\n    };\n  }\n\n  render() {\n    return <MapDisplay />;\n  }\n}\n\nfunction MapDisplay() {\n  return (\n    <div>\n      <SideBar />\n    </div>\n  );\n}\n\nvar country;\nvar pop_est;\nvar gdp;\nvar subrg;\nvar continent;\nvar displayCountryDetails = false;\n\nconst CountryDetails = (props) => {\n  return (\n    <div>\n      <h2>Spy Report On {country}:</h2>\n      <h3>Population: {pop_est}</h3>\n      <h3>GDP: {gdp}</h3>\n      <h3>Subregion: {subrg}</h3>\n      <h3>Continent: {continent}</h3>\n    </div>\n  );\n};\n\nfunction SideBar() {\n  const [state, setState] = useState(\"\");\n  const [spydata, setSpydata] = useState({\n    Country: \"\",\n    Population: \"\",\n    GDP: \"\",\n    Subregion: \"\",\n    Continent: \"\",\n  });\n  return (\n    <div>\n      <div className=\"map-sidebar-wrapper\">\n        <div className=\"map-sidebar-info-wrapper\">\n          <h1>Welcome Commander!</h1>\n          <p>\n            This is your war control room. Help us attain victory over our\n            enemies. The Gods are on our side!\n          </p>\n          {displayCountryDetails ? <CountryDetails /> : null}\n        </div>\n      </div>\n      <MapSettings setTooltipContent={setState} setSpydata={setSpydata} />\n      <ReactTooltip>{state}</ReactTooltip>\n    </div>\n  );\n}\n\nconst getnum = (num) => {\n  var num = Math.round(num);\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n  return num;\n};\n\nconst MapSettings = ({ setTooltipContent, setSpydata }) => {\n  return (\n    <div className=\"map-wrapper\">\n      <ComposableMap data-tip=\"\">\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill=\"#AAA\"\n                  stroke=\"#FFF\"\n                  onMouseEnter={() => {\n                    const {\n                      NAME,\n                      POP_EST,\n                      GDP_MD_EST,\n                      SUBREGION,\n                      CONTINENT,\n                    } = geo.properties;\n                    setTooltipContent(\n                      `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n                    );\n                    country = NAME;\n                    pop_est = getnum(POP_EST);\n                    gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\n                    subrg = SUBREGION;\n                    continent = CONTINENT;\n                    // setSpydata(NAME, POP_EST, GDP_MD_EST, SUBREGION, CONTINENT);\n                    displayCountryDetails = true;\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                    // setSpydata(\"\", \"\", \"\", \"\", \"\");\n                    displayCountryDetails = false;\n                  }}\n                  onClick={() => {\n                    const {\n                      NAME,\n                      POP_EST,\n                      GDP_MD_EST,\n                      SUBREGION,\n                      CONTINENT,\n                    } = geo.properties;\n                    country = NAME;\n                    pop_est = getnum(POP_EST);\n                    gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\n                    subrg = SUBREGION;\n                    continent = CONTINENT;\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\",\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default GameMap;\n"]},"metadata":{},"sourceType":"module"}