{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/VectorMap.jsx\";\nimport React, { memo } from 'react';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography, Marker, Annotation } from 'react-simple-maps';\nimport { geoCentroid } from 'd3-geo';\nimport ReactTooltip from 'react-tooltip';\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\n\nconst rounded = num => {\n  var num = Math.round(num);\n\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + ' Trillion';\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + ' Billion';\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + ' Million';\n  }\n\n  return num;\n};\n\nfunction notThisCountry(country) {\n  const {\n    NAME\n  } = country.properties; // return NAME !== '';\n\n  return true;\n}\n\nconst mapWidth = 1000;\nconst mapHeight = 600;\n\nconst MapChart = ({\n  setTooltipContent,\n  setgeo\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    const centroid = geoCentroid(geo);\n    return notThisCountry(geo) ? /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      stroke: \"#FFF\",\n      strokeWidth: 0.3,\n      onMouseEnter: () => {\n        const {\n          NAME\n        } = geo.properties;\n        setTooltipContent(`${NAME}`);\n        setgeo(geo);\n      },\n      onMouseLeave: () => {\n        setTooltipContent('');\n        setgeo(null);\n      },\n      style: {\n        default: {\n          fill: '#D6D6DA',\n          outline: 'none'\n        },\n        hover: {\n          fill: '#F53',\n          outline: 'none'\n        },\n        pressed: {\n          fill: '#',\n          outline: 'none'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }\n    }) : null;\n  })))));\n};\n\nexport default memo(MapChart);","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/VectorMap.jsx"],"names":["React","memo","ZoomableGroup","ComposableMap","Geographies","Geography","Marker","Annotation","geoCentroid","ReactTooltip","geoUrl","rounded","num","Math","round","pow","notThisCountry","country","NAME","properties","mapWidth","mapHeight","MapChart","setTooltipContent","setgeo","scale","geographies","map","geo","centroid","rsmKey","default","fill","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography, Marker, Annotation } from 'react-simple-maps';\nimport { geoCentroid } from 'd3-geo';\nimport ReactTooltip from 'react-tooltip';\n\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\n\nconst rounded = (num) => {\n\tvar num = Math.round(num);\n\tif (num > Math.pow(10, 12)) {\n\t\tnum = num / Math.pow(10, 12) + ' Trillion';\n\t} else if (num > Math.pow(10, 9)) {\n\t\tnum = num / Math.pow(10, 9) + ' Billion';\n\t} else if (num > Math.pow(10, 6)) {\n\t\tnum = num / Math.pow(10, 6) + ' Million';\n\t}\n\treturn num;\n};\n\nfunction notThisCountry(country) {\n\tconst { NAME } = country.properties;\n\t// return NAME !== '';\n\treturn true;\n}\n\nconst mapWidth = 1000;\nconst mapHeight = 600;\nconst MapChart = ({ setTooltipContent, setgeo }) => {\n\treturn (\n\t\t<div>\n\t\t\t{/* <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }} width={mapWidth} height={mapHeight}> */}\n\t\t\t{/* <ZoomableGroup translateExtent={[ [ 0, -mapHeight ], [ mapWidth, mapHeight ] ]}> */}\n\t\t\t<ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\n\t\t\t\t<ZoomableGroup>\n\t\t\t\t\t<Geographies geography={geoUrl}>\n\t\t\t\t\t\t{({ geographies }) =>\n\t\t\t\t\t\t\tgeographies.map((geo) => {\n\t\t\t\t\t\t\t\tconst centroid = geoCentroid(geo);\n\t\t\t\t\t\t\t\treturn notThisCountry(geo) ? (\n\t\t\t\t\t\t\t\t\t<Geography\n\t\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n\t\t\t\t\t\t\t\t\t\tgeography={geo}\n\t\t\t\t\t\t\t\t\t\tstroke=\"#FFF\"\n\t\t\t\t\t\t\t\t\t\tstrokeWidth={0.3}\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t\t\t\tconst { NAME } = geo.properties;\n\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME}`);\n\t\t\t\t\t\t\t\t\t\t\tsetgeo(geo);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent('');\n\t\t\t\t\t\t\t\t\t\t\tsetgeo(null);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\t\t\t\t\tfill: '#F53',\n\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tpressed: {\n\t\t\t\t\t\t\t\t\t\t\t\tfill: '#',\n\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</Geographies>\n\t\t\t\t</ZoomableGroup>\n\t\t\t</ComposableMap>\n\t\t</div>\n\t);\n};\n\nexport default memo(MapChart);\n"]},"metadata":{},"sourceType":"module"}