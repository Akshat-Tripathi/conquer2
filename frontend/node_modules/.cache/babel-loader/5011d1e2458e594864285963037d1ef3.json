{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\r\n   * If `true`, the component is checked.\r\n   */\n  checked: PropTypes.bool,\n\n  /**\r\n   * The icon to display when the component is checked.\r\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\r\n   * If `true`, the checkbox will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the ripple effect will be disabled.\r\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\r\n   * The icon to display when the component is unchecked.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * The id of the `input` element.\r\n   */\n  id: PropTypes.string,\n\n  /**\r\n   * If `true`, the component appears indeterminate.\r\n   * This does not set the native input element to indeterminate due\r\n   * to inconsistent behavior across browsers.\r\n   * However, we set a `data-indeterminate` attribute on the input.\r\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\r\n   * The icon to display when the component is indeterminate.\r\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\r\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\r\n   */\n  inputProps: PropTypes.object,\n\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\n  inputRef: refType,\n\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * If `true`, the `input` element will be required.\r\n   */\n  required: PropTypes.bool,\n\n  /**\r\n   * The size of the checkbox.\r\n   * `small` is equivalent to the dense checkbox styling.\r\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\r\n   * The value of the component. The DOM API casts this to a string.\r\n   * The browser uses \"on\" as the default value.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","map":{"version":3,"sources":["C:/Users/Akshat/Documents/Imperial/personal/conquer2/frontend/node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","refType","SwitchBase","CheckBoxOutlineBlankIcon","CheckBoxIcon","fade","IndeterminateCheckBoxIcon","capitalize","withStyles","styles","theme","root","color","palette","text","secondary","checked","disabled","indeterminate","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","defaultCheckedIcon","createElement","defaultIcon","defaultIndeterminateIcon","Checkbox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","_props$icon","icon","_props$indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","type","concat","cloneElement","fontSize","process","env","NODE_ENV","propTypes","bool","node","object","isRequired","oneOf","disableRipple","id","string","inputRef","onChange","func","required","value","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@material-ui/utils';\r\nimport SwitchBase from '../internal/SwitchBase';\r\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\r\nimport { fade } from '../styles/colorManipulator';\r\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\r\nimport capitalize from '../utils/capitalize';\r\nimport withStyles from '../styles/withStyles';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      color: theme.palette.text.secondary\r\n    },\r\n\r\n    /* Pseudo-class applied to the root element if `checked={true}`. */\r\n    checked: {},\r\n\r\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\r\n    disabled: {},\r\n\r\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\r\n    indeterminate: {},\r\n\r\n    /* Styles applied to the root element if `color=\"primary\"`. */\r\n    colorPrimary: {\r\n      '&$checked': {\r\n        color: theme.palette.primary.main,\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\r\n          // Reset on touch devices, it doesn't add specificity\r\n          '@media (hover: none)': {\r\n            backgroundColor: 'transparent'\r\n          }\r\n        }\r\n      },\r\n      '&$disabled': {\r\n        color: theme.palette.action.disabled\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"secondary\"`. */\r\n    colorSecondary: {\r\n      '&$checked': {\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\r\n          // Reset on touch devices, it doesn't add specificity\r\n          '@media (hover: none)': {\r\n            backgroundColor: 'transparent'\r\n          }\r\n        }\r\n      },\r\n      '&$disabled': {\r\n        color: theme.palette.action.disabled\r\n      }\r\n    }\r\n  };\r\n};\r\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\r\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\r\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\r\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\r\n  var _props$checkedIcon = props.checkedIcon,\r\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\r\n      classes = props.classes,\r\n      _props$color = props.color,\r\n      color = _props$color === void 0 ? 'secondary' : _props$color,\r\n      _props$icon = props.icon,\r\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\r\n      _props$indeterminate = props.indeterminate,\r\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\r\n      _props$indeterminateI = props.indeterminateIcon,\r\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\r\n      inputProps = props.inputProps,\r\n      _props$size = props.size,\r\n      size = _props$size === void 0 ? 'medium' : _props$size,\r\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\r\n    type: \"checkbox\",\r\n    classes: {\r\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\r\n      checked: classes.checked,\r\n      disabled: classes.disabled\r\n    },\r\n    color: color,\r\n    inputProps: _extends({\r\n      'data-indeterminate': indeterminate\r\n    }, inputProps),\r\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\r\n      fontSize: size === 'small' ? 'small' : 'default'\r\n    }),\r\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\r\n      fontSize: size === 'small' ? 'small' : 'default'\r\n    }),\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\r\n  /**\r\n   * If `true`, the component is checked.\r\n   */\r\n  checked: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon to display when the component is checked.\r\n   */\r\n  checkedIcon: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\r\n\r\n  /**\r\n   * If `true`, the checkbox will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the ripple effect will be disabled.\r\n   */\r\n  disableRipple: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon to display when the component is unchecked.\r\n   */\r\n  icon: PropTypes.node,\r\n\r\n  /**\r\n   * The id of the `input` element.\r\n   */\r\n  id: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the component appears indeterminate.\r\n   * This does not set the native input element to indeterminate due\r\n   * to inconsistent behavior across browsers.\r\n   * However, we set a `data-indeterminate` attribute on the input.\r\n   */\r\n  indeterminate: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon to display when the component is indeterminate.\r\n   */\r\n  indeterminateIcon: PropTypes.node,\r\n\r\n  /**\r\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\r\n   */\r\n  inputProps: PropTypes.object,\r\n\r\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\r\n  inputRef: refType,\r\n\r\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the `input` element will be required.\r\n   */\r\n  required: PropTypes.bool,\r\n\r\n  /**\r\n   * The size of the checkbox.\r\n   * `small` is equivalent to the dense checkbox styling.\r\n   */\r\n  size: PropTypes.oneOf(['small', 'medium']),\r\n\r\n  /**\r\n   * The value of the component. The DOM API casts this to a string.\r\n   * The browser uses \"on\" as the default value.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiCheckbox'\r\n})(Checkbox);"]},"metadata":{},"sourceType":"module"}