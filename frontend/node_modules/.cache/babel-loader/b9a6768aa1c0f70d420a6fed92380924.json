{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\src\\\\pages\\\\Map.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./Map.css\";\nimport { connect } from \"frontend/src/api/index.js\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"; //NOTE: For API, please see src/api/index.js;\n\nclass GameMap extends Component {\n  // componenetDidMount() {\n  //   let socket = new WebSocket(socketURL);\n  //   socket.onopen = () => {\n  //     console.log(\"Connection Successful\");\n  //   };\n  //   socket.onmessage = (msg) => {\n  //     const message = JSON.parse(msg.data);\n  //     console.log(msg);\n  //   };\n  //   socket.onclose = () => {\n  //     console.log(\"Disconnected\");\n  //   };\n  // }\n  constructor() {\n    super();\n    connect();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MapDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nfunction MapDisplay() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n} //Variables for each country to display for Sidebar\n\n\nvar country;\nvar pop_est;\nvar gdp;\nvar subrg;\nvar continent;\nvar displayCountryDetails = false;\nvar troopsInLand;\nvar yourland;\n\nconst CountryDetails = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Spy Report On \", country, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Population: \", pop_est), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"GDP: \", gdp), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Subregion: \", subrg), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Continent: \", continent));\n};\n\nfunction SideBar() {\n  const [state, setState] = useState(\"\");\n  const [spydata, setSpydata] = useState({\n    Country: \"\",\n    Population: \"\",\n    GDP: \"\",\n    Subregion: \"\",\n    Continent: \"\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-info-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Welcome Commander!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"), displayCountryDetails ? /*#__PURE__*/React.createElement(CountryDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 36\n    }\n  }) : null)), /*#__PURE__*/React.createElement(MapSettings, {\n    setTooltipContent: setState,\n    setSpydata: setSpydata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, state));\n}\n\nconst getnum = num => {\n  var num = Math.round(num);\n\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n\n  return num;\n};\n\nconst MapSettings = ({\n  setTooltipContent,\n  setSpydata\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    fill: \"#AAA\",\n    stroke: \"#FFF\",\n    onMouseEnter: () => {\n      const {\n        NAME,\n        POP_EST,\n        GDP_MD_EST,\n        SUBREGION,\n        CONTINENT\n      } = geo.properties;\n      setTooltipContent(`${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`);\n      country = NAME;\n      pop_est = getnum(POP_EST);\n      gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\n      subrg = SUBREGION;\n      continent = CONTINENT; // setSpydata(NAME, POP_EST, GDP_MD_EST, SUBREGION, CONTINENT);\n\n      displayCountryDetails = true;\n    },\n    onMouseLeave: () => {\n      setTooltipContent(\"\"); // setSpydata(\"\", \"\", \"\", \"\", \"\");\n\n      displayCountryDetails = false;\n    },\n    onClick: () => {\n      const {\n        NAME,\n        POP_EST,\n        GDP_MD_EST,\n        SUBREGION,\n        CONTINENT\n      } = geo.properties;\n      country = NAME;\n      pop_est = getnum(POP_EST);\n      gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\n      subrg = SUBREGION;\n      continent = CONTINENT;\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default GameMap;","map":{"version":3,"sources":["C:/Users/Akshat/Documents/Imperial/personal/conquer2/frontend/src/pages/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","ReactTooltip","useSpring","animated","connect","geoUrl","GameMap","constructor","render","MapDisplay","country","pop_est","gdp","subrg","continent","displayCountryDetails","troopsInLand","yourland","CountryDetails","props","SideBar","state","setState","spydata","setSpydata","Country","Population","GDP","Subregion","Continent","getnum","num","Math","round","pow","MapSettings","setTooltipContent","geographies","map","geo","rsmKey","NAME","POP_EST","GDP_MD_EST","SUBREGION","CONTINENT","properties","default","fill","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport \"./Map.css\";\r\nimport { connect } from \"frontend/src/api/index.js\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n//NOTE: For API, please see src/api/index.js;\r\n\r\nclass GameMap extends Component {\r\n  // componenetDidMount() {\r\n  //   let socket = new WebSocket(socketURL);\r\n\r\n  //   socket.onopen = () => {\r\n  //     console.log(\"Connection Successful\");\r\n  //   };\r\n\r\n  //   socket.onmessage = (msg) => {\r\n  //     const message = JSON.parse(msg.data);\r\n  //     console.log(msg);\r\n  //   };\r\n\r\n  //   socket.onclose = () => {\r\n  //     console.log(\"Disconnected\");\r\n  //   };\r\n  // }\r\n\r\n  constructor() {\r\n    super();\r\n    connect();\r\n  }\r\n\r\n  render() {\r\n    return <MapDisplay />;\r\n  }\r\n}\r\n\r\nfunction MapDisplay() {\r\n  return (\r\n    <div>\r\n      <SideBar />\r\n    </div>\r\n  );\r\n}\r\n\r\n//Variables for each country to display for Sidebar\r\nvar country;\r\nvar pop_est;\r\nvar gdp;\r\nvar subrg;\r\nvar continent;\r\nvar displayCountryDetails = false;\r\nvar troopsInLand;\r\nvar yourland;\r\n\r\nconst CountryDetails = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Spy Report On {country}:</h2>\r\n      <h3>Population: {pop_est}</h3>\r\n      <h3>GDP: {gdp}</h3>\r\n      <h3>Subregion: {subrg}</h3>\r\n      <h3>Continent: {continent}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction SideBar() {\r\n  const [state, setState] = useState(\"\");\r\n  const [spydata, setSpydata] = useState({\r\n    Country: \"\",\r\n    Population: \"\",\r\n    GDP: \"\",\r\n    Subregion: \"\",\r\n    Continent: \"\",\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"map-sidebar-wrapper\">\r\n        <div className=\"map-sidebar-info-wrapper\">\r\n          <h1>Welcome Commander!</h1>\r\n          <p>\r\n            This is your war control room. Help us attain victory over our\r\n            enemies. The Gods are on our side!\r\n          </p>\r\n          {displayCountryDetails ? <CountryDetails /> : null}\r\n        </div>\r\n      </div>\r\n      <MapSettings setTooltipContent={setState} setSpydata={setSpydata} />\r\n      <ReactTooltip>{state}</ReactTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getnum = (num) => {\r\n  var num = Math.round(num);\r\n  if (num > Math.pow(10, 12)) {\r\n    num = num / Math.pow(10, 12) + \" Trillion\";\r\n  } else if (num > Math.pow(10, 9)) {\r\n    num = num / Math.pow(10, 9) + \" Billion\";\r\n  } else if (num > Math.pow(10, 6)) {\r\n    num = num / Math.pow(10, 6) + \" Million\";\r\n  }\r\n  return num;\r\n};\r\n\r\nconst MapSettings = ({ setTooltipContent, setSpydata }) => {\r\n  return (\r\n    <div className=\"map-wrapper\">\r\n      <ComposableMap data-tip=\"\">\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill=\"#AAA\"\r\n                  stroke=\"#FFF\"\r\n                  onMouseEnter={() => {\r\n                    const {\r\n                      NAME,\r\n                      POP_EST,\r\n                      GDP_MD_EST,\r\n                      SUBREGION,\r\n                      CONTINENT,\r\n                    } = geo.properties;\r\n                    setTooltipContent(\r\n                      `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\r\n                    );\r\n                    country = NAME;\r\n                    pop_est = getnum(POP_EST);\r\n                    gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\r\n                    subrg = SUBREGION;\r\n                    continent = CONTINENT;\r\n                    // setSpydata(NAME, POP_EST, GDP_MD_EST, SUBREGION, CONTINENT);\r\n                    displayCountryDetails = true;\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                    // setSpydata(\"\", \"\", \"\", \"\", \"\");\r\n                    displayCountryDetails = false;\r\n                  }}\r\n                  onClick={() => {\r\n                    const {\r\n                      NAME,\r\n                      POP_EST,\r\n                      GDP_MD_EST,\r\n                      SUBREGION,\r\n                      CONTINENT,\r\n                    } = geo.properties;\r\n                    country = NAME;\r\n                    pop_est = getnum(POP_EST);\r\n                    gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\r\n                    subrg = SUBREGION;\r\n                    continent = CONTINENT;\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\",\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\",\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameMap;\r\n"]},"metadata":{},"sourceType":"module"}