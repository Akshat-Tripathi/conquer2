{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = {\n  root: {\n    width: 40,\n    flexShrink: 0\n  },\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  }\n};\n/**\r\n * @ignore - internal component.\r\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nvar TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      direction = props.direction,\n      orientation = props.orientation,\n      visible = props.visible,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\n\n  var className = clsx(classes.root, classNameProp, orientation === 'vertical' && classes.vertical);\n\n  if (!visible) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: className,\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Which direction should the button indicate?\r\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\r\n   * The tabs orientation (layout flow direction).\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\r\n   * Should the button be present or just consume space.\r\n   */\n  visible: PropTypes.bool.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabScrollButton'\n})(TabScrollButton);","map":{"version":3,"sources":["C:/Users/Akshat/Documents/Imperial/personal/conquer2/frontend/node_modules/@material-ui/core/esm/Tabs/TabScrollButton.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","KeyboardArrowLeft","KeyboardArrowRight","withStyles","ButtonBase","styles","root","width","flexShrink","vertical","height","transform","_ref","createElement","fontSize","_ref2","TabScrollButton","forwardRef","props","ref","classes","classNameProp","className","direction","orientation","visible","other","component","role","tabIndex","process","env","NODE_ENV","propTypes","object","isRequired","string","oneOf","bool","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\n\r\n/* eslint-disable jsx-a11y/aria-role */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\r\nimport withStyles from '../styles/withStyles';\r\nimport ButtonBase from '../ButtonBase';\r\nexport var styles = {\r\n  root: {\r\n    width: 40,\r\n    flexShrink: 0\r\n  },\r\n  vertical: {\r\n    width: '100%',\r\n    height: 40,\r\n    '& svg': {\r\n      transform: 'rotate(90deg)'\r\n    }\r\n  }\r\n};\r\n/**\r\n * @ignore - internal component.\r\n */\r\n\r\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\r\n  fontSize: \"small\"\r\n});\r\n\r\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowRight, {\r\n  fontSize: \"small\"\r\n});\r\n\r\nvar TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\r\n  var classes = props.classes,\r\n      classNameProp = props.className,\r\n      direction = props.direction,\r\n      orientation = props.orientation,\r\n      visible = props.visible,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\r\n\r\n  var className = clsx(classes.root, classNameProp, orientation === 'vertical' && classes.vertical);\r\n\r\n  if (!visible) {\r\n    return /*#__PURE__*/React.createElement(\"div\", {\r\n      className: className\r\n    });\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\r\n    component: \"div\",\r\n    className: className,\r\n    ref: ref,\r\n    role: null,\r\n    tabIndex: null\r\n  }, other), direction === 'left' ? _ref : _ref2);\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Which direction should the button indicate?\r\n   */\r\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\r\n\r\n  /**\r\n   * The tabs orientation (layout flow direction).\r\n   */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\r\n\r\n  /**\r\n   * Should the button be present or just consume space.\r\n   */\r\n  visible: PropTypes.bool.isRequired\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'PrivateTabScrollButton'\r\n})(TabScrollButton);"]},"metadata":{},"sourceType":"module"}