{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component,useState}from\"react\";import{ComposableMap,Geographies,Geography,ZoomableGroup}from\"react-simple-maps\";import ReactTooltip from\"react-tooltip\";import{useSpring,animated}from\"react-spring\";import\"./Map.css\";import{connect}from\"frontend/src/api/index.js\";var geoUrl=\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";//NOTE: For API, please see src/api/index.js;\nvar GameMap=/*#__PURE__*/function(_Component){_inherits(GameMap,_Component);var _super=_createSuper(GameMap);// componenetDidMount() {\n//   let socket = new WebSocket(socketURL);\n//   socket.onopen = () => {\n//     console.log(\"Connection Successful\");\n//   };\n//   socket.onmessage = (msg) => {\n//     const message = JSON.parse(msg.data);\n//     console.log(msg);\n//   };\n//   socket.onclose = () => {\n//     console.log(\"Disconnected\");\n//   };\n// }\nfunction GameMap(){var _this;_classCallCheck(this,GameMap);_this=_super.call(this);connect();return _this;}_createClass(GameMap,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(MapDisplay,null);}}]);return GameMap;}(Component);function MapDisplay(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(SideBar,null));}//Variables for each country to display for Sidebar\nvar country;var pop_est;var gdp;var subrg;var continent;var displayCountryDetails=false;var troopsInLand;var yourland;var CountryDetails=function CountryDetails(props){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Spy Report On \",country,\":\"),/*#__PURE__*/React.createElement(\"h3\",null,\"Population: \",pop_est),/*#__PURE__*/React.createElement(\"h3\",null,\"GDP: \",gdp),/*#__PURE__*/React.createElement(\"h3\",null,\"Subregion: \",subrg),/*#__PURE__*/React.createElement(\"h3\",null,\"Continent: \",continent));};function SideBar(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState({Country:\"\",Population:\"\",GDP:\"\",Subregion:\"\",Continent:\"\"}),_useState4=_slicedToArray(_useState3,2),spydata=_useState4[0],setSpydata=_useState4[1];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"map-sidebar-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"map-sidebar-info-wrapper\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Welcome Commander!\"),/*#__PURE__*/React.createElement(\"p\",null,\"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"),displayCountryDetails?/*#__PURE__*/React.createElement(CountryDetails,null):null)),/*#__PURE__*/React.createElement(MapSettings,{setTooltipContent:setState,setSpydata:setSpydata}),/*#__PURE__*/React.createElement(ReactTooltip,null,state));}var getnum=function getnum(num){var num=Math.round(num);if(num>Math.pow(10,12)){num=num/Math.pow(10,12)+\" Trillion\";}else if(num>Math.pow(10,9)){num=num/Math.pow(10,9)+\" Billion\";}else if(num>Math.pow(10,6)){num=num/Math.pow(10,6)+\" Million\";}return num;};var MapSettings=function MapSettings(_ref){var setTooltipContent=_ref.setTooltipContent,setSpydata=_ref.setSpydata;return/*#__PURE__*/React.createElement(\"div\",{className:\"map-wrapper\"},/*#__PURE__*/React.createElement(ComposableMap,{\"data-tip\":\"\"},/*#__PURE__*/React.createElement(ZoomableGroup,null,/*#__PURE__*/React.createElement(Geographies,{geography:geoUrl},function(_ref2){var geographies=_ref2.geographies;return geographies.map(function(geo){return/*#__PURE__*/React.createElement(Geography,{key:geo.rsmKey,geography:geo,fill:\"#AAA\",stroke:\"#FFF\",onMouseEnter:function onMouseEnter(){var _geo$properties=geo.properties,NAME=_geo$properties.NAME,POP_EST=_geo$properties.POP_EST,GDP_MD_EST=_geo$properties.GDP_MD_EST,SUBREGION=_geo$properties.SUBREGION,CONTINENT=_geo$properties.CONTINENT;setTooltipContent(\"\".concat(NAME,\" - $\").concat(getnum(GDP_MD_EST*Math.pow(10,6))));country=NAME;pop_est=getnum(POP_EST);gdp=getnum(GDP_MD_EST*Math.pow(10,6));subrg=SUBREGION;continent=CONTINENT;// setSpydata(NAME, POP_EST, GDP_MD_EST, SUBREGION, CONTINENT);\ndisplayCountryDetails=true;},onMouseLeave:function onMouseLeave(){setTooltipContent(\"\");// setSpydata(\"\", \"\", \"\", \"\", \"\");\ndisplayCountryDetails=false;},onClick:function onClick(){var _geo$properties2=geo.properties,NAME=_geo$properties2.NAME,POP_EST=_geo$properties2.POP_EST,GDP_MD_EST=_geo$properties2.GDP_MD_EST,SUBREGION=_geo$properties2.SUBREGION,CONTINENT=_geo$properties2.CONTINENT;country=NAME;pop_est=getnum(POP_EST);gdp=getnum(GDP_MD_EST*Math.pow(10,6));subrg=SUBREGION;continent=CONTINENT;},style:{default:{fill:\"#D6D6DA\",outline:\"none\"},hover:{fill:\"#F53\",outline:\"none\"},pressed:{fill:\"#D6D6DA\",outline:\"none\"}}});});}))));};export default GameMap;","map":{"version":3,"sources":["C:/Users/Akshat/Documents/Imperial/personal/conquer2/frontend/src/pages/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","ReactTooltip","useSpring","animated","connect","geoUrl","GameMap","MapDisplay","country","pop_est","gdp","subrg","continent","displayCountryDetails","troopsInLand","yourland","CountryDetails","props","SideBar","state","setState","Country","Population","GDP","Subregion","Continent","spydata","setSpydata","getnum","num","Math","round","pow","MapSettings","setTooltipContent","geographies","map","geo","rsmKey","properties","NAME","POP_EST","GDP_MD_EST","SUBREGION","CONTINENT","default","fill","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport \"./Map.css\";\r\nimport { connect } from \"frontend/src/api/index.js\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n//NOTE: For API, please see src/api/index.js;\r\n\r\nclass GameMap extends Component {\r\n  // componenetDidMount() {\r\n  //   let socket = new WebSocket(socketURL);\r\n\r\n  //   socket.onopen = () => {\r\n  //     console.log(\"Connection Successful\");\r\n  //   };\r\n\r\n  //   socket.onmessage = (msg) => {\r\n  //     const message = JSON.parse(msg.data);\r\n  //     console.log(msg);\r\n  //   };\r\n\r\n  //   socket.onclose = () => {\r\n  //     console.log(\"Disconnected\");\r\n  //   };\r\n  // }\r\n\r\n  constructor() {\r\n    super();\r\n    connect();\r\n  }\r\n\r\n  render() {\r\n    return <MapDisplay />;\r\n  }\r\n}\r\n\r\nfunction MapDisplay() {\r\n  return (\r\n    <div>\r\n      <SideBar />\r\n    </div>\r\n  );\r\n}\r\n\r\n//Variables for each country to display for Sidebar\r\nvar country;\r\nvar pop_est;\r\nvar gdp;\r\nvar subrg;\r\nvar continent;\r\nvar displayCountryDetails = false;\r\nvar troopsInLand;\r\nvar yourland;\r\n\r\nconst CountryDetails = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Spy Report On {country}:</h2>\r\n      <h3>Population: {pop_est}</h3>\r\n      <h3>GDP: {gdp}</h3>\r\n      <h3>Subregion: {subrg}</h3>\r\n      <h3>Continent: {continent}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction SideBar() {\r\n  const [state, setState] = useState(\"\");\r\n  const [spydata, setSpydata] = useState({\r\n    Country: \"\",\r\n    Population: \"\",\r\n    GDP: \"\",\r\n    Subregion: \"\",\r\n    Continent: \"\",\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"map-sidebar-wrapper\">\r\n        <div className=\"map-sidebar-info-wrapper\">\r\n          <h1>Welcome Commander!</h1>\r\n          <p>\r\n            This is your war control room. Help us attain victory over our\r\n            enemies. The Gods are on our side!\r\n          </p>\r\n          {displayCountryDetails ? <CountryDetails /> : null}\r\n        </div>\r\n      </div>\r\n      <MapSettings setTooltipContent={setState} setSpydata={setSpydata} />\r\n      <ReactTooltip>{state}</ReactTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getnum = (num) => {\r\n  var num = Math.round(num);\r\n  if (num > Math.pow(10, 12)) {\r\n    num = num / Math.pow(10, 12) + \" Trillion\";\r\n  } else if (num > Math.pow(10, 9)) {\r\n    num = num / Math.pow(10, 9) + \" Billion\";\r\n  } else if (num > Math.pow(10, 6)) {\r\n    num = num / Math.pow(10, 6) + \" Million\";\r\n  }\r\n  return num;\r\n};\r\n\r\nconst MapSettings = ({ setTooltipContent, setSpydata }) => {\r\n  return (\r\n    <div className=\"map-wrapper\">\r\n      <ComposableMap data-tip=\"\">\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill=\"#AAA\"\r\n                  stroke=\"#FFF\"\r\n                  onMouseEnter={() => {\r\n                    const {\r\n                      NAME,\r\n                      POP_EST,\r\n                      GDP_MD_EST,\r\n                      SUBREGION,\r\n                      CONTINENT,\r\n                    } = geo.properties;\r\n                    setTooltipContent(\r\n                      `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\r\n                    );\r\n                    country = NAME;\r\n                    pop_est = getnum(POP_EST);\r\n                    gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\r\n                    subrg = SUBREGION;\r\n                    continent = CONTINENT;\r\n                    // setSpydata(NAME, POP_EST, GDP_MD_EST, SUBREGION, CONTINENT);\r\n                    displayCountryDetails = true;\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                    // setSpydata(\"\", \"\", \"\", \"\", \"\");\r\n                    displayCountryDetails = false;\r\n                  }}\r\n                  onClick={() => {\r\n                    const {\r\n                      NAME,\r\n                      POP_EST,\r\n                      GDP_MD_EST,\r\n                      SUBREGION,\r\n                      CONTINENT,\r\n                    } = geo.properties;\r\n                    country = NAME;\r\n                    pop_est = getnum(POP_EST);\r\n                    gdp = getnum(GDP_MD_EST * Math.pow(10, 6));\r\n                    subrg = SUBREGION;\r\n                    continent = CONTINENT;\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\",\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\",\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameMap;\r\n"]},"metadata":{},"sourceType":"module"}