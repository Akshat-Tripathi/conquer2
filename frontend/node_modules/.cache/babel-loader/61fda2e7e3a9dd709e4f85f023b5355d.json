{"ast":null,"code":"var loaddetails;\n\nlet connect = () => {\n  const id = document.cookie.split(\"; \").map(s => s.split(\"=\")).filter(arr => arr[0] == \"id\")[0][1];\n  const socketURL = window.location.href.replace(\"http://\", \"ws://\") + \"/\" + id + \"/ws\";\n  var socket = new WebSocket(socketURL);\n  console.log(\"Attempting connection to: \" + socketURL);\n\n  socket.onopen = () => {\n    console.log(\"Successfully Connected\");\n  };\n\n  socket.onmessage = msg => {\n    loaddetails = msg; // console.log(msg);\n  };\n\n  socket.onclose = event => {\n    console.log(\"Socket Closed Connection: \", event);\n    alert(\"Invalid login\"); //TODO: redirect to an error page\n    //window.location.replace(window.location.href.replace(\"/game\", \"/error\"));\n  };\n\n  socket.onerror = error => {\n    console.log(\"Socket Error: \", error);\n  }; // socket.send\n  // socket.addEventListener(\"/join\", () => )\n  // const id = document.cookie.split(\"; \")[0].replace(\"id=\", \"\");\n  // const socketURL =\n  //   window.location.href.replace(\"http://\", \"ws://\") + \"/\" + id + \"/ws\";\n  // class Sockets {\n  //   constructor(socket = new WebSocket(socketURL), ee = new EventEmitter())\n\n};\n\nexport { connect, loaddetails };","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.2/conquer2/frontend/src/api/index.js"],"names":["loaddetails","connect","id","document","cookie","split","map","s","filter","arr","socketURL","window","location","href","replace","socket","WebSocket","console","log","onopen","onmessage","msg","onclose","event","alert","onerror","error"],"mappings":"AAAA,IAAIA,WAAJ;;AACA,IAAIC,OAAO,GAAG,MAAM;AAClB,QAAMC,EAAE,GAAGC,QAAQ,CAACC,MAAT,CACRC,KADQ,CACF,IADE,EAERC,GAFQ,CAEHC,CAAD,IAAOA,CAAC,CAACF,KAAF,CAAQ,GAAR,CAFH,EAGRG,MAHQ,CAGAC,GAAD,IAASA,GAAG,CAAC,CAAD,CAAH,IAAU,IAHlB,EAGwB,CAHxB,EAG2B,CAH3B,CAAX;AAIA,QAAMC,SAAS,GACbC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,SAA7B,EAAwC,OAAxC,IAAmD,GAAnD,GAAyDZ,EAAzD,GAA8D,KADhE;AAGA,MAAIa,MAAM,GAAG,IAAIC,SAAJ,CAAcN,SAAd,CAAb;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BR,SAA3C;;AAEAK,EAAAA,MAAM,CAACI,MAAP,GAAgB,MAAM;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,GAFD;;AAIAH,EAAAA,MAAM,CAACK,SAAP,GAAoBC,GAAD,IAAS;AAC1BrB,IAAAA,WAAW,GAAGqB,GAAd,CAD0B,CAE1B;AACD,GAHD;;AAKAN,EAAAA,MAAM,CAACO,OAAP,GAAkBC,KAAD,IAAW;AAC1BN,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CK,KAA1C;AACAC,IAAAA,KAAK,CAAC,eAAD,CAAL,CAF0B,CAI1B;AACA;AACD,GAND;;AAQAT,EAAAA,MAAM,CAACU,OAAP,GAAkBC,KAAD,IAAW;AAC1BT,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BQ,KAA9B;AACD,GAFD,CA5BkB,CAgClB;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACD,CAzCD;;AA2CA,SAASzB,OAAT,EAAkBD,WAAlB","sourcesContent":["var loaddetails;\nlet connect = () => {\n  const id = document.cookie\n    .split(\"; \")\n    .map((s) => s.split(\"=\"))\n    .filter((arr) => arr[0] == \"id\")[0][1];\n  const socketURL =\n    window.location.href.replace(\"http://\", \"ws://\") + \"/\" + id + \"/ws\";\n\n  var socket = new WebSocket(socketURL);\n  console.log(\"Attempting connection to: \" + socketURL);\n\n  socket.onopen = () => {\n    console.log(\"Successfully Connected\");\n  };\n\n  socket.onmessage = (msg) => {\n    loaddetails = msg;\n    // console.log(msg);\n  };\n\n  socket.onclose = (event) => {\n    console.log(\"Socket Closed Connection: \", event);\n    alert(\"Invalid login\");\n\n    //TODO: redirect to an error page\n    //window.location.replace(window.location.href.replace(\"/game\", \"/error\"));\n  };\n\n  socket.onerror = (error) => {\n    console.log(\"Socket Error: \", error);\n  };\n\n  // socket.send\n\n  // socket.addEventListener(\"/join\", () => )\n\n  // const id = document.cookie.split(\"; \")[0].replace(\"id=\", \"\");\n  // const socketURL =\n  //   window.location.href.replace(\"http://\", \"ws://\") + \"/\" + id + \"/ws\";\n  // class Sockets {\n  //   constructor(socket = new WebSocket(socketURL), ee = new EventEmitter())\n};\n\nexport { connect, loaddetails };\n"]},"metadata":{},"sourceType":"module"}