{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.2/conquer2/frontend/src/pages/Map.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\"; // import { useSpring, animated } from \"react-spring\";\n\nimport \"./Map.css\";\nimport { connect, loaddetails } from \"../api/index.js\";\nimport Intro2 from \"../shashgonenuts/intro2\";\nimport { username } from \"./Home.jsx\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nclass GameMap extends Component {\n  constructor() {\n    super();\n    connect();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SideBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nfunction SideBar() {\n  //Fetch #troops, attack, move options, fix data vals\n  const [state, setState] = useState(\"\");\n  const [name, setname] = useState(\"\");\n  const [pop_est, setpop_est] = useState(\"\");\n  const [gdp, setgdp] = useState(\"\");\n  const [subrg, setsubrg] = useState(\"\");\n  const [continent, setcontinent] = useState(\"\");\n  const [display, setdisplay] = useState(false);\n  const [isClicked, setisClicked] = useState(false);\n\n  const CountryDetails = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Spy Report On \", name, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Population: \", pop_est), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"GDP (PPP): \", gdp), continent !== \"South America\" && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 43\n      }\n    }, \"Subregion: \", subrg), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Continent: \", continent));\n  };\n\n  handleIsClicked = () => {\n    setisClicked(!isClicked);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-info-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"START THE CONQUEST!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Welcome Commander \", username, \"!\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"), display && /*#__PURE__*/React.createElement(CountryDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(MapSettings, {\n    setTooltipContent: setState,\n    setname: setname,\n    setgdp: setgdp,\n    setpop_est: setpop_est,\n    setdisplay: setdisplay,\n    setcontinent: setcontinent,\n    setsubrg: setsubrg,\n    isClicked: handleIsClicked(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, state));\n}\n\nconst getnum = num => {\n  var num = Math.round(num);\n\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n\n  return num;\n}; //Countries to not display\n\n\nfunction notThisCountry(country) {\n  const {\n    NAME\n  } = country.properties;\n  return NAME !== \"\";\n} //TODO: player team colour for country\n\n\nfunction countryColors(country) {\n  const {\n    NAME,\n    ISO_A2\n  } = country.properties;\n  return \"#AAA\";\n} //TODO: player about to move or attacked\n\n\nfunction countryClicked(country) {// return countryColors()\n}\n\nfunction toAttackColorFill() {\n  return null;\n}\n\nfunction toAttackColorStroke() {\n  return null;\n}\n\nconst MapSettings = ({\n  setTooltipContent,\n  setname,\n  setpop_est,\n  setsubrg,\n  setcontinent,\n  setgdp,\n  setdisplay,\n  isClicked\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => notThisCountry(geo) ? /*#__PURE__*/React.createElement(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    fill: isClicked ? toAttackColorFill(geo) : countryColors(geo),\n    stroke: isClicked ? toAttackColorStroke(geo) : \"#FFF\",\n    onMouseEnter: () => {\n      const {\n        NAME,\n        POP_EST,\n        GDP_MD_EST,\n        SUBREGION,\n        CONTINENT,\n        ISO_A2\n      } = geo.properties; // setTooltipContent(\n      //   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n      // );\n\n      setTooltipContent(`${NAME} - ENEMY TERRITORY`);\n      setname(NAME);\n      setpop_est(getnum(POP_EST));\n      setgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n      setsubrg(SUBREGION);\n      setcontinent(CONTINENT);\n      setdisplay(true);\n    },\n    onMouseLeave: () => {\n      setTooltipContent(\"\");\n      setdisplay(false);\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      }\n    },\n    onClick: () => {\n      const {\n        NAME\n      } = geo.properties;\n      isClicked = !isClicked;\n      countryClicked(NAME);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }) : null)))));\n};\n\nexport default GameMap;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.2/conquer2/frontend/src/pages/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","ReactTooltip","connect","loaddetails","Intro2","username","geoUrl","GameMap","constructor","render","SideBar","state","setState","name","setname","pop_est","setpop_est","gdp","setgdp","subrg","setsubrg","continent","setcontinent","display","setdisplay","isClicked","setisClicked","CountryDetails","handleIsClicked","getnum","num","Math","round","pow","notThisCountry","country","NAME","properties","countryColors","ISO_A2","countryClicked","toAttackColorFill","toAttackColorStroke","MapSettings","setTooltipContent","geographies","map","geo","rsmKey","POP_EST","GDP_MD_EST","SUBREGION","CONTINENT","default","fill","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\n// import { useSpring, animated } from \"react-spring\";\nimport \"./Map.css\";\nimport { connect, loaddetails } from \"../api/index.js\";\nimport Intro2 from \"../shashgonenuts/intro2\";\nimport { username } from \"./Home.jsx\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nclass GameMap extends Component {\n  constructor() {\n    super();\n    connect();\n  }\n\n  render() {\n    return <SideBar />;\n  }\n}\n\nfunction SideBar() {\n  //Fetch #troops, attack, move options, fix data vals\n  const [state, setState] = useState(\"\");\n\n  const [name, setname] = useState(\"\");\n  const [pop_est, setpop_est] = useState(\"\");\n  const [gdp, setgdp] = useState(\"\");\n  const [subrg, setsubrg] = useState(\"\");\n  const [continent, setcontinent] = useState(\"\");\n  const [display, setdisplay] = useState(false);\n  const [isClicked, setisClicked] = useState(false);\n\n  const CountryDetails = () => {\n    return (\n      <div>\n        <h2>Spy Report On {name}:</h2>\n        <h3>Population: {pop_est}</h3>\n        <h3>GDP (PPP): {gdp}</h3>\n        {continent !== \"South America\" && <h3>Subregion: {subrg}</h3>}\n        <h3>Continent: {continent}</h3>\n      </div>\n    );\n  };\n\n  handleIsClicked = () => {\n    setisClicked(!isClicked);\n  };\n\n  return (\n    <div>\n      <div className=\"map-sidebar-wrapper\">\n        <div className=\"map-sidebar-info-wrapper\">\n          <div>\n            <h1>START THE CONQUEST!</h1>\n            <h2>Welcome Commander {username}!</h2>\n          </div>\n          <p>\n            This is your war control room. Help us attain victory over our\n            enemies. The Gods are on our side!\n          </p>\n          {display && <CountryDetails />}\n        </div>\n      </div>\n      <MapSettings\n        setTooltipContent={setState}\n        setname={setname}\n        setgdp={setgdp}\n        setpop_est={setpop_est}\n        setdisplay={setdisplay}\n        setcontinent={setcontinent}\n        setsubrg={setsubrg}\n        isClicked={handleIsClicked()}\n      />\n      <ReactTooltip>{state}</ReactTooltip>\n    </div>\n  );\n}\n\nconst getnum = (num) => {\n  var num = Math.round(num);\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n  return num;\n};\n\n//Countries to not display\nfunction notThisCountry(country) {\n  const { NAME } = country.properties;\n  return NAME !== \"\";\n}\n\n//TODO: player team colour for country\nfunction countryColors(country) {\n  const { NAME, ISO_A2 } = country.properties;\n  return \"#AAA\";\n}\n\n//TODO: player about to move or attacked\nfunction countryClicked(country) {\n  // return countryColors()\n}\n\nfunction toAttackColorFill() {\n  return null;\n}\n\nfunction toAttackColorStroke() {\n  return null;\n}\n\nconst MapSettings = ({\n  setTooltipContent,\n  setname,\n  setpop_est,\n  setsubrg,\n  setcontinent,\n  setgdp,\n  setdisplay,\n  isClicked,\n}) => {\n  return (\n    <div className=\"map-wrapper\">\n      <ComposableMap data-tip=\"\">\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) =>\n                notThisCountry(geo) ? (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    fill={\n                      isClicked ? toAttackColorFill(geo) : countryColors(geo)\n                    }\n                    stroke={isClicked ? toAttackColorStroke(geo) : \"#FFF\"}\n                    onMouseEnter={() => {\n                      const {\n                        NAME,\n                        POP_EST,\n                        GDP_MD_EST,\n                        SUBREGION,\n                        CONTINENT,\n                        ISO_A2,\n                      } = geo.properties;\n\n                      // setTooltipContent(\n                      //   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n                      // );\n\n                      setTooltipContent(`${NAME} - ENEMY TERRITORY`);\n                      setname(NAME);\n                      setpop_est(getnum(POP_EST));\n                      setgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n                      setsubrg(SUBREGION);\n                      setcontinent(CONTINENT);\n                      setdisplay(true);\n                    }}\n                    onMouseLeave={() => {\n                      setTooltipContent(\"\");\n                      setdisplay(false);\n                    }}\n                    style={{\n                      default: {\n                        fill: \"#D6D6DA\",\n                        outline: \"none\",\n                      },\n                      hover: {\n                        fill: \"#F53\",\n                        outline: \"none\",\n                      },\n                      pressed: {\n                        fill: \"#D6D6DA\",\n                        outline: \"none\",\n                      },\n                    }}\n                    onClick={() => {\n                      const { NAME } = geo.properties;\n                      isClicked = !isClicked;\n                      countryClicked(NAME);\n                    }}\n                  />\n                ) : null\n              )\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default GameMap;\n"]},"metadata":{},"sourceType":"module"}