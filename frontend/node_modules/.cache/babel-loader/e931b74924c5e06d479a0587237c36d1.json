{"ast":null,"code":"import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport { transformer } from \"../transform.js\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit.js\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function (x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function () {\n  var k = 1,\n      tx = 0,\n      ty = 0,\n      sx = 1,\n      sy = 1,\n      transform = identity,\n      // scale, translate and reflect\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      // clip extent\n  postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function (stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function (_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function (_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function (_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function (_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function (_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function (_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function (extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function (size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function (width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function (height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.2/conquer2/frontend/node_modules/d3-geo/src/projection/identity.js"],"names":["clipRectangle","identity","transformer","fitExtent","fitSize","fitWidth","fitHeight","scaleTranslate","kx","ky","tx","ty","point","x","y","stream","k","sx","sy","transform","x0","y0","x1","y1","postclip","cache","cacheStream","projection","reset","_","arguments","length","clipExtent","scale","translate","reflectX","reflectY","extent","object","size","width","height"],"mappings":"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","sourcesContent":["import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}