{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx\";\nimport React, { Component, useState } from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup, Annotation, Marker, useZoomPan } from 'react-simple-maps';\nimport ReactTooltip from 'react-tooltip'; // import { useSpring, animated } from \"react-spring\";\n\nimport './Map.css';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { geoCentroid } from 'd3-geo';\nimport { Typography, Paper } from '@material-ui/core';\nconst username = 'Shashwat';\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n  constructor(Troops, Player) {\n    this.Troops = Troops;\n    this.Player = Player;\n  }\n\n}\n\nclass GameMap extends Component {\n  //TODO: Fix go connection\n  // constructor() {\n  // \tsuper();\n  // \tsocket = connect();\n  // \tsocket.onmessage = (msg) => {\n  // \t\tvar action = JSON.parse(msg.data);\n  // \t\tswitch (action.Type) {\n  // \t\t\tcase 'updateTroops':\n  // \t\t\t\ttroops = action.Troops;\n  // \t\t\t\tbreak;\n  // \t\t\tcase 'updateCountry':\n  // \t\t\t\tif (\n  // \t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n  // \t\t\t\t\tcountryStates[action.Country].Player != action.Player\n  // \t\t\t\t) {\n  // \t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n  // \t\t\t\t} else {\n  // \t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n  // \t\t\t\t}\n  // \t\t\t\tbreak;\n  // \t\t\tcase 'newPlayer':\n  // \t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n  // \t\t\t\tplayerColours[action.Player] = action.Country;\n  // \t\t\t\tplayers.push(action.Player);\n  // \t\t}\n  // \t};\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(SideBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }\n    });\n  }\n\n}\n\nfunction SideBar() {\n  //Fetch #troops, attack, move options, fix data vals\n  const [state, setState] = useState('');\n  const [name, setname] = useState('');\n  const [pop_est, setpop_est] = useState('');\n  const [gdp, setgdp] = useState('');\n  const [subrg, setsubrg] = useState('');\n  const [continent, setcontinent] = useState('');\n  const [display, setdisplay] = useState(false);\n  const [clickedCountry, setclickedCountry] = useState('');\n\n  const handleclickedCountry = ISO_A2 => {\n    setclickedCountry(ISO_A2);\n  };\n\n  const handledoubleClicked = () => {\n    setclickedCountry('');\n  };\n\n  const CountryDetails = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, \"Spy Report On \", name, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, countryStates[clickedCountry].Troops !== undefined && countryStates[clickedCountry].Troops), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, \"Population: \", pop_est), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, \"GDP (PPP): \", gdp), continent !== 'South America' && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 39\n      }\n    }, \"Subregion: \", subrg), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, \"Continent: \", continent), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, \"Allegiance: Ohio\"));\n  };\n\n  const handleColourFill = country => {\n    if (!countriesLoaded) {\n      loadMap();\n      countriesLoaded = true;\n    }\n\n    const {\n      ISO_A2\n    } = country.properties;\n\n    if (clickedCountry !== '' && countries[clickedCountry] !== undefined && countries[clickedCountry].some(iso => iso === ISO_A2)) {\n      return '#be90d4';\n    }\n\n    try {\n      var col = playerColours[countryStates[ISO_A2].Player];\n\n      if (typeof col == 'undefined') {\n        col = '#B9A37E';\n      }\n\n      return col;\n    } catch (TypeError) {\n      return '#B9A37E';\n    }\n  };\n\n  const options = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }, \"ATTACK\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, \"MOVE\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    }, \"DONATE\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, \"OPTION 4\"));\n  };\n\n  const playerBox = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }\n    }, \"PLAYERS:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 6\n      }\n    }, players.map(p => /*#__PURE__*/React.createElement(\"li\", {\n      key: p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 30\n      }\n    }, \"p\")))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"playerBox\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-info-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"START THE CONQUEST!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, \"Welcome Commander \", username, \"!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, \"BASE TROOPS: \", troops)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 6\n    }\n  }, \"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"), clickedCountry !== '' && /*#__PURE__*/React.createElement(\"selectedCountryOptions\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 32\n    }\n  }), display && /*#__PURE__*/React.createElement(CountryDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 18\n    }\n  }))), /*#__PURE__*/React.createElement(MapSettings, {\n    setTooltipContent: setState,\n    setname: setname,\n    setgdp: setgdp,\n    setpop_est: setpop_est,\n    setdisplay: setdisplay,\n    setcontinent: setcontinent,\n    setsubrg: setsubrg,\n    setclickedCountry: handleclickedCountry,\n    setdoubleClicked: handledoubleClicked,\n    handleColourFill: handleColourFill,\n    handleColourStroke: handleColourFill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 4\n    }\n  }, state));\n}\n\nconst getnum = num => {\n  var num = Math.round(num);\n\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + ' Trillion';\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + ' Billion';\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + ' Million';\n  }\n\n  return num;\n}; //Countries to not display\n\n\nfunction notThisCountry(country) {\n  const {\n    NAME\n  } = country.properties;\n  return NAME !== '';\n}\n\nvar clickedCountry; //TODO: player team colour for country\n\nfunction countryColors(country) {\n  const {\n    NAME,\n    ISO_A2\n  } = country.properties;\n  return '#AAA';\n}\n\nfunction loadMap() {\n  //TODO: take value from the cookie\n  fetch('/maps/world.txt').then(raw => raw.text()).then(raw => raw.split('\\n')).then(lines => lines.map(s => s.split(' '))).then(lines => lines.forEach(line => countries[line[0]] = line.slice(1)));\n} //FIXME: fix read file correctly\n\n\nfunction getCountryCodes(countrycode) {\n  // var fs = require(\"fs\");\n  const fileURL = '/maps/world.txt';\n  var textByLine = '';\n  fetch(fileURL).then(raw => raw.text()).then(raw => raw.split('\\n')).then(raw => raw.map(x => x.split(' '))).then(raw => textByLine = raw);\n  var countriesBordering = [];\n\n  for (let j = 0; j < textByLine.length; j++) {\n    var borders = textByLine[j].split(' ');\n\n    if (borders[0] == countrycode) {\n      for (let i = 1; i < borders.length; i++) {\n        //Get border codes\n        countriesBordering.push(borders[i]);\n      }\n    }\n  }\n\n  console.log(countriesBordering);\n  return countriesBordering;\n}\n/* GAME MAP */\n\n\nconst MapSettings = ({\n  setTooltipContent,\n  setname,\n  setpop_est,\n  setsubrg,\n  setcontinent,\n  setgdp,\n  setdisplay,\n  setclickedCountry,\n  handleColourFill,\n  handleColourStroke,\n  setdoubleClicked\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CustomZoomableGroup, {\n    center: [0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, position => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 8\n    }\n  }, ({\n    geographies\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 10\n    }\n  }, geographies.map(geo => {\n    const fillcolour = handleColourFill(geo);\n    const strokecolour = handleColourStroke(geo);\n    return notThisCountry(geo) ? /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      fill: fillcolour,\n      stroke: strokecolour,\n      onMouseEnter: () => {\n        const {\n          NAME,\n          POP_EST,\n          GDP_MD_EST,\n          SUBREGION,\n          CONTINENT\n        } = geo.properties; // setTooltipContent(\n        //   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n        // );\n\n        setTooltipContent(`${NAME} - ENEMY TERRITORY`);\n        setname(NAME);\n        setpop_est(getnum(POP_EST));\n        setgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n        setsubrg(SUBREGION);\n        setcontinent(CONTINENT);\n        setdisplay(true);\n      },\n      onMouseLeave: () => {\n        setTooltipContent('');\n        setdisplay(false);\n      },\n      style: {\n        default: {\n          fill: '#D6D6DA',\n          outline: 'none'\n        },\n        hover: {\n          fill: '#F53',\n          outline: 'none'\n        },\n        pressed: {\n          fill: '#D6D6DA',\n          outline: 'none'\n        }\n      },\n      onClick: () => {\n        const {\n          ISO_A2\n        } = geo.properties;\n        setclickedCountry(ISO_A2);\n      },\n      onDoubleClick: () => {\n        setdoubleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }) : null;\n  }), geographies.map(geo => {\n    const centroid = geoCentroid(geo);\n    const {\n      ISO_A2\n    } = geo.properties;\n    return /*#__PURE__*/React.createElement(\"g\", {\n      key: geo.rsmKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      coordinates: centroid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      fontSize: 7 / position.k,\n      alignmentBaseline: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 16\n      }\n    }, countries[ISO_A2])));\n  })))))));\n};\n\nconst CustomZoomableGroup = ({\n  children,\n  ...restProps\n}) => {\n  const {\n    mapRef,\n    transformString,\n    position\n  } = useZoomPan(restProps);\n  return (\n    /*#__PURE__*/\n    // <div className=\"zoomable-group\">\n    React.createElement(\"g\", {\n      ref: mapRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      fill: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"g\", {\n      transform: transformString,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 4\n      }\n    }, children(position))) // </div>\n\n  );\n};\n\nexport default GameMap;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","Annotation","Marker","useZoomPan","ReactTooltip","connect","loaddetails","geoCentroid","Typography","Paper","username","geoUrl","countriesLoaded","countries","socket","troops","countryStates","playerColours","players","countryState","constructor","Troops","Player","GameMap","render","SideBar","state","setState","name","setname","pop_est","setpop_est","gdp","setgdp","subrg","setsubrg","continent","setcontinent","display","setdisplay","clickedCountry","setclickedCountry","handleclickedCountry","ISO_A2","handledoubleClicked","CountryDetails","undefined","handleColourFill","country","loadMap","properties","some","iso","col","TypeError","options","playerBox","map","p","getnum","num","Math","round","pow","notThisCountry","NAME","countryColors","fetch","then","raw","text","split","lines","s","forEach","line","slice","getCountryCodes","countrycode","fileURL","textByLine","x","countriesBordering","j","length","borders","i","push","console","log","MapSettings","setTooltipContent","handleColourStroke","setdoubleClicked","position","geographies","geo","fillcolour","strokecolour","rsmKey","POP_EST","GDP_MD_EST","SUBREGION","CONTINENT","default","fill","outline","hover","pressed","centroid","k","CustomZoomableGroup","children","restProps","mapRef","transformString"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport {\n\tComposableMap,\n\tGeographies,\n\tGeography,\n\tZoomableGroup,\n\tAnnotation,\n\tMarker,\n\tuseZoomPan\n} from 'react-simple-maps';\nimport ReactTooltip from 'react-tooltip';\n// import { useSpring, animated } from \"react-spring\";\nimport './Map.css';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { geoCentroid } from 'd3-geo';\nimport { Typography, Paper } from '@material-ui/core';\n\nconst username = 'Shashwat';\n\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\n\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n\tconstructor(Troops, Player) {\n\t\tthis.Troops = Troops;\n\t\tthis.Player = Player;\n\t}\n}\n\nclass GameMap extends Component {\n\t//TODO: Fix go connection\n\n\t// constructor() {\n\t// \tsuper();\n\t// \tsocket = connect();\n\t// \tsocket.onmessage = (msg) => {\n\t// \t\tvar action = JSON.parse(msg.data);\n\t// \t\tswitch (action.Type) {\n\t// \t\t\tcase 'updateTroops':\n\t// \t\t\t\ttroops = action.Troops;\n\t// \t\t\t\tbreak;\n\t// \t\t\tcase 'updateCountry':\n\t// \t\t\t\tif (\n\t// \t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n\t// \t\t\t\t\tcountryStates[action.Country].Player != action.Player\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n\t// \t\t\t\t} else {\n\t// \t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n\t// \t\t\t\t}\n\t// \t\t\t\tbreak;\n\t// \t\t\tcase 'newPlayer':\n\t// \t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n\t// \t\t\t\tplayerColours[action.Player] = action.Country;\n\t// \t\t\t\tplayers.push(action.Player);\n\t// \t\t}\n\t// \t};\n\t// }\n\n\trender() {\n\t\treturn <SideBar />;\n\t}\n}\n\nfunction SideBar() {\n\t//Fetch #troops, attack, move options, fix data vals\n\tconst [ state, setState ] = useState('');\n\tconst [ name, setname ] = useState('');\n\tconst [ pop_est, setpop_est ] = useState('');\n\tconst [ gdp, setgdp ] = useState('');\n\tconst [ subrg, setsubrg ] = useState('');\n\tconst [ continent, setcontinent ] = useState('');\n\tconst [ display, setdisplay ] = useState(false);\n\tconst [ clickedCountry, setclickedCountry ] = useState('');\n\n\tconst handleclickedCountry = (ISO_A2) => {\n\t\tsetclickedCountry(ISO_A2);\n\t};\n\n\tconst handledoubleClicked = () => {\n\t\tsetclickedCountry('');\n\t};\n\n\tconst CountryDetails = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Spy Report On {name}:</h2>\n\t\t\t\t<h3>{countryStates[clickedCountry].Troops !== undefined && countryStates[clickedCountry].Troops}</h3>\n\t\t\t\t<h3>Population: {pop_est}</h3>\n\t\t\t\t<h3>GDP (PPP): {gdp}</h3>\n\t\t\t\t{continent !== 'South America' && <h3>Subregion: {subrg}</h3>}\n\t\t\t\t<h3>Continent: {continent}</h3>\n\t\t\t\t<h3>Allegiance: Ohio</h3>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst handleColourFill = (country) => {\n\t\tif (!countriesLoaded) {\n\t\t\tloadMap();\n\t\t\tcountriesLoaded = true;\n\t\t}\n\t\tconst { ISO_A2 } = country.properties;\n\n\t\tif (\n\t\t\tclickedCountry !== '' &&\n\t\t\tcountries[clickedCountry] !== undefined &&\n\t\t\tcountries[clickedCountry].some((iso) => iso === ISO_A2)\n\t\t) {\n\t\t\treturn '#be90d4';\n\t\t}\n\t\ttry {\n\t\t\tvar col = playerColours[countryStates[ISO_A2].Player];\n\t\t\tif (typeof col == 'undefined') {\n\t\t\t\tcol = '#B9A37E';\n\t\t\t}\n\t\t\treturn col;\n\t\t} catch (TypeError) {\n\t\t\treturn '#B9A37E';\n\t\t}\n\t};\n\n\tconst options = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button>ATTACK</button>\n\t\t\t\t<button>MOVE</button>\n\t\t\t\t<button>DONATE</button>\n\t\t\t\t<button>OPTION 4</button>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst playerBox = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper>\n\t\t\t\t\t<Typography variant=\"subtitle1\">PLAYERS:</Typography>\n\t\t\t\t\t<ul>{players.map((p) => <li key={p}>p</li>)}</ul>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<playerBox />\n\t\t\t<div className=\"map-sidebar-wrapper\">\n\t\t\t\t<div className=\"map-sidebar-info-wrapper\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>START THE CONQUEST!</h1>\n\t\t\t\t\t\t<h2>Welcome Commander {username}!</h2>\n\t\t\t\t\t\t<h3>BASE TROOPS: {troops}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is your war control room. Help us attain victory over our enemies. The Gods are on our\n\t\t\t\t\t\tside!\n\t\t\t\t\t</p>\n\t\t\t\t\t{clickedCountry !== '' && <selectedCountryOptions />}\n\t\t\t\t\t{display && <CountryDetails />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<MapSettings\n\t\t\t\tsetTooltipContent={setState}\n\t\t\t\tsetname={setname}\n\t\t\t\tsetgdp={setgdp}\n\t\t\t\tsetpop_est={setpop_est}\n\t\t\t\tsetdisplay={setdisplay}\n\t\t\t\tsetcontinent={setcontinent}\n\t\t\t\tsetsubrg={setsubrg}\n\t\t\t\tsetclickedCountry={handleclickedCountry}\n\t\t\t\tsetdoubleClicked={handledoubleClicked}\n\t\t\t\thandleColourFill={handleColourFill}\n\t\t\t\thandleColourStroke={handleColourFill}\n\t\t\t/>\n\t\t\t<ReactTooltip>{state}</ReactTooltip>\n\t\t</div>\n\t);\n}\n\nconst getnum = (num) => {\n\tvar num = Math.round(num);\n\tif (num > Math.pow(10, 12)) {\n\t\tnum = num / Math.pow(10, 12) + ' Trillion';\n\t} else if (num > Math.pow(10, 9)) {\n\t\tnum = num / Math.pow(10, 9) + ' Billion';\n\t} else if (num > Math.pow(10, 6)) {\n\t\tnum = num / Math.pow(10, 6) + ' Million';\n\t}\n\treturn num;\n};\n\n//Countries to not display\nfunction notThisCountry(country) {\n\tconst { NAME } = country.properties;\n\treturn NAME !== '';\n}\n\nvar clickedCountry;\n//TODO: player team colour for country\nfunction countryColors(country) {\n\tconst { NAME, ISO_A2 } = country.properties;\n\treturn '#AAA';\n}\n\nfunction loadMap() {\n\t//TODO: take value from the cookie\n\tfetch('/maps/world.txt')\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((lines) => lines.map((s) => s.split(' ')))\n\t\t.then((lines) => lines.forEach((line) => (countries[line[0]] = line.slice(1))));\n}\n\n//FIXME: fix read file correctly\nfunction getCountryCodes(countrycode) {\n\t// var fs = require(\"fs\");\n\tconst fileURL = '/maps/world.txt';\n\tvar textByLine = '';\n\tfetch(fileURL)\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((raw) => raw.map((x) => x.split(' ')))\n\t\t.then((raw) => (textByLine = raw));\n\n\tvar countriesBordering = [];\n\n\tfor (let j = 0; j < textByLine.length; j++) {\n\t\tvar borders = textByLine[j].split(' ');\n\t\tif (borders[0] == countrycode) {\n\t\t\tfor (let i = 1; i < borders.length; i++) {\n\t\t\t\t//Get border codes\n\t\t\t\tcountriesBordering.push(borders[i]);\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(countriesBordering);\n\treturn countriesBordering;\n}\n\n/* GAME MAP */\n\nconst MapSettings = ({\n\tsetTooltipContent,\n\tsetname,\n\tsetpop_est,\n\tsetsubrg,\n\tsetcontinent,\n\tsetgdp,\n\tsetdisplay,\n\tsetclickedCountry,\n\thandleColourFill,\n\thandleColourStroke,\n\tsetdoubleClicked\n}) => {\n\treturn (\n\t\t<div className=\"map-wrapper\">\n\t\t\t<ComposableMap>\n\t\t\t\t<CustomZoomableGroup center={[ 0, 0 ]}>\n\t\t\t\t\t{(position) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Geographies geography={geoUrl}>\n\t\t\t\t\t\t\t\t{({ geographies }) => (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n\t\t\t\t\t\t\t\t\t\t\tconst fillcolour = handleColourFill(geo);\n\t\t\t\t\t\t\t\t\t\t\tconst strokecolour = handleColourStroke(geo);\n\t\t\t\t\t\t\t\t\t\t\treturn notThisCountry(geo) ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<Geography\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgeography={geo}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill={fillcolour}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke={strokecolour}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNAME,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPOP_EST,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGDP_MD_EST,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBREGION,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONTINENT\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} = geo.properties;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// setTooltipContent(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME} - ENEMY TERRITORY`);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetname(NAME);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpop_est(getnum(POP_EST));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetsubrg(SUBREGION);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetcontinent(CONTINENT);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent('');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#F53',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpressed: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetclickedCountry(ISO_A2);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdoubleClicked();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n\t\t\t\t\t\t\t\t\t\t\tconst centroid = geoCentroid(geo);\n\t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<g key={geo.rsmKey}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Marker coordinates={centroid}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text fontSize={7 / position.k} alignmentBaseline=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countries[ISO_A2]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Geographies>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</CustomZoomableGroup>\n\t\t\t</ComposableMap>\n\t\t</div>\n\t);\n};\n\nconst CustomZoomableGroup = ({ children, ...restProps }) => {\n\tconst { mapRef, transformString, position } = useZoomPan(restProps);\n\treturn (\n\t\t// <div className=\"zoomable-group\">\n\t\t<g ref={mapRef}>\n\t\t\t<rect fill=\"transparent\" />\n\t\t\t<g transform={transformString}>{children(position)}</g>\n\t\t</g>\n\t\t// </div>\n\t);\n};\n\nexport default GameMap;\n"]},"metadata":{},"sourceType":"module"}