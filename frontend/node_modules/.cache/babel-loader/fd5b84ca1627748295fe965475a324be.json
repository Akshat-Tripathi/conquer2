{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _createClass from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _classCallCheck from\"C:\\\\Users\\\\Akshat\\\\Documents\\\\Imperial\\\\personal\\\\conquer2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import React,{Component,useState}from\"react\";import{ComposableMap,Geographies,Geography,ZoomableGroup}from\"react-simple-maps\";import ReactTooltip from\"react-tooltip\";// import { useSpring, animated } from \"react-spring\";\nimport\"./Map.css\";import{connect,loaddetails}from\"../api/index.js\";import Intro2 from\"../shashgonenuts/intro2\";import{username}from\"./Home.jsx\";import mapdata from\"../maps/world.txt\";var geoUrl=\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";var countries={};var socket=null;var troops=0;var countryStates={};var playerColours={};var countryState=function countryState(Troops,Player){_classCallCheck(this,countryState);this.Troops=Troops;this.Player=Player;};var GameMap=/*#__PURE__*/function(_Component){_inherits(GameMap,_Component);var _super=_createSuper(GameMap);function GameMap(){var _this;_classCallCheck(this,GameMap);_this=_super.call(this);socket=connect();socket.onmessage=function(msg){var action=JSON.parse(msg.data);switch(action.Type){case\"updateTroops\":troops=action.Troops;break;case\"updateCountry\":if(typeof countryStates[action.Country]==\"undefined\"||countryStates[action.Country].Player!=action.Player){countryStates[action.Country]=new countryState(action.Troops,action.Player);}else{countryStates[action.Country].Troops+=action.Troops;}break;case\"newPlayer\":console.log(action.Player+\" has entered the chat bois as: \"+action.Country);playerColours[action.Player]=action.Country;}};return _this;}_createClass(GameMap,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(SideBar,null);}}]);return GameMap;}(Component);function SideBar(){//Fetch #troops, attack, move options, fix data vals\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setname=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),pop_est=_useState6[0],setpop_est=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),gdp=_useState8[0],setgdp=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),subrg=_useState10[0],setsubrg=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),continent=_useState12[0],setcontinent=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),display=_useState14[0],setdisplay=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),clickedCountry=_useState16[0],setclickedCountry=_useState16[1];var handleclickedCountry=function handleclickedCountry(ISO_A2){if(clickedCountry===\"\"){setclickedCountry(ISO_A2);}else{setclickedCountry(\"\");}};var CountryDetails=function CountryDetails(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Spy Report On \",name,\":\"),/*#__PURE__*/React.createElement(\"h3\",null,\"Population: \",pop_est),/*#__PURE__*/React.createElement(\"h3\",null,\"GDP (PPP): \",gdp),continent!==\"South America\"&&/*#__PURE__*/React.createElement(\"h3\",null,\"Subregion: \",subrg),/*#__PURE__*/React.createElement(\"h3\",null,\"Continent: \",continent));};var handleColourFill=function handleColourFill(country){var ISO_A2=country.properties.ISO_A2;if(clickedCountry!==\"\"&&getCountryCodes(clickedCountry).includes(ISO_A2)){return\"#000\";}return\"#FFF\";};var handleColourStroke=function handleColourStroke(country){var ISO_A2=country.properties.ISO_A2;return\"#FFF\";};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"map-sidebar-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"map-sidebar-info-wrapper\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"START THE CONQUEST!\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Welcome Commander \",username,\"!\")),/*#__PURE__*/React.createElement(\"p\",null,\"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"),clickedCountry!==\"\"&&/*#__PURE__*/React.createElement(\"p\",null,\"Clicked Country: \",clickedCountry),display&&/*#__PURE__*/React.createElement(CountryDetails,null))),/*#__PURE__*/React.createElement(MapSettings,{setTooltipContent:setState,setname:setname,setgdp:setgdp,setpop_est:setpop_est,setdisplay:setdisplay,setcontinent:setcontinent,setsubrg:setsubrg,setclickedCountry:handleclickedCountry,handleColourFill:handleColourFill,handleColourStroke:handleColourStroke}),/*#__PURE__*/React.createElement(ReactTooltip,null,state));}var getnum=function getnum(num){var num=Math.round(num);if(num>Math.pow(10,12)){num=num/Math.pow(10,12)+\" Trillion\";}else if(num>Math.pow(10,9)){num=num/Math.pow(10,9)+\" Billion\";}else if(num>Math.pow(10,6)){num=num/Math.pow(10,6)+\" Million\";}return num;};//Countries to not display\nfunction notThisCountry(country){var NAME=country.properties.NAME;return NAME!==\"\";}var clickedCountry;//TODO: player team colour for country\nfunction countryColors(country){var _country$properties=country.properties,NAME=_country$properties.NAME,ISO_A2=_country$properties.ISO_A2;return\"#AAA\";}//FIXME: fix read file correctly\nfunction getCountryCodes(countrycode){// var fs = require(\"fs\");\nvar fileURL=\"/maps/world.txt\";var textByLine=\"\";fetch(fileURL).then(function(response){return response.text();}).then(function(data){textByLine=data.split(\"\\n\");});var countriesBordering=[];for(var j=0;j<textByLine.length;j++){var borders=textByLine[j].split(\" \");if(borders[0]==countrycode){for(var i=1;i<borders.length;i++){//Get border codes\ncountriesBordering.push(borders[i]);}}}console.log(countriesBordering);return countriesBordering;}var MapSettings=function MapSettings(_ref){var setTooltipContent=_ref.setTooltipContent,setname=_ref.setname,setpop_est=_ref.setpop_est,setsubrg=_ref.setsubrg,setcontinent=_ref.setcontinent,setgdp=_ref.setgdp,setdisplay=_ref.setdisplay,setclickedCountry=_ref.setclickedCountry,handleColourFill=_ref.handleColourFill,handleColourStroke=_ref.handleColourStroke;return/*#__PURE__*/React.createElement(\"div\",{className:\"map-wrapper\"},/*#__PURE__*/React.createElement(ComposableMap,{\"data-tip\":\"\"},/*#__PURE__*/React.createElement(ZoomableGroup,null,/*#__PURE__*/React.createElement(Geographies,{geography:geoUrl},function(_ref2){var geographies=_ref2.geographies;return geographies.map(function(geo){return notThisCountry(geo)?/*#__PURE__*/React.createElement(Geography,{key:geo.rsmKey,geography:geo,fill:handleColourFill(geo),stroke:handleColourStroke(geo),onMouseEnter:function onMouseEnter(){var _geo$properties=geo.properties,NAME=_geo$properties.NAME,POP_EST=_geo$properties.POP_EST,GDP_MD_EST=_geo$properties.GDP_MD_EST,SUBREGION=_geo$properties.SUBREGION,CONTINENT=_geo$properties.CONTINENT;// setTooltipContent(\n//   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n// );\nsetTooltipContent(\"\".concat(NAME,\" - ENEMY TERRITORY\"));setname(NAME);setpop_est(getnum(POP_EST));setgdp(getnum(GDP_MD_EST*Math.pow(10,6)));setsubrg(SUBREGION);setcontinent(CONTINENT);setdisplay(true);},onMouseLeave:function onMouseLeave(){setTooltipContent(\"\");setdisplay(false);},style:{default:{fill:\"#D6D6DA\",outline:\"none\"},hover:{fill:\"#F53\",outline:\"none\"},pressed:{fill:\"#D6D6DA\",outline:\"none\"}},onClick:function onClick(){var ISO_A2=geo.properties.ISO_A2;setclickedCountry(ISO_A2);}}):null;});}))));};export default GameMap;","map":{"version":3,"sources":["C:/Users/Akshat/Documents/Imperial/personal/conquer2/frontend/src/pages/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","ReactTooltip","connect","loaddetails","Intro2","username","mapdata","geoUrl","countries","socket","troops","countryStates","playerColours","countryState","Troops","Player","GameMap","onmessage","msg","action","JSON","parse","data","Type","Country","console","log","SideBar","state","setState","name","setname","pop_est","setpop_est","gdp","setgdp","subrg","setsubrg","continent","setcontinent","display","setdisplay","clickedCountry","setclickedCountry","handleclickedCountry","ISO_A2","CountryDetails","handleColourFill","country","properties","getCountryCodes","includes","handleColourStroke","getnum","num","Math","round","pow","notThisCountry","NAME","countryColors","countrycode","fileURL","textByLine","fetch","then","response","text","split","countriesBordering","j","length","borders","i","push","MapSettings","setTooltipContent","geographies","map","geo","rsmKey","POP_EST","GDP_MD_EST","SUBREGION","CONTINENT","default","fill","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n// import { useSpring, animated } from \"react-spring\";\r\nimport \"./Map.css\";\r\nimport { connect, loaddetails } from \"../api/index.js\";\r\nimport Intro2 from \"../shashgonenuts/intro2\";\r\nimport { username } from \"./Home.jsx\";\r\n\r\nimport mapdata from \"../maps/world.txt\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nvar countries = {};\r\nvar socket = null;\r\nvar troops = 0;\r\nvar countryStates = {};\r\nvar playerColours = {};\r\n\r\nclass countryState {\r\n    constructor(Troops, Player) {\r\n        this.Troops = Troops;\r\n        this.Player = Player;\r\n    }\r\n}\r\n\r\nclass GameMap extends Component {\r\n  constructor() {\r\n    super();\r\n    socket = connect();\r\n    socket.onmessage = (msg) => {\r\n        var action = JSON.parse(msg.data);\r\n        switch (action.Type) {\r\n            case \"updateTroops\":\r\n                troops = action.Troops;\r\n                break\r\n            case \"updateCountry\":\r\n                if (typeof countryStates[action.Country] == \"undefined\" || countryStates[action.Country].Player != action.Player) {\r\n                    countryStates[action.Country] = new countryState(action.Troops, action.Player);\r\n                } else {\r\n                    countryStates[action.Country].Troops += action.Troops;\r\n                }\r\n                break;\r\n            case \"newPlayer\":\r\n                console.log(action.Player + \" has entered the chat bois as: \" + action.Country);\r\n                playerColours[action.Player] = action.Country; \r\n        }\r\n      };\r\n  }\r\n\r\n  render() {\r\n    return <SideBar />;\r\n  }\r\n}\r\n\r\nfunction SideBar() {\r\n  //Fetch #troops, attack, move options, fix data vals\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [pop_est, setpop_est] = useState(\"\");\r\n  const [gdp, setgdp] = useState(\"\");\r\n  const [subrg, setsubrg] = useState(\"\");\r\n  const [continent, setcontinent] = useState(\"\");\r\n  const [display, setdisplay] = useState(false);\r\n  const [clickedCountry, setclickedCountry] = useState(\"\");\r\n\r\n  const handleclickedCountry = (ISO_A2) => {\r\n    if (clickedCountry === \"\") {\r\n      setclickedCountry(ISO_A2);\r\n    } else {\r\n      setclickedCountry(\"\");\r\n    }\r\n  };\r\n\r\n  const CountryDetails = () => {\r\n    return (\r\n      <div>\r\n        <h2>Spy Report On {name}:</h2>\r\n        <h3>Population: {pop_est}</h3>\r\n        <h3>GDP (PPP): {gdp}</h3>\r\n        {continent !== \"South America\" && <h3>Subregion: {subrg}</h3>}\r\n        <h3>Continent: {continent}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleColourFill = (country) => {\r\n    const { ISO_A2 } = country.properties;\r\n    if (\r\n        clickedCountry !== \"\" &&\r\n        getCountryCodes(clickedCountry).includes(ISO_A2)\r\n      \r\n    ) {\r\n      return \"#000\";\r\n    }\r\n    return \"#FFF\";\r\n  };\r\n\r\n  const handleColourStroke = (country) => {\r\n    const { ISO_A2 } = country.properties;\r\n    return \"#FFF\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"map-sidebar-wrapper\">\r\n        <div className=\"map-sidebar-info-wrapper\">\r\n          <div>\r\n            <h1>START THE CONQUEST!</h1>\r\n            <h2>Welcome Commander {username}!</h2>\r\n          </div>\r\n          <p>\r\n            This is your war control room. Help us attain victory over our\r\n            enemies. The Gods are on our side!\r\n          </p>\r\n          {clickedCountry !== \"\" && <p>Clicked Country: {clickedCountry}</p>}\r\n          {display && <CountryDetails />}\r\n        </div>\r\n      </div>\r\n      <MapSettings\r\n        setTooltipContent={setState}\r\n        setname={setname}\r\n        setgdp={setgdp}\r\n        setpop_est={setpop_est}\r\n        setdisplay={setdisplay}\r\n        setcontinent={setcontinent}\r\n        setsubrg={setsubrg}\r\n        setclickedCountry={handleclickedCountry}\r\n        handleColourFill={handleColourFill}\r\n        handleColourStroke={handleColourStroke}\r\n      />\r\n      <ReactTooltip>{state}</ReactTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getnum = (num) => {\r\n  var num = Math.round(num);\r\n  if (num > Math.pow(10, 12)) {\r\n    num = num / Math.pow(10, 12) + \" Trillion\";\r\n  } else if (num > Math.pow(10, 9)) {\r\n    num = num / Math.pow(10, 9) + \" Billion\";\r\n  } else if (num > Math.pow(10, 6)) {\r\n    num = num / Math.pow(10, 6) + \" Million\";\r\n  }\r\n  return num;\r\n};\r\n\r\n//Countries to not display\r\nfunction notThisCountry(country) {\r\n  const { NAME } = country.properties;\r\n  return NAME !== \"\";\r\n}\r\n\r\nvar clickedCountry;\r\n//TODO: player team colour for country\r\nfunction countryColors(country) {\r\n  const { NAME, ISO_A2 } = country.properties;\r\n  return \"#AAA\";\r\n}\r\n\r\n//FIXME: fix read file correctly\r\nfunction getCountryCodes(countrycode) {\r\n  // var fs = require(\"fs\");\r\n  const fileURL = \"/maps/world.txt\";\r\n  var textByLine = \"\";\r\n  fetch(fileURL)\r\n    .then(function (response) {\r\n      return response.text();\r\n    })\r\n    .then(function (data) {\r\n      textByLine = data.split(\"\\n\");\r\n    });\r\n\r\n  var countriesBordering = [];\r\n\r\n  for (let j = 0; j < textByLine.length; j++) {\r\n    var borders = textByLine[j].split(\" \");\r\n    if (borders[0] == countrycode) {\r\n      for (let i = 1; i < borders.length; i++) {\r\n        //Get border codes\r\n        countriesBordering.push(borders[i]);\r\n      }\r\n    }\r\n  }\r\n  console.log(countriesBordering);\r\n  return countriesBordering;\r\n}\r\n\r\nconst MapSettings = ({\r\n  setTooltipContent,\r\n  setname,\r\n  setpop_est,\r\n  setsubrg,\r\n  setcontinent,\r\n  setgdp,\r\n  setdisplay,\r\n  setclickedCountry,\r\n  handleColourFill,\r\n  handleColourStroke,\r\n}) => {\r\n  return (\r\n    <div className=\"map-wrapper\">\r\n      <ComposableMap data-tip=\"\">\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) =>\r\n                notThisCountry(geo) ? (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={handleColourFill(geo)}\r\n                    stroke={handleColourStroke(geo)}\r\n                    onMouseEnter={() => {\r\n                      const {\r\n                        NAME,\r\n                        POP_EST,\r\n                        GDP_MD_EST,\r\n                        SUBREGION,\r\n                        CONTINENT,\r\n                      } = geo.properties;\r\n\r\n                      // setTooltipContent(\r\n                      //   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\r\n                      // );\r\n\r\n                      setTooltipContent(`${NAME} - ENEMY TERRITORY`);\r\n                      setname(NAME);\r\n                      setpop_est(getnum(POP_EST));\r\n                      setgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\r\n                      setsubrg(SUBREGION);\r\n                      setcontinent(CONTINENT);\r\n                      setdisplay(true);\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                      setdisplay(false);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill: \"#D6D6DA\",\r\n                        outline: \"none\",\r\n                      },\r\n                      hover: {\r\n                        fill: \"#F53\",\r\n                        outline: \"none\",\r\n                      },\r\n                      pressed: {\r\n                        fill: \"#D6D6DA\",\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                    onClick={() => {\r\n                      const { ISO_A2 } = geo.properties;\r\n                      setclickedCountry(ISO_A2);\r\n                    }}\r\n                  />\r\n                ) : null\r\n              )\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameMap;\r\n"]},"metadata":{},"sourceType":"module"}