{"ast":null,"code":"/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\n/**\r\n * @ignore - internal component.\r\n */\n\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open || typeof window === 'undefined') {\n      return;\n    }\n\n    nodeToRestore.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var contain = function contain() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', contain, true);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      contain();\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focus', contain, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\r\n   * A single child content element.\r\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\r\n   * Return the document to consider.\r\n   * We use it to implement the restore focus between different browser documents.\r\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\r\n   * Do we still want to enforce the focus?\r\n   * This prop helps nesting TrapFocus elements.\r\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\r\n   * If `true`, the modal is open.\r\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n/*\r\n\r\nIn the future, we should be able to replace TrapFocus with:\r\nhttps://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md\r\n\r\n```jsx\r\nimport FocusScope from 'react-dom/FocusScope';\r\n\r\nfunction TrapFocus(props) {\r\n  const {\r\n    children\r\n    disableAutoFocus = false,\r\n    disableEnforceFocus = false,\r\n    disableRestoreFocus = false,\r\n    open,\r\n  } = props;\r\n\r\n  if (!open) {\r\n    return children;\r\n  }\r\n\r\n  return (\r\n    <FocusScope\r\n      autoFocus={!disableAutoFocus}\r\n      contain={!disableEnforceFocus}\r\n      restoreFocus={!disableRestoreFocus}\r\n    >\r\n      {children}\r\n    </FocusScope>\r\n  );\r\n}\r\n```\r\n\r\n*/\n\nexport default TrapFocus;","map":{"version":3,"sources":["C:/Users/Akshat/Documents/Imperial/personal/conquer2/frontend/node_modules/@material-ui/core/esm/Modal/TrapFocus.js"],"names":["React","ReactDOM","PropTypes","ownerDocument","useForkRef","TrapFocus","props","children","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","useRef","sentinelStart","sentinelEnd","nodeToRestore","rootRef","handleOwnRef","useCallback","instance","current","findDOMNode","handleRef","ref","useMemo","window","activeElement","useEffect","doc","contains","hasAttribute","process","env","NODE_ENV","console","error","join","setAttribute","focus","contain","loopFocus","event","keyCode","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","createElement","Fragment","tabIndex","cloneElement","propTypes","element","isRequired","bool","func"],"mappings":"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","sourcesContent":["/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport useForkRef from '../utils/useForkRef';\r\n/**\r\n * @ignore - internal component.\r\n */\r\n\r\nfunction TrapFocus(props) {\r\n  var children = props.children,\r\n      _props$disableAutoFoc = props.disableAutoFocus,\r\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\r\n      _props$disableEnforce = props.disableEnforceFocus,\r\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\r\n      _props$disableRestore = props.disableRestoreFocus,\r\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\r\n      getDoc = props.getDoc,\r\n      isEnabled = props.isEnabled,\r\n      open = props.open;\r\n  var ignoreNextEnforceFocus = React.useRef();\r\n  var sentinelStart = React.useRef(null);\r\n  var sentinelEnd = React.useRef(null);\r\n  var nodeToRestore = React.useRef();\r\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\r\n\r\n  var handleOwnRef = React.useCallback(function (instance) {\r\n    // #StrictMode ready\r\n    rootRef.current = ReactDOM.findDOMNode(instance);\r\n  }, []);\r\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\r\n  // https://reactjs.org/docs/hooks-reference.html#usememo\r\n\r\n  React.useMemo(function () {\r\n    if (!open || typeof window === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    nodeToRestore.current = getDoc().activeElement;\r\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  React.useEffect(function () {\r\n    if (!open) {\r\n      return;\r\n    }\r\n\r\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\r\n\r\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\r\n      if (!rootRef.current.hasAttribute('tabIndex')) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.error(['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\r\n        }\r\n\r\n        rootRef.current.setAttribute('tabIndex', -1);\r\n      }\r\n\r\n      rootRef.current.focus();\r\n    }\r\n\r\n    var contain = function contain() {\r\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\r\n        ignoreNextEnforceFocus.current = false;\r\n        return;\r\n      }\r\n\r\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\r\n        rootRef.current.focus();\r\n      }\r\n    };\r\n\r\n    var loopFocus = function loopFocus(event) {\r\n      // 9 = Tab\r\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\r\n        return;\r\n      } // Make sure the next tab starts from the right place.\r\n\r\n\r\n      if (doc.activeElement === rootRef.current) {\r\n        // We need to ignore the next contain as\r\n        // it will try to move the focus back to the rootRef element.\r\n        ignoreNextEnforceFocus.current = true;\r\n\r\n        if (event.shiftKey) {\r\n          sentinelEnd.current.focus();\r\n        } else {\r\n          sentinelStart.current.focus();\r\n        }\r\n      }\r\n    };\r\n\r\n    doc.addEventListener('focus', contain, true);\r\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area\r\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\r\n    //\r\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\r\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\r\n\r\n    var interval = setInterval(function () {\r\n      contain();\r\n    }, 50);\r\n    return function () {\r\n      clearInterval(interval);\r\n      doc.removeEventListener('focus', contain, true);\r\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\r\n\r\n      if (!disableRestoreFocus) {\r\n        // In IE 11 it is possible for document.activeElement to be null resulting\r\n        // in nodeToRestore.current being null.\r\n        // Not all elements in IE 11 have a focus method.\r\n        // Once IE 11 support is dropped the focus() call can be unconditional.\r\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\r\n          nodeToRestore.current.focus();\r\n        }\r\n\r\n        nodeToRestore.current = null;\r\n      }\r\n    };\r\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\r\n    tabIndex: 0,\r\n    ref: sentinelStart,\r\n    \"data-test\": \"sentinelStart\"\r\n  }), React.cloneElement(children, {\r\n    ref: handleRef\r\n  }), /*#__PURE__*/React.createElement(\"div\", {\r\n    tabIndex: 0,\r\n    ref: sentinelEnd,\r\n    \"data-test\": \"sentinelEnd\"\r\n  }));\r\n}\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\r\n  /**\r\n   * A single child content element.\r\n   */\r\n  children: PropTypes.element.isRequired,\r\n\r\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  disableAutoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  disableEnforceFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   */\r\n  disableRestoreFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Return the document to consider.\r\n   * We use it to implement the restore focus between different browser documents.\r\n   */\r\n  getDoc: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Do we still want to enforce the focus?\r\n   * This prop helps nesting TrapFocus elements.\r\n   */\r\n  isEnabled: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * If `true`, the modal is open.\r\n   */\r\n  open: PropTypes.bool.isRequired\r\n} : void 0;\r\n/*\r\n\r\nIn the future, we should be able to replace TrapFocus with:\r\nhttps://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md\r\n\r\n```jsx\r\nimport FocusScope from 'react-dom/FocusScope';\r\n\r\nfunction TrapFocus(props) {\r\n  const {\r\n    children\r\n    disableAutoFocus = false,\r\n    disableEnforceFocus = false,\r\n    disableRestoreFocus = false,\r\n    open,\r\n  } = props;\r\n\r\n  if (!open) {\r\n    return children;\r\n  }\r\n\r\n  return (\r\n    <FocusScope\r\n      autoFocus={!disableAutoFocus}\r\n      contain={!disableEnforceFocus}\r\n      restoreFocus={!disableRestoreFocus}\r\n    >\r\n      {children}\r\n    </FocusScope>\r\n  );\r\n}\r\n```\r\n\r\n*/\r\n\r\nexport default TrapFocus;"]},"metadata":{},"sourceType":"module"}