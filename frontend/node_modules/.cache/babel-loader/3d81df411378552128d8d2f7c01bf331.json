{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx\";\nimport React, { Component, useState } from 'react';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { Typography, Paper, makeStyles, IconButton, Snackbar, Grid, Button } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport VectorMap from './VectorMap';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'; //FIXME: Username not being imported - has no val??\n// import { username } from '../Home/StartGameBox';\n\nimport './Map.css';\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n  constructor(Troops, Player) {\n    this.Troops = Troops;\n    this.Player = Player;\n  }\n\n} // class GameMap extends Component {\n// \tconstructor() {\n// \t\tsuper();\n// \t\tsocket = connect();\n// \t\tsocket.onmessage = (msg) => {\n// \t\t\tvar action = JSON.parse(msg.data);\n// \t\t\tswitch (action.Type) {\n// \t\t\t\tcase 'updateTroops':\n// \t\t\t\t\ttroops = action.Troops;\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'updateCountry':\n// \t\t\t\t\tif (\n// \t\t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n// \t\t\t\t\t\tcountryStates[action.Country].Player != action.Player\n// \t\t\t\t\t) {\n// \t\t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n// \t\t\t\t\t}\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'newPlayer':\n// \t\t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n// \t\t\t\t\tplayerColours[action.Player] = action.Country;\n// \t\t\t\t\tplayers.push(action.Player);\n// \t\t\t}\n// \t\t};\n// \t}\n// \trender() {\n// \t\treturn <SideBar />;\n// \t}\n// }\n\n\nconst useStyles = makeStyles(theme => ({\n  sidebar: {\n    marginLeft: '70%',\n    marginTop: '10%',\n    background: fade('#000000', 0.8),\n    color: 'white',\n    padding: theme.spacing(3),\n    position: 'fixed',\n    width: '30%',\n    height: '80%',\n    borderRadius: '5%',\n    boxShadow: '0px 10px 50px #555'\n  },\n  players: {\n    background: fade('#000000', 0.8),\n    color: 'white',\n    padding: theme.spacing(2),\n    position: 'fixed',\n    boxShadow: '0px 10px 50px #555'\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction SideBar() {\n  //CSS\n  const classes = useStyles();\n  const username = 'Shashwat'; //TODO: Fetch #troops, attack, move options, fix data vals\n  // Spy Detail Information\n\n  const [name, setname] = useState('');\n  const [pop_est, setpop_est] = useState('');\n  const [gdp, setgdp] = useState('');\n  const [subrg, setsubrg] = useState('');\n  const [continent, setcontinent] = useState(''); //Currently Clicked Countries\n\n  const [fromCountry, setfromCountry] = useState('');\n  const [toCountry, settoCountry] = useState(''); //For the snackbar display settings\n\n  const [openHelp, setOpenHelp] = React.useState(false);\n\n  const handleClick = geo => {\n    const {\n      NAME\n    } = geo.properties; //TODO: Check if country1 is player's country\n    //TODO: Check if country2 is a neighbouring country, else change country1\n\n    if (fromCountry === '') {\n      setfromCountry(NAME);\n    } else if (NAME === fromCountry) {\n      setfromCountry('');\n      settoCountry('');\n    } else {\n      settoCountry(NAME);\n    }\n  }; //Handle functions for snackbar\n\n\n  const handleOpenHelp = () => {\n    setOpenHelp(true);\n  };\n\n  const handleCloseHelp = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenHelp(false);\n  };\n\n  const handleColorFill = country => {\n    if (!countriesLoaded) {\n      loadMap();\n      countriesLoaded = true;\n    }\n\n    const {\n      NAME,\n      ISO_A2\n    } = country.properties;\n\n    if (NAME === fromCountry) {\n      return '#002984';\n    } else if (NAME === toCountry) {\n      return '#ffcd38';\n    }\n\n    if (fromCountry === ISO_A2) if (clickedCountry !== '' && countries[clickedCountry] !== undefined && countries[clickedCountry].some(iso => iso === ISO_A2)) {\n      return '#be90d4';\n    }\n\n    try {\n      var col = playerColours[countryStates[ISO_A2].Player];\n\n      if (typeof col == 'undefined') {\n        col = '#B9A37E';\n      }\n\n      return col;\n    } catch (TypeError) {\n      return '#B9A37E';\n    }\n  }; //TODO: Change stroke according to action\n\n\n  const handleColorStroke = geo => {\n    const {\n      NAME\n    } = geo.properties;\n\n    if (NAME === fromCountry) {\n      return '#002984';\n    } else if (NAME === toCountry) {\n      return '#ff9800';\n    }\n\n    return '#FFFFFF';\n  };\n\n  const handleStrokeWidth = geo => {\n    const {\n      NAME\n    } = geo.properties;\n\n    if (NAME === fromCountry || NAME === toCountry) {\n      return 2;\n    }\n\n    return 0.3;\n  };\n\n  const Options = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, ' ', \"From \", /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'lightgreen'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, fromCountry), \" To\", ' ', /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 8\n      }\n    }, toCountry))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"secondary\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, \"ATTACK\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, \"MOVE\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }, \"DONATE\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"secondary\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, \"DEPLOY\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 3\n    }\n  }, players.length !== 0 && /*#__PURE__*/React.createElement(PlayerBox, {\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.sidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      alignText: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, \"Welcome, Commander \", username, \"!\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"help\",\n    color: \"primary\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HelpIcon, {\n    style: {\n      fontSize: '25'\n    },\n    onClick: handleOpenHelp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    open: openHelp,\n    autoHideDuration: 5000,\n    onClose: handleCloseHelp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleCloseHelp,\n    severity: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, \"This is your control room. Hover above countries to receive encrypted data. Click on countries to see your military options.\")))), toCountry !== '' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 6\n    }\n  }, name !== '' && /*#__PURE__*/React.createElement(SpyDetails, {\n    name: name,\n    subrg: subrg,\n    continent: continent,\n    pop_est: pop_est,\n    gdp: gdp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 8\n    }\n  })))), /*#__PURE__*/React.createElement(VectorMap, {\n    setname: setname,\n    setpop_est: setpop_est,\n    setsubrg: setsubrg,\n    setcontinent: setcontinent,\n    setgdp: setgdp,\n    handleColorFill: handleColorFill,\n    handleColorStroke: handleColorStroke,\n    handleStrokeWidth: handleStrokeWidth,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 4\n    }\n  }));\n}\n\nconst PlayerBox = ({\n  classes\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.players,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }\n  }, \"ONLINE PLAYERS:\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 5\n    }\n  }, Object.keys(playerColours).map(function (player, color) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: player,\n      style: {\n        padding: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }\n    }, player), /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n      style: {\n        color: color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }))));\n  }))));\n};\n\nvar clickedCountry; //TODO: player team colour for country\n\nfunction countryColors(country) {\n  const {\n    NAME,\n    ISO_A2\n  } = country.properties;\n  return '#AAA';\n}\n\nfunction loadMap() {\n  //TODO: take value from the cookie\n  fetch('/maps/world.txt').then(raw => raw.text()).then(raw => raw.split('\\n')).then(lines => lines.map(s => s.split(' '))).then(lines => lines.forEach(line => countries[line[0]] = line.slice(1)));\n} //FIXME: fix read file correctly\n\n\nfunction getCountryCodes(countrycode) {\n  // var fs = require(\"fs\");\n  const fileURL = '/maps/world.txt';\n  var textByLine = '';\n  fetch(fileURL).then(raw => raw.text()).then(raw => raw.split('\\n')).then(raw => raw.map(x => x.split(' '))).then(raw => textByLine = raw);\n  var countriesBordering = [];\n\n  for (let j = 0; j < textByLine.length; j++) {\n    var borders = textByLine[j].split(' ');\n\n    if (borders[0] == countrycode) {\n      for (let i = 1; i < borders.length; i++) {\n        //Get border codes\n        countriesBordering.push(borders[i]);\n      }\n    }\n  }\n\n  console.log(countriesBordering);\n  return countriesBordering;\n}\n\nconst SpyDetails = ({\n  name,\n  pop_est,\n  gdp,\n  continent,\n  subrg\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      alignText: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 6\n    }\n  }, \"Spy Report On: \", /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'yellow'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 22\n    }\n  }, name))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 6\n    }\n  }, \"Population: \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 6\n    }\n  }, pop_est, \" \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 6\n    }\n  }, \"GDP (PPP): \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 6\n    }\n  }, gdp, \" \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 6\n    }\n  }, \"Continent\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 6\n    }\n  }, continent, \" \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 5\n    }\n  }, continent !== 'South America' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 8\n    }\n  }, \"Subregion: \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 8\n    }\n  }, subrg, \" \"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 6\n    }\n  }, \"Allegiance: \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 6\n    }\n  }, \"Ohio \"))));\n};\n\nexport default SideBar;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx"],"names":["React","Component","useState","connect","loaddetails","Typography","Paper","makeStyles","IconButton","Snackbar","Grid","Button","fade","HelpIcon","MuiAlert","VectorMap","FiberManualRecordIcon","countriesLoaded","countries","socket","troops","countryStates","playerColours","players","countryState","constructor","Troops","Player","useStyles","theme","sidebar","marginLeft","marginTop","background","color","padding","spacing","position","width","height","borderRadius","boxShadow","buttons","display","justifyContent","button","Alert","props","SideBar","classes","username","name","setname","pop_est","setpop_est","gdp","setgdp","subrg","setsubrg","continent","setcontinent","fromCountry","setfromCountry","toCountry","settoCountry","openHelp","setOpenHelp","handleClick","geo","NAME","properties","handleOpenHelp","handleCloseHelp","event","reason","handleColorFill","country","loadMap","ISO_A2","clickedCountry","undefined","some","iso","col","TypeError","handleColorStroke","handleStrokeWidth","Options","length","alignText","fontSize","PlayerBox","Object","keys","map","player","countryColors","fetch","then","raw","text","split","lines","s","forEach","line","slice","getCountryCodes","countrycode","fileURL","textByLine","x","countriesBordering","j","borders","i","push","console","log","SpyDetails"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { Typography, Paper, makeStyles, IconButton, Snackbar, Grid, Button } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport VectorMap from './VectorMap';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n//FIXME: Username not being imported - has no val??\n// import { username } from '../Home/StartGameBox';\nimport './Map.css';\n\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n\tconstructor(Troops, Player) {\n\t\tthis.Troops = Troops;\n\t\tthis.Player = Player;\n\t}\n}\n\n// class GameMap extends Component {\n// \tconstructor() {\n// \t\tsuper();\n// \t\tsocket = connect();\n// \t\tsocket.onmessage = (msg) => {\n// \t\t\tvar action = JSON.parse(msg.data);\n// \t\t\tswitch (action.Type) {\n// \t\t\t\tcase 'updateTroops':\n// \t\t\t\t\ttroops = action.Troops;\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'updateCountry':\n// \t\t\t\t\tif (\n// \t\t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n// \t\t\t\t\t\tcountryStates[action.Country].Player != action.Player\n// \t\t\t\t\t) {\n// \t\t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n// \t\t\t\t\t}\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'newPlayer':\n// \t\t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n// \t\t\t\t\tplayerColours[action.Player] = action.Country;\n// \t\t\t\t\tplayers.push(action.Player);\n// \t\t\t}\n// \t\t};\n// \t}\n\n// \trender() {\n// \t\treturn <SideBar />;\n// \t}\n// }\n\nconst useStyles = makeStyles((theme) => ({\n\tsidebar: {\n\t\tmarginLeft: '70%',\n\t\tmarginTop: '10%',\n\t\tbackground: fade('#000000', 0.8),\n\t\tcolor: 'white',\n\t\tpadding: theme.spacing(3),\n\t\tposition: 'fixed',\n\t\twidth: '30%',\n\t\theight: '80%',\n\t\tborderRadius: '5%',\n\t\tboxShadow: '0px 10px 50px #555'\n\t},\n\tplayers: {\n\t\tbackground: fade('#000000', 0.8),\n\t\tcolor: 'white',\n\t\tpadding: theme.spacing(2),\n\t\tposition: 'fixed',\n\t\tboxShadow: '0px 10px 50px #555'\n\t},\n\tbuttons: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-end'\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing(3),\n\t\tmarginLeft: theme.spacing(1)\n\t}\n}));\n\nfunction Alert(props) {\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction SideBar() {\n\t//CSS\n\tconst classes = useStyles();\n\tconst username = 'Shashwat';\n\t//TODO: Fetch #troops, attack, move options, fix data vals\n\n\t// Spy Detail Information\n\tconst [ name, setname ] = useState('');\n\tconst [ pop_est, setpop_est ] = useState('');\n\tconst [ gdp, setgdp ] = useState('');\n\tconst [ subrg, setsubrg ] = useState('');\n\tconst [ continent, setcontinent ] = useState('');\n\n\t//Currently Clicked Countries\n\tconst [ fromCountry, setfromCountry ] = useState('');\n\tconst [ toCountry, settoCountry ] = useState('');\n\n\t//For the snackbar display settings\n\tconst [ openHelp, setOpenHelp ] = React.useState(false);\n\n\tconst handleClick = (geo) => {\n\t\tconst { NAME } = geo.properties;\n\n\t\t//TODO: Check if country1 is player's country\n\t\t//TODO: Check if country2 is a neighbouring country, else change country1\n\t\tif (fromCountry === '') {\n\t\t\tsetfromCountry(NAME);\n\t\t} else if (NAME === fromCountry) {\n\t\t\tsetfromCountry('');\n\t\t\tsettoCountry('');\n\t\t} else {\n\t\t\tsettoCountry(NAME);\n\t\t}\n\t};\n\n\t//Handle functions for snackbar\n\tconst handleOpenHelp = () => {\n\t\tsetOpenHelp(true);\n\t};\n\n\tconst handleCloseHelp = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetOpenHelp(false);\n\t};\n\n\tconst handleColorFill = (country) => {\n\t\tif (!countriesLoaded) {\n\t\t\tloadMap();\n\t\t\tcountriesLoaded = true;\n\t\t}\n\t\tconst { NAME, ISO_A2 } = country.properties;\n\n\t\tif (NAME === fromCountry) {\n\t\t\treturn '#002984';\n\t\t} else if (NAME === toCountry) {\n\t\t\treturn '#ffcd38';\n\t\t}\n\n\t\tif (fromCountry === ISO_A2)\n\t\t\tif (\n\t\t\t\tclickedCountry !== '' &&\n\t\t\t\tcountries[clickedCountry] !== undefined &&\n\t\t\t\tcountries[clickedCountry].some((iso) => iso === ISO_A2)\n\t\t\t) {\n\t\t\t\treturn '#be90d4';\n\t\t\t}\n\t\ttry {\n\t\t\tvar col = playerColours[countryStates[ISO_A2].Player];\n\t\t\tif (typeof col == 'undefined') {\n\t\t\t\tcol = '#B9A37E';\n\t\t\t}\n\t\t\treturn col;\n\t\t} catch (TypeError) {\n\t\t\treturn '#B9A37E';\n\t\t}\n\t};\n\n\t//TODO: Change stroke according to action\n\tconst handleColorStroke = (geo) => {\n\t\tconst { NAME } = geo.properties;\n\n\t\tif (NAME === fromCountry) {\n\t\t\treturn '#002984';\n\t\t} else if (NAME === toCountry) {\n\t\t\treturn '#ff9800';\n\t\t}\n\n\t\treturn '#FFFFFF';\n\t};\n\n\tconst handleStrokeWidth = (geo) => {\n\t\tconst { NAME } = geo.properties;\n\n\t\tif (NAME === fromCountry || NAME === toCountry) {\n\t\t\treturn 2;\n\t\t}\n\t\treturn 0.3;\n\t};\n\n\tconst Options = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Grid container xs={12}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tFrom <div style={{ color: 'lightgreen' }}>{fromCountry}</div> To{' '}\n\t\t\t\t\t\t\t<div style={{ color: 'red' }}>{toCountry}</div>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}>\n\t\t\t\t\t\t\tATTACK\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.button}>\n\t\t\t\t\t\t\tMOVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.button}>\n\t\t\t\t\t\t\tDONATE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}>\n\t\t\t\t\t\t\tDEPLOY\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{players.length !== 0 && <PlayerBox classes={classes} />}\n\t\t\t<Paper className={classes.sidebar}>\n\t\t\t\t<Grid container spacing={2} style={{ alignText: 'center' }}>\n\t\t\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t\t\t<Typography variant=\"h4\" align=\"center\">\n\t\t\t\t\t\t\tWelcome, Commander {username}!\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={2}>\n\t\t\t\t\t\t<IconButton aria-label=\"help\" color=\"primary\" size=\"small\">\n\t\t\t\t\t\t\t<HelpIcon\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize: '25'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={handleOpenHelp}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Snackbar open={openHelp} autoHideDuration={5000} onClose={handleCloseHelp}>\n\t\t\t\t\t\t\t\t<Alert onClose={handleCloseHelp} severity=\"info\">\n\t\t\t\t\t\t\t\t\tThis is your control room. Hover above countries to receive encrypted data. Click on\n\t\t\t\t\t\t\t\t\tcountries to see your military options.\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t</Snackbar>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{toCountry !== '' && (\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Options />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t{name !== '' && (\n\t\t\t\t\t\t\t<SpyDetails name={name} subrg={subrg} continent={continent} pop_est={pop_est} gdp={gdp} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\n\t\t\t<VectorMap\n\t\t\t\tsetname={setname}\n\t\t\t\tsetpop_est={setpop_est}\n\t\t\t\tsetsubrg={setsubrg}\n\t\t\t\tsetcontinent={setcontinent}\n\t\t\t\tsetgdp={setgdp}\n\t\t\t\thandleColorFill={handleColorFill}\n\t\t\t\thandleColorStroke={handleColorStroke}\n\t\t\t\thandleStrokeWidth={handleStrokeWidth}\n\t\t\t\thandleClick={handleClick}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst PlayerBox = ({ classes }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Paper className={classes.players}>\n\t\t\t\t<Typography variant=\"subtitle1\">ONLINE PLAYERS:</Typography>\n\t\t\t\t<Grid container spacing={12}>\n\t\t\t\t\t{Object.keys(playerColours).map(function(player, color) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={player} style={{ padding: '5%' }}>\n\t\t\t\t\t\t\t\t<Grid container spacing={12}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"p\">{player}</Typography>\n\t\t\t\t\t\t\t\t\t\t<FiberManualRecordIcon style={{ color: color }} />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n};\n\nvar clickedCountry;\n//TODO: player team colour for country\nfunction countryColors(country) {\n\tconst { NAME, ISO_A2 } = country.properties;\n\treturn '#AAA';\n}\n\nfunction loadMap() {\n\t//TODO: take value from the cookie\n\tfetch('/maps/world.txt')\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((lines) => lines.map((s) => s.split(' ')))\n\t\t.then((lines) => lines.forEach((line) => (countries[line[0]] = line.slice(1))));\n}\n\n//FIXME: fix read file correctly\nfunction getCountryCodes(countrycode) {\n\t// var fs = require(\"fs\");\n\tconst fileURL = '/maps/world.txt';\n\tvar textByLine = '';\n\tfetch(fileURL)\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((raw) => raw.map((x) => x.split(' ')))\n\t\t.then((raw) => (textByLine = raw));\n\n\tvar countriesBordering = [];\n\n\tfor (let j = 0; j < textByLine.length; j++) {\n\t\tvar borders = textByLine[j].split(' ');\n\t\tif (borders[0] == countrycode) {\n\t\t\tfor (let i = 1; i < borders.length; i++) {\n\t\t\t\t//Get border codes\n\t\t\t\tcountriesBordering.push(borders[i]);\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(countriesBordering);\n\treturn countriesBordering;\n}\n\nconst SpyDetails = ({ name, pop_est, gdp, continent, subrg }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Grid container spacing={12}>\n\t\t\t\t<Grid item xs={12} style={{ alignText: 'center' }}>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tSpy Report On: <div style={{ color: 'yellow' }}>{name}</div>\n\t\t\t\t\t</h2>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t<h3>Population: </h3>\n\t\t\t\t\t<Typography variant=\"subtitle1\">{pop_est} </Typography>\n\t\t\t\t\t{/* <h3>{countryStates[clickedCountry].Troops \n\t\t\t\t\t\t\t!== undefined && countryStates[clickedCountry].Troops}</h3> */}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t<h3>GDP (PPP): </h3>\n\n\t\t\t\t\t<Typography variant=\"subtitle1\">{gdp} </Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t<h3>Continent</h3>\n\t\t\t\t\t<Typography variant=\"subtitle1\">{continent} </Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t{continent !== 'South America' && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>Subregion: </h3>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">{subrg} </Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<h3>Allegiance: </h3>\n\t\t\t\t\t<Typography variant=\"subtitle1\">Ohio </Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}