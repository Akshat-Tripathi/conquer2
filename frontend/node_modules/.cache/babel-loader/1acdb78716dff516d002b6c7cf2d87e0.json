{"ast":null,"code":"import _objectWithoutProperties from\"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _createClass from\"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _classCallCheck from\"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import React,{Component,useState}from'react';import{ComposableMap,Geographies,Geography,ZoomableGroup,Annotation,Marker,useZoomPan}from'react-simple-maps';import ReactTooltip from'react-tooltip';// import { useSpring, animated } from \"react-spring\";\nimport'./Map.css';import{connect,loaddetails}from'../../api/index.js';import{geoCentroid}from'd3-geo';var username='Shashwat';var geoUrl='https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';var countriesLoaded=false;var countries={};var socket=null;var troops=0;var countryStates={};var playerColours={};var players=[];var countryState=function countryState(Troops,Player){_classCallCheck(this,countryState);this.Troops=Troops;this.Player=Player;};var GameMap=/*#__PURE__*/function(_Component){_inherits(GameMap,_Component);var _super=_createSuper(GameMap);function GameMap(){var _this;_classCallCheck(this,GameMap);_this=_super.call(this);socket=connect();socket.onmessage=function(msg){var action=JSON.parse(msg.data);switch(action.Type){case'updateTroops':troops=action.Troops;break;case'updateCountry':if(typeof countryStates[action.Country]=='undefined'||countryStates[action.Country].Player!=action.Player){countryStates[action.Country]=new countryState(action.Troops,action.Player);}else{countryStates[action.Country].Troops+=action.Troops;}break;case'newPlayer':console.log(action.Player+' has entered the chat bois as: '+action.Country);playerColours[action.Player]=action.Country;players.push(action.Player);}};return _this;}_createClass(GameMap,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(SideBar,null);}}]);return GameMap;}(Component);function SideBar(){//Fetch #troops, attack, move options, fix data vals\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setname=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),pop_est=_useState6[0],setpop_est=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),gdp=_useState8[0],setgdp=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),subrg=_useState10[0],setsubrg=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),continent=_useState12[0],setcontinent=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),display=_useState14[0],setdisplay=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),clickedCountry=_useState16[0],setclickedCountry=_useState16[1];var handleclickedCountry=function handleclickedCountry(ISO_A2){setclickedCountry(ISO_A2);};var handledoubleClicked=function handledoubleClicked(){setclickedCountry('');};var CountryDetails=function CountryDetails(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Spy Report On \",name,\":\"),/*#__PURE__*/React.createElement(\"h3\",null,countryStates[clickedCountry].Troops!==undefined&&countryStates[clickedCountry].Troops),/*#__PURE__*/React.createElement(\"h3\",null,\"Population: \",pop_est),/*#__PURE__*/React.createElement(\"h3\",null,\"GDP (PPP): \",gdp),continent!=='South America'&&/*#__PURE__*/React.createElement(\"h3\",null,\"Subregion: \",subrg),/*#__PURE__*/React.createElement(\"h3\",null,\"Continent: \",continent),/*#__PURE__*/React.createElement(\"h3\",null,\"Allegiance: Ohio\"));};var handleColourFill=function handleColourFill(country){if(!countriesLoaded){loadMap();countriesLoaded=true;}var ISO_A2=country.properties.ISO_A2;if(clickedCountry!==''&&countries[clickedCountry]!==undefined&&countries[clickedCountry].some(function(iso){return iso===ISO_A2;})){return'#be90d4';}try{var col=playerColours[countryStates[ISO_A2].Player];if(typeof col=='undefined'){col='#B9A37E';}return col;}catch(TypeError){return'#B9A37E';}};var options=function options(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",null,\"ATTACK\"),/*#__PURE__*/React.createElement(\"button\",null,\"MOVE\"),/*#__PURE__*/React.createElement(\"button\",null,\"DONATE\"),/*#__PURE__*/React.createElement(\"button\",null,\"OPTION 4\"));};var playerBox=function playerBox(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"PLAYERS:\"),/*#__PURE__*/React.createElement(\"ul\",null,players.map(function(p){return/*#__PURE__*/React.createElement(\"li\",{key:p},\"p\");})));};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"playerBox\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"map-sidebar-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"map-sidebar-info-wrapper\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"START THE CONQUEST!\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Welcome Commander \",username,\"!\"),/*#__PURE__*/React.createElement(\"h3\",null,\"BASE TROOPS: \",troops)),/*#__PURE__*/React.createElement(\"p\",null,\"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"),clickedCountry!==''&&/*#__PURE__*/React.createElement(\"selectedCountryOptions\",null),display&&/*#__PURE__*/React.createElement(CountryDetails,null))),/*#__PURE__*/React.createElement(MapSettings,{setTooltipContent:setState,setname:setname,setgdp:setgdp,setpop_est:setpop_est,setdisplay:setdisplay,setcontinent:setcontinent,setsubrg:setsubrg,setclickedCountry:handleclickedCountry,setdoubleClicked:handledoubleClicked,handleColourFill:handleColourFill,handleColourStroke:handleColourFill}),/*#__PURE__*/React.createElement(ReactTooltip,null,state));}var getnum=function getnum(num){var num=Math.round(num);if(num>Math.pow(10,12)){num=num/Math.pow(10,12)+' Trillion';}else if(num>Math.pow(10,9)){num=num/Math.pow(10,9)+' Billion';}else if(num>Math.pow(10,6)){num=num/Math.pow(10,6)+' Million';}return num;};//Countries to not display\nfunction notThisCountry(country){var NAME=country.properties.NAME;return NAME!=='';}var clickedCountry;//TODO: player team colour for country\nfunction countryColors(country){var _country$properties=country.properties,NAME=_country$properties.NAME,ISO_A2=_country$properties.ISO_A2;return'#AAA';}function loadMap(){//TODO: take value from the cookie\nfetch('/maps/world.txt').then(function(raw){return raw.text();}).then(function(raw){return raw.split('\\n');}).then(function(lines){return lines.map(function(s){return s.split(' ');});}).then(function(lines){return lines.forEach(function(line){return countries[line[0]]=line.slice(1);});});}//FIXME: fix read file correctly\nfunction getCountryCodes(countrycode){// var fs = require(\"fs\");\nvar fileURL='/maps/world.txt';var textByLine='';fetch(fileURL).then(function(raw){return raw.text();}).then(function(raw){return raw.split('\\n');}).then(function(raw){return raw.map(function(x){return x.split(' ');});}).then(function(raw){return textByLine=raw;});var countriesBordering=[];for(var j=0;j<textByLine.length;j++){var borders=textByLine[j].split(' ');if(borders[0]==countrycode){for(var i=1;i<borders.length;i++){//Get border codes\ncountriesBordering.push(borders[i]);}}}console.log(countriesBordering);return countriesBordering;}/* GAME MAP */var MapSettings=function MapSettings(_ref){var setTooltipContent=_ref.setTooltipContent,setname=_ref.setname,setpop_est=_ref.setpop_est,setsubrg=_ref.setsubrg,setcontinent=_ref.setcontinent,setgdp=_ref.setgdp,setdisplay=_ref.setdisplay,setclickedCountry=_ref.setclickedCountry,handleColourFill=_ref.handleColourFill,handleColourStroke=_ref.handleColourStroke,setdoubleClicked=_ref.setdoubleClicked;return/*#__PURE__*/React.createElement(\"div\",{className:\"map-wrapper\"},/*#__PURE__*/React.createElement(ComposableMap,null,/*#__PURE__*/React.createElement(CustomZoomableGroup,{center:[0,0]},function(position){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Geographies,{geography:geoUrl},function(_ref2){var geographies=_ref2.geographies;return/*#__PURE__*/React.createElement(\"div\",null,geographies.map(function(geo){var fillcolour=handleColourFill(geo);var strokecolour=handleColourStroke(geo);return notThisCountry(geo)?/*#__PURE__*/React.createElement(Geography,{key:geo.rsmKey,geography:geo,fill:fillcolour,stroke:strokecolour,onMouseEnter:function onMouseEnter(){var _geo$properties=geo.properties,NAME=_geo$properties.NAME,POP_EST=_geo$properties.POP_EST,GDP_MD_EST=_geo$properties.GDP_MD_EST,SUBREGION=_geo$properties.SUBREGION,CONTINENT=_geo$properties.CONTINENT;// setTooltipContent(\n//   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n// );\nsetTooltipContent(\"\".concat(NAME,\" - ENEMY TERRITORY\"));setname(NAME);setpop_est(getnum(POP_EST));setgdp(getnum(GDP_MD_EST*Math.pow(10,6)));setsubrg(SUBREGION);setcontinent(CONTINENT);setdisplay(true);},onMouseLeave:function onMouseLeave(){setTooltipContent('');setdisplay(false);},style:{default:{fill:'#D6D6DA',outline:'none'},hover:{fill:'#F53',outline:'none'},pressed:{fill:'#D6D6DA',outline:'none'}},onClick:function onClick(){var ISO_A2=geo.properties.ISO_A2;setclickedCountry(ISO_A2);},onDoubleClick:function onDoubleClick(){setdoubleClicked();}}):null;}),geographies.map(function(geo){var centroid=geoCentroid(geo);var ISO_A2=geo.properties.ISO_A2;return/*#__PURE__*/React.createElement(\"g\",{key:geo.rsmKey},/*#__PURE__*/React.createElement(Marker,{coordinates:centroid},/*#__PURE__*/React.createElement(\"text\",{fontSize:7/position.k,alignmentBaseline:\"middle\"},countries[ISO_A2])));}));}));})));};var CustomZoomableGroup=function CustomZoomableGroup(_ref3){var children=_ref3.children,restProps=_objectWithoutProperties(_ref3,[\"children\"]);var _useZoomPan=useZoomPan(restProps),mapRef=_useZoomPan.mapRef,transformString=_useZoomPan.transformString,position=_useZoomPan.position;return/*#__PURE__*/ // <div className=\"zoomable-group\">\nReact.createElement(\"g\",{ref:mapRef},/*#__PURE__*/React.createElement(\"rect\",{fill:\"transparent\"}),/*#__PURE__*/React.createElement(\"g\",{transform:transformString},children(position)))// </div>\n;};export default GameMap;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","Annotation","Marker","useZoomPan","ReactTooltip","connect","loaddetails","geoCentroid","username","geoUrl","countriesLoaded","countries","socket","troops","countryStates","playerColours","players","countryState","Troops","Player","GameMap","onmessage","msg","action","JSON","parse","data","Type","Country","console","log","push","SideBar","state","setState","name","setname","pop_est","setpop_est","gdp","setgdp","subrg","setsubrg","continent","setcontinent","display","setdisplay","clickedCountry","setclickedCountry","handleclickedCountry","ISO_A2","handledoubleClicked","CountryDetails","undefined","handleColourFill","country","loadMap","properties","some","iso","col","TypeError","options","playerBox","map","p","getnum","num","Math","round","pow","notThisCountry","NAME","countryColors","fetch","then","raw","text","split","lines","s","forEach","line","slice","getCountryCodes","countrycode","fileURL","textByLine","x","countriesBordering","j","length","borders","i","MapSettings","setTooltipContent","handleColourStroke","setdoubleClicked","position","geographies","geo","fillcolour","strokecolour","rsmKey","POP_EST","GDP_MD_EST","SUBREGION","CONTINENT","default","fill","outline","hover","pressed","centroid","k","CustomZoomableGroup","children","restProps","mapRef","transformString"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport {\n\tComposableMap,\n\tGeographies,\n\tGeography,\n\tZoomableGroup,\n\tAnnotation,\n\tMarker,\n\tuseZoomPan\n} from 'react-simple-maps';\nimport ReactTooltip from 'react-tooltip';\n// import { useSpring, animated } from \"react-spring\";\nimport './Map.css';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { geoCentroid } from 'd3-geo';\n\nconst username = 'Shashwat';\n\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\n\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n\tconstructor(Troops, Player) {\n\t\tthis.Troops = Troops;\n\t\tthis.Player = Player;\n\t}\n}\n\nclass GameMap extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tsocket = connect();\n\t\tsocket.onmessage = (msg) => {\n\t\t\tvar action = JSON.parse(msg.data);\n\t\t\tswitch (action.Type) {\n\t\t\t\tcase 'updateTroops':\n\t\t\t\t\ttroops = action.Troops;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'updateCountry':\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n\t\t\t\t\t\tcountryStates[action.Country].Player != action.Player\n\t\t\t\t\t) {\n\t\t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'newPlayer':\n\t\t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n\t\t\t\t\tplayerColours[action.Player] = action.Country;\n\t\t\t\t\tplayers.push(action.Player);\n\t\t\t}\n\t\t};\n\t}\n\n\trender() {\n\t\treturn <SideBar />;\n\t}\n}\n\nfunction SideBar() {\n\t//Fetch #troops, attack, move options, fix data vals\n\tconst [ state, setState ] = useState('');\n\n\tconst [ name, setname ] = useState('');\n\tconst [ pop_est, setpop_est ] = useState('');\n\tconst [ gdp, setgdp ] = useState('');\n\tconst [ subrg, setsubrg ] = useState('');\n\tconst [ continent, setcontinent ] = useState('');\n\tconst [ display, setdisplay ] = useState(false);\n\tconst [ clickedCountry, setclickedCountry ] = useState('');\n\n\tconst handleclickedCountry = (ISO_A2) => {\n\t\tsetclickedCountry(ISO_A2);\n\t};\n\n\tconst handledoubleClicked = () => {\n\t\tsetclickedCountry('');\n\t};\n\n\tconst CountryDetails = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Spy Report On {name}:</h2>\n\t\t\t\t<h3>{countryStates[clickedCountry].Troops !== undefined && countryStates[clickedCountry].Troops}</h3>\n\t\t\t\t<h3>Population: {pop_est}</h3>\n\t\t\t\t<h3>GDP (PPP): {gdp}</h3>\n\t\t\t\t{continent !== 'South America' && <h3>Subregion: {subrg}</h3>}\n\t\t\t\t<h3>Continent: {continent}</h3>\n\t\t\t\t<h3>Allegiance: Ohio</h3>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst handleColourFill = (country) => {\n\t\tif (!countriesLoaded) {\n\t\t\tloadMap();\n\t\t\tcountriesLoaded = true;\n\t\t}\n\t\tconst { ISO_A2 } = country.properties;\n\n\t\tif (\n\t\t\tclickedCountry !== '' &&\n\t\t\tcountries[clickedCountry] !== undefined &&\n\t\t\tcountries[clickedCountry].some((iso) => iso === ISO_A2)\n\t\t) {\n\t\t\treturn '#be90d4';\n\t\t}\n\t\ttry {\n\t\t\tvar col = playerColours[countryStates[ISO_A2].Player];\n\t\t\tif (typeof col == 'undefined') {\n\t\t\t\tcol = '#B9A37E';\n\t\t\t}\n\t\t\treturn col;\n\t\t} catch (TypeError) {\n\t\t\treturn '#B9A37E';\n\t\t}\n\t};\n\n\tconst options = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button>ATTACK</button>\n\t\t\t\t<button>MOVE</button>\n\t\t\t\t<button>DONATE</button>\n\t\t\t\t<button>OPTION 4</button>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst playerBox = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>PLAYERS:</h2>\n\t\t\t\t<ul>{players.map((p) => <li key={p}>p</li>)}</ul>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<playerBox />\n\t\t\t<div className=\"map-sidebar-wrapper\">\n\t\t\t\t<div className=\"map-sidebar-info-wrapper\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>START THE CONQUEST!</h1>\n\t\t\t\t\t\t<h2>Welcome Commander {username}!</h2>\n\t\t\t\t\t\t<h3>BASE TROOPS: {troops}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is your war control room. Help us attain victory over our enemies. The Gods are on our\n\t\t\t\t\t\tside!\n\t\t\t\t\t</p>\n\t\t\t\t\t{clickedCountry !== '' && <selectedCountryOptions />}\n\t\t\t\t\t{display && <CountryDetails />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<MapSettings\n\t\t\t\tsetTooltipContent={setState}\n\t\t\t\tsetname={setname}\n\t\t\t\tsetgdp={setgdp}\n\t\t\t\tsetpop_est={setpop_est}\n\t\t\t\tsetdisplay={setdisplay}\n\t\t\t\tsetcontinent={setcontinent}\n\t\t\t\tsetsubrg={setsubrg}\n\t\t\t\tsetclickedCountry={handleclickedCountry}\n\t\t\t\tsetdoubleClicked={handledoubleClicked}\n\t\t\t\thandleColourFill={handleColourFill}\n\t\t\t\thandleColourStroke={handleColourFill}\n\t\t\t/>\n\t\t\t<ReactTooltip>{state}</ReactTooltip>\n\t\t</div>\n\t);\n}\n\nconst getnum = (num) => {\n\tvar num = Math.round(num);\n\tif (num > Math.pow(10, 12)) {\n\t\tnum = num / Math.pow(10, 12) + ' Trillion';\n\t} else if (num > Math.pow(10, 9)) {\n\t\tnum = num / Math.pow(10, 9) + ' Billion';\n\t} else if (num > Math.pow(10, 6)) {\n\t\tnum = num / Math.pow(10, 6) + ' Million';\n\t}\n\treturn num;\n};\n\n//Countries to not display\nfunction notThisCountry(country) {\n\tconst { NAME } = country.properties;\n\treturn NAME !== '';\n}\n\nvar clickedCountry;\n//TODO: player team colour for country\nfunction countryColors(country) {\n\tconst { NAME, ISO_A2 } = country.properties;\n\treturn '#AAA';\n}\n\nfunction loadMap() {\n\t//TODO: take value from the cookie\n\tfetch('/maps/world.txt')\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((lines) => lines.map((s) => s.split(' ')))\n\t\t.then((lines) => lines.forEach((line) => (countries[line[0]] = line.slice(1))));\n}\n\n//FIXME: fix read file correctly\nfunction getCountryCodes(countrycode) {\n\t// var fs = require(\"fs\");\n\tconst fileURL = '/maps/world.txt';\n\tvar textByLine = '';\n\tfetch(fileURL)\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((raw) => raw.map((x) => x.split(' ')))\n\t\t.then((raw) => (textByLine = raw));\n\n\tvar countriesBordering = [];\n\n\tfor (let j = 0; j < textByLine.length; j++) {\n\t\tvar borders = textByLine[j].split(' ');\n\t\tif (borders[0] == countrycode) {\n\t\t\tfor (let i = 1; i < borders.length; i++) {\n\t\t\t\t//Get border codes\n\t\t\t\tcountriesBordering.push(borders[i]);\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(countriesBordering);\n\treturn countriesBordering;\n}\n\n/* GAME MAP */\n\nconst MapSettings = ({\n\tsetTooltipContent,\n\tsetname,\n\tsetpop_est,\n\tsetsubrg,\n\tsetcontinent,\n\tsetgdp,\n\tsetdisplay,\n\tsetclickedCountry,\n\thandleColourFill,\n\thandleColourStroke,\n\tsetdoubleClicked\n}) => {\n\treturn (\n\t\t<div className=\"map-wrapper\">\n\t\t\t<ComposableMap>\n\t\t\t\t<CustomZoomableGroup center={[ 0, 0 ]}>\n\t\t\t\t\t{(position) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Geographies geography={geoUrl}>\n\t\t\t\t\t\t\t\t{({ geographies }) => (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n\t\t\t\t\t\t\t\t\t\t\tconst fillcolour = handleColourFill(geo);\n\t\t\t\t\t\t\t\t\t\t\tconst strokecolour = handleColourStroke(geo);\n\t\t\t\t\t\t\t\t\t\t\treturn notThisCountry(geo) ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<Geography\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgeography={geo}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill={fillcolour}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke={strokecolour}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNAME,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPOP_EST,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGDP_MD_EST,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBREGION,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONTINENT\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} = geo.properties;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// setTooltipContent(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME} - ENEMY TERRITORY`);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetname(NAME);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpop_est(getnum(POP_EST));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetsubrg(SUBREGION);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetcontinent(CONTINENT);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent('');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#F53',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpressed: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetclickedCountry(ISO_A2);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdoubleClicked();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n\t\t\t\t\t\t\t\t\t\t\tconst centroid = geoCentroid(geo);\n\t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<g key={geo.rsmKey}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Marker coordinates={centroid}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text fontSize={7 / position.k} alignmentBaseline=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countries[ISO_A2]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Geographies>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</CustomZoomableGroup>\n\t\t\t</ComposableMap>\n\t\t</div>\n\t);\n};\n\nconst CustomZoomableGroup = ({ children, ...restProps }) => {\n\tconst { mapRef, transformString, position } = useZoomPan(restProps);\n\treturn (\n\t\t// <div className=\"zoomable-group\">\n\t\t<g ref={mapRef}>\n\t\t\t<rect fill=\"transparent\" />\n\t\t\t<g transform={transformString}>{children(position)}</g>\n\t\t</g>\n\t\t// </div>\n\t);\n};\n\nexport default GameMap;\n"]},"metadata":{},"sourceType":"module"}