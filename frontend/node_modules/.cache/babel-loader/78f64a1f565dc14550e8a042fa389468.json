{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx\";\nimport React, { Component, useState } from 'react';\nimport './Map.css';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { Typography, Paper, makeStyles, IconButton, Snackbar } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport HelpIcon from '@material-ui/icons/Help';\nimport VectorMap from './VectorMap';\nconst username = 'Shashwat';\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n  constructor(Troops, Player) {\n    this.Troops = Troops;\n    this.Player = Player;\n  }\n\n}\n\nclass GameMap extends Component {\n  // constructor() {\n  // \tsuper();\n  // \tsocket = connect();\n  // \tsocket.onmessage = (msg) => {\n  // \t\tvar action = JSON.parse(msg.data);\n  // \t\tswitch (action.Type) {\n  // \t\t\tcase 'updateTroops':\n  // \t\t\t\ttroops = action.Troops;\n  // \t\t\t\tbreak;\n  // \t\t\tcase 'updateCountry':\n  // \t\t\t\tif (\n  // \t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n  // \t\t\t\t\tcountryStates[action.Country].Player != action.Player\n  // \t\t\t\t) {\n  // \t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n  // \t\t\t\t} else {\n  // \t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n  // \t\t\t\t}\n  // \t\t\t\tbreak;\n  // \t\t\tcase 'newPlayer':\n  // \t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n  // \t\t\t\tplayerColours[action.Player] = action.Country;\n  // \t\t\t\tplayers.push(action.Player);\n  // \t\t}\n  // \t};\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(SideBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }\n    });\n  }\n\n}\n\nconst useStyles = makeStyles(theme => ({\n  sidebarPaper: {\n    marginLeft: '70%',\n    marginTop: '10%',\n    background: fade('#000000', 0.8),\n    color: 'white',\n    padding: theme.spacing(3),\n    position: 'fixed',\n    width: '30%',\n    height: '80%',\n    borderRadius: '5%',\n    boxShadow: '0px 10px 50px #555'\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction SideBar() {\n  const classes = useStyles(); //Fetch #troops, attack, move options, fix data vals\n  //TODO: Import username from entry form\n\n  const [name, setname] = useState('Shashwat');\n  const [pop_est, setpop_est] = useState('');\n  const [gdp, setgdp] = useState('');\n  const [subrg, setsubrg] = useState('');\n  const [continent, setcontinent] = useState('');\n  const [display, setdisplay] = useState(false);\n  const [clickedCountry, setclickedCountry] = useState('');\n\n  const handleclickedCountry = ISO_A2 => {\n    setclickedCountry(ISO_A2);\n  };\n\n  const handledoubleClicked = () => {\n    setclickedCountry('');\n  };\n\n  const CountryDetails = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, \"Spy Report On \", name, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, countryStates[clickedCountry].Troops !== undefined && countryStates[clickedCountry].Troops), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, \"Population: \", pop_est), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }\n    }, \"GDP (PPP): \", gdp), continent !== 'South America' && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 39\n      }\n    }, \"Subregion: \", subrg), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, \"Continent: \", continent), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, \"Allegiance: Ohio\"));\n  };\n\n  const handleColourFill = country => {\n    if (!countriesLoaded) {\n      loadMap();\n      countriesLoaded = true;\n    }\n\n    const {\n      ISO_A2\n    } = country.properties;\n\n    if (clickedCountry !== '' && countries[clickedCountry] !== undefined && countries[clickedCountry].some(iso => iso === ISO_A2)) {\n      return '#be90d4';\n    }\n\n    try {\n      var col = playerColours[countryStates[ISO_A2].Player];\n\n      if (typeof col == 'undefined') {\n        col = '#B9A37E';\n      }\n\n      return col;\n    } catch (TypeError) {\n      return '#B9A37E';\n    }\n  };\n\n  const options = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }\n    }, \"ATTACK\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }\n    }, \"MOVE\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }, \"DONATE\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }\n    }, \"DEPLOY\"));\n  };\n\n  const PlayerBox = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 6\n      }\n    }, \"PLAYERS:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 6\n      }\n    }, players.map(p => /*#__PURE__*/React.createElement(\"li\", {\n      key: p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 30\n      }\n    }, \"p\")))));\n  };\n\n  const DisplayMap = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(VectorMap // setname={setname}\n    // setgdp={setgdp}\n    // setpop_est={setpop_est}\n    // setdisplay={setdisplay}\n    // setcontinent={setcontinent}\n    // setsubrg={setsubrg}\n    // setclickedCountry={handleclickedCountry}\n    // setdoubleClicked={handledoubleClicked}\n    // handleColourFill={handleColourFill}\n    // handleColourStroke={handleColourFill}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    class: classes.sidebarPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, \"Welcome, Commander \", name, \"!\"), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"help\",\n    color: \"primary\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HelpIcon, {\n    style: {\n      fontSize: '50'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"This is a success message!\")))), /*#__PURE__*/React.createElement(DisplayMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar clickedCountry; //TODO: player team colour for country\n\nfunction countryColors(country) {\n  const {\n    NAME,\n    ISO_A2\n  } = country.properties;\n  return '#AAA';\n}\n\nfunction loadMap() {\n  //TODO: take value from the cookie\n  fetch('/maps/world.txt').then(raw => raw.text()).then(raw => raw.split('\\n')).then(lines => lines.map(s => s.split(' '))).then(lines => lines.forEach(line => countries[line[0]] = line.slice(1)));\n} //FIXME: fix read file correctly\n\n\nfunction getCountryCodes(countrycode) {\n  // var fs = require(\"fs\");\n  const fileURL = '/maps/world.txt';\n  var textByLine = '';\n  fetch(fileURL).then(raw => raw.text()).then(raw => raw.split('\\n')).then(raw => raw.map(x => x.split(' '))).then(raw => textByLine = raw);\n  var countriesBordering = [];\n\n  for (let j = 0; j < textByLine.length; j++) {\n    var borders = textByLine[j].split(' ');\n\n    if (borders[0] == countrycode) {\n      for (let i = 1; i < borders.length; i++) {\n        //Get border codes\n        countriesBordering.push(borders[i]);\n      }\n    }\n  }\n\n  console.log(countriesBordering);\n  return countriesBordering;\n}\n/* GAME MAP */\n// const MapSettings = ({\n// \tsetTooltipContent,\n// \tsetname,\n// \tsetpop_est,\n// \tsetsubrg,\n// \tsetcontinent,\n// \tsetgdp,\n// \tsetdisplay,\n// \tsetclickedCountry,\n// \thandleColourFill,\n// \thandleColourStroke,\n// \tsetdoubleClicked\n// }) => {\n// \treturn (\n// \t\t<div className=\"map-wrapper\">\n// \t\t\t<ComposableMap>\n// \t\t\t\t<CustomZoomableGroup center={[ 0, 0 ]}>\n// \t\t\t\t\t{(position) => (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<Geographies geography={geoUrl}>\n// \t\t\t\t\t\t\t\t{({ geographies }) => (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n// \t\t\t\t\t\t\t\t\t\t\tconst fillcolour = handleColourFill(geo);\n// \t\t\t\t\t\t\t\t\t\t\tconst strokecolour = handleColourStroke(geo);\n// \t\t\t\t\t\t\t\t\t\t\treturn notThisCountry(geo) ? (\n// \t\t\t\t\t\t\t\t\t\t\t\t<Geography\n// \t\t\t\t\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tgeography={geo}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tfill={fillcolour}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tstroke={strokecolour}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNAME,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPOP_EST,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGDP_MD_EST,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBREGION,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONTINENT\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t} = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t// setTooltipContent(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t//   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME} - ENEMY TERRITORY`);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetname(NAME);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpop_est(getnum(POP_EST));\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetsubrg(SUBREGION);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetcontinent(CONTINENT);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(true);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent('');\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(false);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\thover: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#F53',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tpressed: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetclickedCountry(ISO_A2);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdoubleClicked();\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t\t) : null;\n// \t\t\t\t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n// \t\t\t\t\t\t\t\t\t\t\tconst centroid = geoCentroid(geo);\n// \t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t\t\t\t<g key={geo.rsmKey}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Marker coordinates={centroid}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text fontSize={7 / position.k} alignmentBaseline=\"middle\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countries[ISO_A2]}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</Marker>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t</g>\n// \t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t</Geographies>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</CustomZoomableGroup>\n// \t\t\t</ComposableMap>\n// \t\t</div>\n// \t);\n// };\n\n\nexport default SideBar;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx"],"names":["React","Component","useState","connect","loaddetails","Typography","Paper","makeStyles","IconButton","Snackbar","fade","HelpIcon","VectorMap","username","geoUrl","countriesLoaded","countries","socket","troops","countryStates","playerColours","players","countryState","constructor","Troops","Player","GameMap","render","useStyles","theme","sidebarPaper","marginLeft","marginTop","background","color","padding","spacing","position","width","height","borderRadius","boxShadow","buttons","display","justifyContent","button","SideBar","classes","name","setname","pop_est","setpop_est","gdp","setgdp","subrg","setsubrg","continent","setcontinent","setdisplay","clickedCountry","setclickedCountry","handleclickedCountry","ISO_A2","handledoubleClicked","CountryDetails","undefined","handleColourFill","country","loadMap","properties","some","iso","col","TypeError","options","PlayerBox","map","p","DisplayMap","fontSize","open","handleClose","countryColors","NAME","fetch","then","raw","text","split","lines","s","forEach","line","slice","getCountryCodes","countrycode","fileURL","textByLine","x","countriesBordering","j","length","borders","i","push","console","log"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport './Map.css';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { Typography, Paper, makeStyles, IconButton, Snackbar } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport HelpIcon from '@material-ui/icons/Help';\nimport VectorMap from './VectorMap';\n\nconst username = 'Shashwat';\n\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\n\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n\tconstructor(Troops, Player) {\n\t\tthis.Troops = Troops;\n\t\tthis.Player = Player;\n\t}\n}\n\nclass GameMap extends Component {\n\t// constructor() {\n\t// \tsuper();\n\t// \tsocket = connect();\n\t// \tsocket.onmessage = (msg) => {\n\t// \t\tvar action = JSON.parse(msg.data);\n\t// \t\tswitch (action.Type) {\n\t// \t\t\tcase 'updateTroops':\n\t// \t\t\t\ttroops = action.Troops;\n\t// \t\t\t\tbreak;\n\t// \t\t\tcase 'updateCountry':\n\t// \t\t\t\tif (\n\t// \t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n\t// \t\t\t\t\tcountryStates[action.Country].Player != action.Player\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n\t// \t\t\t\t} else {\n\t// \t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n\t// \t\t\t\t}\n\t// \t\t\t\tbreak;\n\t// \t\t\tcase 'newPlayer':\n\t// \t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n\t// \t\t\t\tplayerColours[action.Player] = action.Country;\n\t// \t\t\t\tplayers.push(action.Player);\n\t// \t\t}\n\t// \t};\n\t// }\n\n\trender() {\n\t\treturn <SideBar />;\n\t}\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tsidebarPaper: {\n\t\tmarginLeft: '70%',\n\t\tmarginTop: '10%',\n\t\tbackground: fade('#000000', 0.8),\n\t\tcolor: 'white',\n\t\tpadding: theme.spacing(3),\n\t\tposition: 'fixed',\n\t\twidth: '30%',\n\t\theight: '80%',\n\t\tborderRadius: '5%',\n\t\tboxShadow: '0px 10px 50px #555'\n\t},\n\tbuttons: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-end'\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing(3),\n\t\tmarginLeft: theme.spacing(1)\n\t}\n}));\n\nfunction SideBar() {\n\tconst classes = useStyles();\n\n\t//Fetch #troops, attack, move options, fix data vals\n\t//TODO: Import username from entry form\n\tconst [ name, setname ] = useState('Shashwat');\n\tconst [ pop_est, setpop_est ] = useState('');\n\tconst [ gdp, setgdp ] = useState('');\n\tconst [ subrg, setsubrg ] = useState('');\n\tconst [ continent, setcontinent ] = useState('');\n\tconst [ display, setdisplay ] = useState(false);\n\tconst [ clickedCountry, setclickedCountry ] = useState('');\n\n\tconst handleclickedCountry = (ISO_A2) => {\n\t\tsetclickedCountry(ISO_A2);\n\t};\n\n\tconst handledoubleClicked = () => {\n\t\tsetclickedCountry('');\n\t};\n\n\tconst CountryDetails = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Spy Report On {name}:</h2>\n\t\t\t\t<h3>{countryStates[clickedCountry].Troops !== undefined && countryStates[clickedCountry].Troops}</h3>\n\t\t\t\t<h3>Population: {pop_est}</h3>\n\t\t\t\t<h3>GDP (PPP): {gdp}</h3>\n\t\t\t\t{continent !== 'South America' && <h3>Subregion: {subrg}</h3>}\n\t\t\t\t<h3>Continent: {continent}</h3>\n\t\t\t\t<h3>Allegiance: Ohio</h3>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst handleColourFill = (country) => {\n\t\tif (!countriesLoaded) {\n\t\t\tloadMap();\n\t\t\tcountriesLoaded = true;\n\t\t}\n\t\tconst { ISO_A2 } = country.properties;\n\n\t\tif (\n\t\t\tclickedCountry !== '' &&\n\t\t\tcountries[clickedCountry] !== undefined &&\n\t\t\tcountries[clickedCountry].some((iso) => iso === ISO_A2)\n\t\t) {\n\t\t\treturn '#be90d4';\n\t\t}\n\t\ttry {\n\t\t\tvar col = playerColours[countryStates[ISO_A2].Player];\n\t\t\tif (typeof col == 'undefined') {\n\t\t\t\tcol = '#B9A37E';\n\t\t\t}\n\t\t\treturn col;\n\t\t} catch (TypeError) {\n\t\t\treturn '#B9A37E';\n\t\t}\n\t};\n\n\tconst options = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button>ATTACK</button>\n\t\t\t\t<button>MOVE</button>\n\t\t\t\t<button>DONATE</button>\n\t\t\t\t<button>DEPLOY</button>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst PlayerBox = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper>\n\t\t\t\t\t<Typography variant=\"subtitle1\">PLAYERS:</Typography>\n\t\t\t\t\t<ul>{players.map((p) => <li key={p}>p</li>)}</ul>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst DisplayMap = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<VectorMap\n\t\t\t\t// setname={setname}\n\t\t\t\t// setgdp={setgdp}\n\t\t\t\t// setpop_est={setpop_est}\n\t\t\t\t// setdisplay={setdisplay}\n\t\t\t\t// setcontinent={setcontinent}\n\t\t\t\t// setsubrg={setsubrg}\n\t\t\t\t// setclickedCountry={handleclickedCountry}\n\t\t\t\t// setdoubleClicked={handledoubleClicked}\n\t\t\t\t// handleColourFill={handleColourFill}\n\t\t\t\t// handleColourStroke={handleColourFill}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Paper class={classes.sidebarPaper}>\n\t\t\t\t<Typography variant=\"h4\">Welcome, Commander {name}!</Typography>\n\t\t\t\t<IconButton aria-label=\"help\" color=\"primary\" size=\"small\">\n\t\t\t\t\t<HelpIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: '50'\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n\t\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\">\n\t\t\t\t\t\t\tThis is a success message!\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</Snackbar>\n\t\t\t\t</IconButton>\n\t\t\t</Paper>\n\n\t\t\t{/* <PlayerBox />\n\t\t\t<div className=\"map-sidebar-wrapper\">\n\t\t\t\t<div className=\"map-sidebar-info-wrapper\">\n\t\t\t\t\t<h1>START THE CONQUEST!</h1>\n\t\t\t\t\t<Typography variant=\"h4\">Welcome Commander {username}!</Typography>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Typography variant=\"subtitle1\">BASE TROOPS: {troops}</Typography>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is your war control room. Help us attain victory over our enemies. The Gods are on our\n\t\t\t\t\t\tside!\n\t\t\t\t\t</p>\n\t\t\t\t\t{clickedCountry !== '' && <selectedCountryOptions />}\n\t\t\t\t\t{display && <CountryDetails />}\n\t\t\t\t</div>\n\t\t\t</div> */}\n\t\t\t<DisplayMap />\n\t\t</div>\n\t);\n}\n\nvar clickedCountry;\n//TODO: player team colour for country\nfunction countryColors(country) {\n\tconst { NAME, ISO_A2 } = country.properties;\n\treturn '#AAA';\n}\n\nfunction loadMap() {\n\t//TODO: take value from the cookie\n\tfetch('/maps/world.txt')\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((lines) => lines.map((s) => s.split(' ')))\n\t\t.then((lines) => lines.forEach((line) => (countries[line[0]] = line.slice(1))));\n}\n\n//FIXME: fix read file correctly\nfunction getCountryCodes(countrycode) {\n\t// var fs = require(\"fs\");\n\tconst fileURL = '/maps/world.txt';\n\tvar textByLine = '';\n\tfetch(fileURL)\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((raw) => raw.map((x) => x.split(' ')))\n\t\t.then((raw) => (textByLine = raw));\n\n\tvar countriesBordering = [];\n\n\tfor (let j = 0; j < textByLine.length; j++) {\n\t\tvar borders = textByLine[j].split(' ');\n\t\tif (borders[0] == countrycode) {\n\t\t\tfor (let i = 1; i < borders.length; i++) {\n\t\t\t\t//Get border codes\n\t\t\t\tcountriesBordering.push(borders[i]);\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(countriesBordering);\n\treturn countriesBordering;\n}\n\n/* GAME MAP */\n\n// const MapSettings = ({\n// \tsetTooltipContent,\n// \tsetname,\n// \tsetpop_est,\n// \tsetsubrg,\n// \tsetcontinent,\n// \tsetgdp,\n// \tsetdisplay,\n// \tsetclickedCountry,\n// \thandleColourFill,\n// \thandleColourStroke,\n// \tsetdoubleClicked\n// }) => {\n// \treturn (\n// \t\t<div className=\"map-wrapper\">\n// \t\t\t<ComposableMap>\n// \t\t\t\t<CustomZoomableGroup center={[ 0, 0 ]}>\n// \t\t\t\t\t{(position) => (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<Geographies geography={geoUrl}>\n// \t\t\t\t\t\t\t\t{({ geographies }) => (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n// \t\t\t\t\t\t\t\t\t\t\tconst fillcolour = handleColourFill(geo);\n// \t\t\t\t\t\t\t\t\t\t\tconst strokecolour = handleColourStroke(geo);\n// \t\t\t\t\t\t\t\t\t\t\treturn notThisCountry(geo) ? (\n// \t\t\t\t\t\t\t\t\t\t\t\t<Geography\n// \t\t\t\t\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tgeography={geo}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tfill={fillcolour}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tstroke={strokecolour}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNAME,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPOP_EST,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGDP_MD_EST,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBREGION,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONTINENT\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t} = geo.properties;\n\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t// setTooltipContent(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t//   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME} - ENEMY TERRITORY`);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetname(NAME);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpop_est(getnum(POP_EST));\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetsubrg(SUBREGION);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetcontinent(CONTINENT);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(true);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent('');\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(false);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\thover: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#F53',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tpressed: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetclickedCountry(ISO_A2);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdoubleClicked();\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t\t) : null;\n// \t\t\t\t\t\t\t\t\t\t})}\n\n// \t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n// \t\t\t\t\t\t\t\t\t\t\tconst centroid = geoCentroid(geo);\n// \t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t\t\t\t<g key={geo.rsmKey}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Marker coordinates={centroid}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text fontSize={7 / position.k} alignmentBaseline=\"middle\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countries[ISO_A2]}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</Marker>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t</g>\n// \t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t</Geographies>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</CustomZoomableGroup>\n// \t\t\t</ComposableMap>\n// \t\t</div>\n// \t);\n// };\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}