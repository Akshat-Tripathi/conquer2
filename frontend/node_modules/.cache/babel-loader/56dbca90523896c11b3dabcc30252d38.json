{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Documents/Projects/conquer2/V0.2/conquer2/frontend/src/pages/Map.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./Map.css\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst id = \"test\";\nconst socketURL = \"ws://localhost:8080/game/\" + id + \"ws\";\n\nclass GameMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.socket = new WebSocket(socketURL + id + \"ws\");\n  }\n\n  componentDidMount() {\n    this.socket.onopen = () => {\n      console.log(\"Connection Successful\");\n    };\n\n    this.socket.onmessage = msg => {\n      const message = JSON.parse(msg.data);\n      console.log(msg);\n    };\n\n    this.socket.onclose = () => {\n      console.log(\"Disconnected\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MapDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nfunction MapDisplay() {\n  const [state, setState] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MapSettings, {\n    setTooltipContent: setState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, state));\n}\n\nvar country;\nvar pop_est;\nvar gdp;\nvar subrg;\nvar continent;\n\nfunction CountryDetails() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Spy Report On \", country, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Population: \", pop_est), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"GDP: \", gdp), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Subregion: \", subrg), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Continent: \", continent));\n}\n\nfunction SideBar() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-sidebar-info-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Welcome Commander!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"This is your war control room. Help us attain victory over our enemies. The Gods are on our side!\"), /*#__PURE__*/React.createElement(CountryDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst getnum = num => {\n  var actual_num = num * Math.pow(10, 6);\n  var num = Math.round(actual_num);\n\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n\n  return num;\n};\n\nconst MapSettings = ({\n  setTooltipContent\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    fill: \"#AAA\",\n    stroke: \"#FFF\",\n    onMouseEnter: () => {\n      const {\n        NAME,\n        GDP_MD_EST\n      } = geo.properties;\n      setTooltipContent(`${NAME} - $${getnum(GDP_MD_EST)}`);\n    },\n    onMouseLeave: () => {\n      setTooltipContent(\"\");\n    },\n    onClick: () => {\n      const {\n        NAME,\n        POP_EST,\n        GDP_MD_EST,\n        SUBREGION,\n        CONTINENT\n      } = geo.properties;\n      country = NAME;\n      pop_est = getnum(POP_EST);\n      gdp = getnum(GDP_MD_EST);\n      subrg = SUBREGION;\n      continent = CONTINENT;\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default GameMap;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Documents/Projects/conquer2/V0.2/conquer2/frontend/src/pages/Map.jsx"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ZoomableGroup","ReactTooltip","useSpring","animated","geoUrl","id","socketURL","GameMap","socket","WebSocket","componentDidMount","onopen","console","log","onmessage","msg","message","JSON","parse","data","onclose","render","MapDisplay","state","setState","country","pop_est","gdp","subrg","continent","CountryDetails","SideBar","getnum","num","actual_num","Math","pow","round","MapSettings","setTooltipContent","geographies","map","geo","rsmKey","NAME","GDP_MD_EST","properties","POP_EST","SUBREGION","CONTINENT","default","fill","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./Map.css\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst id = \"test\";\nconst socketURL = \"ws://localhost:8080/game/\" + id + \"ws\";\n\nclass GameMap extends Component {\n  socket = new WebSocket(socketURL + id + \"ws\");\n  componentDidMount() {\n    this.socket.onopen = () => {\n      console.log(\"Connection Successful\");\n    };\n\n    this.socket.onmessage = (msg) => {\n      const message = JSON.parse(msg.data);\n      console.log(msg);\n    };\n\n    this.socket.onclose = () => {\n      console.log(\"Disconnected\");\n    };\n  }\n\n  render() {\n    return <MapDisplay />;\n  }\n}\n\nfunction MapDisplay() {\n  const [state, setState] = useState(\"\");\n  return (\n    <div>\n      <SideBar />\n      <MapSettings setTooltipContent={setState} />\n      <ReactTooltip>{state}</ReactTooltip>\n    </div>\n  );\n}\n\nvar country;\nvar pop_est;\nvar gdp;\nvar subrg;\nvar continent;\n\nfunction CountryDetails() {\n  return (\n    <div>\n      <h2>Spy Report On {country}:</h2>\n      <h3>Population: {pop_est}</h3>\n      <h3>GDP: {gdp}</h3>\n      <h3>Subregion: {subrg}</h3>\n      <h3>Continent: {continent}</h3>\n    </div>\n  );\n}\n\nfunction SideBar() {\n  return (\n    <div className=\"map-sidebar-wrapper\">\n      <div className=\"map-sidebar-info-wrapper\">\n        <h1>Welcome Commander!</h1>\n        <p>\n          This is your war control room. Help us attain victory over our\n          enemies. The Gods are on our side!\n        </p>\n        <CountryDetails />\n      </div>\n    </div>\n  );\n}\n\nconst getnum = (num) => {\n  var actual_num = num * Math.pow(10, 6);\n  var num = Math.round(actual_num);\n  if (num > Math.pow(10, 12)) {\n    num = num / Math.pow(10, 12) + \" Trillion\";\n  } else if (num > Math.pow(10, 9)) {\n    num = num / Math.pow(10, 9) + \" Billion\";\n  } else if (num > Math.pow(10, 6)) {\n    num = num / Math.pow(10, 6) + \" Million\";\n  }\n  return num;\n};\n\nconst MapSettings = ({ setTooltipContent }) => {\n  return (\n    <div className=\"map-wrapper\">\n      <ComposableMap data-tip=\"\">\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill=\"#AAA\"\n                  stroke=\"#FFF\"\n                  onMouseEnter={() => {\n                    const { NAME, GDP_MD_EST } = geo.properties;\n                    setTooltipContent(`${NAME} - $${getnum(GDP_MD_EST)}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  onClick={() => {\n                    const {\n                      NAME,\n                      POP_EST,\n                      GDP_MD_EST,\n                      SUBREGION,\n                      CONTINENT,\n                    } = geo.properties;\n                    country = NAME;\n                    pop_est = getnum(POP_EST);\n                    gdp = getnum(GDP_MD_EST);\n                    subrg = SUBREGION;\n                    continent = CONTINENT;\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\",\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default GameMap;\n"]},"metadata":{},"sourceType":"module"}