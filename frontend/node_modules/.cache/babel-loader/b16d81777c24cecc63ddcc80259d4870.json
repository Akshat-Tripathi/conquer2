{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx\";\nimport React, { Component, useState } from 'react';\nimport './Map.css';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { Typography, Paper, makeStyles, IconButton, Snackbar, Grid } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport MapChart from './VectorMap';\nimport ReactTooltip from 'react-tooltip';\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n  constructor(Troops, Player) {\n    this.Troops = Troops;\n    this.Player = Player;\n  }\n\n}\n\nclass GameMap extends Component {\n  // constructor() {\n  // \tsuper();\n  // \tsocket = connect();\n  // \tsocket.onmessage = (msg) => {\n  // \t\tvar action = JSON.parse(msg.data);\n  // \t\tswitch (action.Type) {\n  // \t\t\tcase 'updateTroops':\n  // \t\t\t\ttroops = action.Troops;\n  // \t\t\t\tbreak;\n  // \t\t\tcase 'updateCountry':\n  // \t\t\t\tif (\n  // \t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n  // \t\t\t\t\tcountryStates[action.Country].Player != action.Player\n  // \t\t\t\t) {\n  // \t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n  // \t\t\t\t} else {\n  // \t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n  // \t\t\t\t}\n  // \t\t\t\tbreak;\n  // \t\t\tcase 'newPlayer':\n  // \t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n  // \t\t\t\tplayerColours[action.Player] = action.Country;\n  // \t\t\t\tplayers.push(action.Player);\n  // \t\t}\n  // \t};\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(SideBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }\n    });\n  }\n\n}\n\nconst useStyles = makeStyles(theme => ({\n  sidebarPaper: {\n    marginLeft: '70%',\n    marginTop: '10%',\n    background: fade('#000000', 0.8),\n    color: 'white',\n    padding: theme.spacing(3),\n    position: 'fixed',\n    width: '30%',\n    height: '80%',\n    borderRadius: '5%',\n    boxShadow: '0px 10px 50px #555'\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction VectorMap() {\n  const [content, setContent] = React.useState('');\n  const [geo, setgeo] = useState(null);\n  const mapWidth = 1000;\n  const mapHeight = 600;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(MapChart, {\n    setTooltipContent: setContent,\n    mapWidth: mapWidth,\n    mapHeight: mapHeight,\n    setgeo: setgeo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }, content));\n}\n\nfunction SideBar() {\n  const classes = useStyles(); //Fetch #troops, attack, move options, fix data vals\n  //TODO: Import username from entry form\n\n  const [name, setname] = useState('Shashwat');\n  const [pop_est, setpop_est] = useState('');\n  const [gdp, setgdp] = useState('');\n  const [subrg, setsubrg] = useState('');\n  const [continent, setcontinent] = useState('');\n  const [display, setdisplay] = useState(false);\n  const [clickedCountry, setclickedCountry] = useState(''); //For the snackbar display settings\n\n  const [openHelp, setOpenHelp] = React.useState(false); //Get the geo data for each country\n\n  const [geo, setgeo] = useState(null);\n\n  const handleOpenHelp = () => {\n    setOpenHelp(true);\n  };\n\n  const handleCloseHelp = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenHelp(false);\n  };\n\n  const handleColourFill = country => {\n    if (!countriesLoaded) {\n      loadMap();\n      countriesLoaded = true;\n    }\n\n    const {\n      ISO_A2\n    } = country.properties;\n\n    if (clickedCountry !== '' && countries[clickedCountry] !== undefined && countries[clickedCountry].some(iso => iso === ISO_A2)) {\n      return '#be90d4';\n    }\n\n    try {\n      var col = playerColours[countryStates[ISO_A2].Player];\n\n      if (typeof col == 'undefined') {\n        col = '#B9A37E';\n      }\n\n      return col;\n    } catch (TypeError) {\n      return '#B9A37E';\n    }\n  };\n\n  const SpyDetails = geo => {\n    const {\n      name,\n      pop_est,\n      gdp,\n      continent,\n      subrg\n    } = geo.properties;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }\n    }, \"Spy Report On \", name, \":\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }, countryStates[clickedCountry].Troops !== undefined && countryStates[clickedCountry].Troops), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }\n    }, \"Population: \", pop_est), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    }, \"GDP (PPP): \", gdp), continent !== 'South America' && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 39\n      }\n    }, \"Subregion: \", subrg), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }\n    }, \"Continent: \", continent), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }\n    }, \"Allegiance: Ohio\"));\n  };\n\n  const options = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }\n    }, \"ATTACK\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }\n    }, \"MOVE\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }\n    }, \"DONATE\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }\n    }, \"DEPLOY\"));\n  };\n\n  const PlayerBox = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 6\n      }\n    }, \"PLAYERS:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 6\n      }\n    }, players.map(p => /*#__PURE__*/React.createElement(\"li\", {\n      key: p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 30\n      }\n    }, \"p\")))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    class: classes.sidebarPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, \"Welcome, Commander \", name, \"!\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"help\",\n    color: \"primary\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HelpIcon, {\n    style: {\n      fontSize: '25'\n    },\n    onClick: handleOpenHelp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    open: openHelp,\n    autoHideDuration: 10000,\n    onClose: handleCloseHelp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleCloseHelp,\n    severity: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"This is your control room. Hover above countries to communicate with your spies.\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(SpyDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(VectorMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar clickedCountry; //TODO: player team colour for country\n\nfunction countryColors(country) {\n  const {\n    NAME,\n    ISO_A2\n  } = country.properties;\n  return '#AAA';\n}\n\nfunction loadMap() {\n  //TODO: take value from the cookie\n  fetch('/maps/world.txt').then(raw => raw.text()).then(raw => raw.split('\\n')).then(lines => lines.map(s => s.split(' '))).then(lines => lines.forEach(line => countries[line[0]] = line.slice(1)));\n} //FIXME: fix read file correctly\n\n\nfunction getCountryCodes(countrycode) {\n  // var fs = require(\"fs\");\n  const fileURL = '/maps/world.txt';\n  var textByLine = '';\n  fetch(fileURL).then(raw => raw.text()).then(raw => raw.split('\\n')).then(raw => raw.map(x => x.split(' '))).then(raw => textByLine = raw);\n  var countriesBordering = [];\n\n  for (let j = 0; j < textByLine.length; j++) {\n    var borders = textByLine[j].split(' ');\n\n    if (borders[0] == countrycode) {\n      for (let i = 1; i < borders.length; i++) {\n        //Get border codes\n        countriesBordering.push(borders[i]);\n      }\n    }\n  }\n\n  console.log(countriesBordering);\n  return countriesBordering;\n}\n/* GAME MAP */\n// const MapSettings = ({\n// \tsetTooltipContent,\n// \tsetname,\n// \tsetpop_est,\n// \tsetsubrg,\n// \tsetcontinent,\n// \tsetgdp,\n// \tsetdisplay,\n// \tsetclickedCountry,\n// \thandleColourFill,\n// \thandleColourStroke,\n// \tsetdoubleClicked\n// }) => {\n// \treturn (\n// \t\t<div className=\"map-wrapper\">\n// \t\t\t<ComposableMap>\n// \t\t\t\t<CustomZoomableGroup center={[ 0, 0 ]}>\n// \t\t\t\t\t{(position) => (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<Geographies geography={geoUrl}>\n// \t\t\t\t\t\t\t\t{({ geographies }) => (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n// \t\t\t\t\t\t\t\t\t\t\tconst fillcolour = handleColourFill(geo);\n// \t\t\t\t\t\t\t\t\t\t\tconst strokecolour = handleColourStroke(geo);\n// \t\t\t\t\t\t\t\t\t\t\treturn notThisCountry(geo) ? (\n// \t\t\t\t\t\t\t\t\t\t\t\t<Geography\n// \t\t\t\t\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tgeography={geo}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tfill={fillcolour}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tstroke={strokecolour}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNAME,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPOP_EST,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGDP_MD_EST,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBREGION,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONTINENT\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t} = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t// setTooltipContent(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t//   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME} - ENEMY TERRITORY`);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetname(NAME);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpop_est(getnum(POP_EST));\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetsubrg(SUBREGION);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetcontinent(CONTINENT);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(true);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent('');\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(false);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\thover: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#F53',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tpressed: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetclickedCountry(ISO_A2);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdoubleClicked();\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t\t) : null;\n// \t\t\t\t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n// \t\t\t\t\t\t\t\t\t\t\tconst centroid = geoCentroid(geo);\n// \t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t\t\t\t<g key={geo.rsmKey}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Marker coordinates={centroid}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text fontSize={7 / position.k} alignmentBaseline=\"middle\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countries[ISO_A2]}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</Marker>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t</g>\n// \t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t</Geographies>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</CustomZoomableGroup>\n// \t\t\t</ComposableMap>\n// \t\t</div>\n// \t);\n// };\n\n\nexport default SideBar;","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/Map.jsx"],"names":["React","Component","useState","connect","loaddetails","Typography","Paper","makeStyles","IconButton","Snackbar","Grid","fade","HelpIcon","MuiAlert","MapChart","ReactTooltip","countriesLoaded","countries","socket","troops","countryStates","playerColours","players","countryState","constructor","Troops","Player","GameMap","render","useStyles","theme","sidebarPaper","marginLeft","marginTop","background","color","padding","spacing","position","width","height","borderRadius","boxShadow","buttons","display","justifyContent","button","Alert","props","VectorMap","content","setContent","geo","setgeo","mapWidth","mapHeight","SideBar","classes","name","setname","pop_est","setpop_est","gdp","setgdp","subrg","setsubrg","continent","setcontinent","setdisplay","clickedCountry","setclickedCountry","openHelp","setOpenHelp","handleOpenHelp","handleCloseHelp","event","reason","handleColourFill","country","loadMap","ISO_A2","properties","undefined","some","iso","col","TypeError","SpyDetails","options","PlayerBox","map","p","fontSize","countryColors","NAME","fetch","then","raw","text","split","lines","s","forEach","line","slice","getCountryCodes","countrycode","fileURL","textByLine","x","countriesBordering","j","length","borders","i","push","console","log"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport './Map.css';\nimport { connect, loaddetails } from '../../api/index.js';\nimport { Typography, Paper, makeStyles, IconButton, Snackbar, Grid } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport MapChart from './VectorMap';\nimport ReactTooltip from 'react-tooltip';\n\nvar countriesLoaded = false;\nvar countries = {};\nvar socket = null;\nvar troops = 0;\nvar countryStates = {};\nvar playerColours = {};\nvar players = [];\n\nclass countryState {\n\tconstructor(Troops, Player) {\n\t\tthis.Troops = Troops;\n\t\tthis.Player = Player;\n\t}\n}\n\nclass GameMap extends Component {\n\t// constructor() {\n\t// \tsuper();\n\t// \tsocket = connect();\n\t// \tsocket.onmessage = (msg) => {\n\t// \t\tvar action = JSON.parse(msg.data);\n\t// \t\tswitch (action.Type) {\n\t// \t\t\tcase 'updateTroops':\n\t// \t\t\t\ttroops = action.Troops;\n\t// \t\t\t\tbreak;\n\t// \t\t\tcase 'updateCountry':\n\t// \t\t\t\tif (\n\t// \t\t\t\t\ttypeof countryStates[action.Country] == 'undefined' ||\n\t// \t\t\t\t\tcountryStates[action.Country].Player != action.Player\n\t// \t\t\t\t) {\n\t// \t\t\t\t\tcountryStates[action.Country] = new countryState(action.Troops, action.Player);\n\t// \t\t\t\t} else {\n\t// \t\t\t\t\tcountryStates[action.Country].Troops += action.Troops;\n\t// \t\t\t\t}\n\t// \t\t\t\tbreak;\n\t// \t\t\tcase 'newPlayer':\n\t// \t\t\t\tconsole.log(action.Player + ' has entered the chat bois as: ' + action.Country);\n\t// \t\t\t\tplayerColours[action.Player] = action.Country;\n\t// \t\t\t\tplayers.push(action.Player);\n\t// \t\t}\n\t// \t};\n\t// }\n\n\trender() {\n\t\treturn <SideBar />;\n\t}\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tsidebarPaper: {\n\t\tmarginLeft: '70%',\n\t\tmarginTop: '10%',\n\t\tbackground: fade('#000000', 0.8),\n\t\tcolor: 'white',\n\t\tpadding: theme.spacing(3),\n\t\tposition: 'fixed',\n\t\twidth: '30%',\n\t\theight: '80%',\n\t\tborderRadius: '5%',\n\t\tboxShadow: '0px 10px 50px #555'\n\t},\n\tbuttons: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-end'\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing(3),\n\t\tmarginLeft: theme.spacing(1)\n\t}\n}));\n\nfunction Alert(props) {\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction VectorMap() {\n\tconst [ content, setContent ] = React.useState('');\n\tconst [ geo, setgeo ] = useState(null);\n\tconst mapWidth = 1000;\n\tconst mapHeight = 600;\n\n\treturn (\n\t\t<div>\n\t\t\t<MapChart setTooltipContent={setContent} mapWidth={mapWidth} mapHeight={mapHeight} setgeo={setgeo} />\n\t\t\t<ReactTooltip>{content}</ReactTooltip>\n\t\t</div>\n\t);\n}\n\nfunction SideBar() {\n\tconst classes = useStyles();\n\n\t//Fetch #troops, attack, move options, fix data vals\n\t//TODO: Import username from entry form\n\tconst [ name, setname ] = useState('Shashwat');\n\tconst [ pop_est, setpop_est ] = useState('');\n\tconst [ gdp, setgdp ] = useState('');\n\tconst [ subrg, setsubrg ] = useState('');\n\tconst [ continent, setcontinent ] = useState('');\n\tconst [ display, setdisplay ] = useState(false);\n\tconst [ clickedCountry, setclickedCountry ] = useState('');\n\t//For the snackbar display settings\n\tconst [ openHelp, setOpenHelp ] = React.useState(false);\n\t//Get the geo data for each country\n\tconst [ geo, setgeo ] = useState(null);\n\n\tconst handleOpenHelp = () => {\n\t\tsetOpenHelp(true);\n\t};\n\n\tconst handleCloseHelp = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetOpenHelp(false);\n\t};\n\n\tconst handleColourFill = (country) => {\n\t\tif (!countriesLoaded) {\n\t\t\tloadMap();\n\t\t\tcountriesLoaded = true;\n\t\t}\n\t\tconst { ISO_A2 } = country.properties;\n\n\t\tif (\n\t\t\tclickedCountry !== '' &&\n\t\t\tcountries[clickedCountry] !== undefined &&\n\t\t\tcountries[clickedCountry].some((iso) => iso === ISO_A2)\n\t\t) {\n\t\t\treturn '#be90d4';\n\t\t}\n\t\ttry {\n\t\t\tvar col = playerColours[countryStates[ISO_A2].Player];\n\t\t\tif (typeof col == 'undefined') {\n\t\t\t\tcol = '#B9A37E';\n\t\t\t}\n\t\t\treturn col;\n\t\t} catch (TypeError) {\n\t\t\treturn '#B9A37E';\n\t\t}\n\t};\n\n\tconst SpyDetails = (geo) => {\n\t\tconst { name, pop_est, gdp, continent, subrg } = geo.properties;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Spy Report On {name}:</h2>\n\t\t\t\t<h3>{countryStates[clickedCountry].Troops !== undefined && countryStates[clickedCountry].Troops}</h3>\n\t\t\t\t<h3>Population: {pop_est}</h3>\n\t\t\t\t<h3>GDP (PPP): {gdp}</h3>\n\t\t\t\t{continent !== 'South America' && <h3>Subregion: {subrg}</h3>}\n\t\t\t\t<h3>Continent: {continent}</h3>\n\t\t\t\t<h3>Allegiance: Ohio</h3>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst options = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button>ATTACK</button>\n\t\t\t\t<button>MOVE</button>\n\t\t\t\t<button>DONATE</button>\n\t\t\t\t<button>DEPLOY</button>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst PlayerBox = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper>\n\t\t\t\t\t<Typography variant=\"subtitle1\">PLAYERS:</Typography>\n\t\t\t\t\t<ul>{players.map((p) => <li key={p}>p</li>)}</ul>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Paper class={classes.sidebarPaper}>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t\t\t<Typography variant=\"h4\">Welcome, Commander {name}!</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={2}>\n\t\t\t\t\t\t<IconButton aria-label=\"help\" color=\"primary\" size=\"small\">\n\t\t\t\t\t\t\t<HelpIcon\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize: '25'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={handleOpenHelp}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Snackbar open={openHelp} autoHideDuration={10000} onClose={handleCloseHelp}>\n\t\t\t\t\t\t\t\t<Alert onClose={handleCloseHelp} severity=\"info\">\n\t\t\t\t\t\t\t\t\tThis is your control room. Hover above countries to communicate with your spies.\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t</Snackbar>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<SpyDetails />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\n\t\t\t{/* <PlayerBox />\n\t\t\t<div className=\"map-sidebar-wrapper\">\n\t\t\t\t<div className=\"map-sidebar-info-wrapper\">\n\t\t\t\t\t<h1>START THE CONQUEST!</h1>\n\t\t\t\t\t<Typography variant=\"h4\">Welcome Commander {username}!</Typography>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Typography variant=\"subtitle1\">BASE TROOPS: {troops}</Typography>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is your war control room. Help us attain victory over our enemies. The Gods are on our\n\t\t\t\t\t\tside!\n\t\t\t\t\t</p>\n\t\t\t\t\t{clickedCountry !== '' && <selectedCountryOptions />}\n\t\t\t\t\t{display && <CountryDetails />}\n\t\t\t\t</div>\n\t\t\t</div> */}\n\t\t\t<VectorMap />\n\t\t</div>\n\t);\n}\n\nvar clickedCountry;\n//TODO: player team colour for country\nfunction countryColors(country) {\n\tconst { NAME, ISO_A2 } = country.properties;\n\treturn '#AAA';\n}\n\nfunction loadMap() {\n\t//TODO: take value from the cookie\n\tfetch('/maps/world.txt')\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((lines) => lines.map((s) => s.split(' ')))\n\t\t.then((lines) => lines.forEach((line) => (countries[line[0]] = line.slice(1))));\n}\n\n//FIXME: fix read file correctly\nfunction getCountryCodes(countrycode) {\n\t// var fs = require(\"fs\");\n\tconst fileURL = '/maps/world.txt';\n\tvar textByLine = '';\n\tfetch(fileURL)\n\t\t.then((raw) => raw.text())\n\t\t.then((raw) => raw.split('\\n'))\n\t\t.then((raw) => raw.map((x) => x.split(' ')))\n\t\t.then((raw) => (textByLine = raw));\n\n\tvar countriesBordering = [];\n\n\tfor (let j = 0; j < textByLine.length; j++) {\n\t\tvar borders = textByLine[j].split(' ');\n\t\tif (borders[0] == countrycode) {\n\t\t\tfor (let i = 1; i < borders.length; i++) {\n\t\t\t\t//Get border codes\n\t\t\t\tcountriesBordering.push(borders[i]);\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(countriesBordering);\n\treturn countriesBordering;\n}\n\n/* GAME MAP */\n\n// const MapSettings = ({\n// \tsetTooltipContent,\n// \tsetname,\n// \tsetpop_est,\n// \tsetsubrg,\n// \tsetcontinent,\n// \tsetgdp,\n// \tsetdisplay,\n// \tsetclickedCountry,\n// \thandleColourFill,\n// \thandleColourStroke,\n// \tsetdoubleClicked\n// }) => {\n// \treturn (\n// \t\t<div className=\"map-wrapper\">\n// \t\t\t<ComposableMap>\n// \t\t\t\t<CustomZoomableGroup center={[ 0, 0 ]}>\n// \t\t\t\t\t{(position) => (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<Geographies geography={geoUrl}>\n// \t\t\t\t\t\t\t\t{({ geographies }) => (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n// \t\t\t\t\t\t\t\t\t\t\tconst fillcolour = handleColourFill(geo);\n// \t\t\t\t\t\t\t\t\t\t\tconst strokecolour = handleColourStroke(geo);\n// \t\t\t\t\t\t\t\t\t\t\treturn notThisCountry(geo) ? (\n// \t\t\t\t\t\t\t\t\t\t\t\t<Geography\n// \t\t\t\t\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tgeography={geo}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tfill={fillcolour}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tstroke={strokecolour}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNAME,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPOP_EST,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGDP_MD_EST,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBREGION,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONTINENT\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t} = geo.properties;\n\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t// setTooltipContent(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t//   `${NAME} - $${getnum(GDP_MD_EST * Math.pow(10, 6))}`\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME} - ENEMY TERRITORY`);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetname(NAME);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpop_est(getnum(POP_EST));\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetgdp(getnum(GDP_MD_EST * Math.pow(10, 6)));\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetsubrg(SUBREGION);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetcontinent(CONTINENT);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(true);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent('');\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdisplay(false);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\thover: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#F53',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tpressed: {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#D6D6DA',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetclickedCountry(ISO_A2);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsetdoubleClicked();\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t\t) : null;\n// \t\t\t\t\t\t\t\t\t\t})}\n\n// \t\t\t\t\t\t\t\t\t\t{geographies.map((geo) => {\n// \t\t\t\t\t\t\t\t\t\t\tconst centroid = geoCentroid(geo);\n// \t\t\t\t\t\t\t\t\t\t\tconst { ISO_A2 } = geo.properties;\n// \t\t\t\t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t\t\t\t<g key={geo.rsmKey}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Marker coordinates={centroid}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text fontSize={7 / position.k} alignmentBaseline=\"middle\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countries[ISO_A2]}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</Marker>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t</g>\n// \t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t</Geographies>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</CustomZoomableGroup>\n// \t\t\t</ComposableMap>\n// \t\t</div>\n// \t);\n// };\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}