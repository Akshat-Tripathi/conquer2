{"ast":null,"code":"import _slicedToArray from\"/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo}from'react';import{ZoomableGroup,ComposableMap,Geographies,Geography,Marker,Annotation}from'react-simple-maps';import{geoCentroid}from'd3-geo';import ReactTooltip from'react-tooltip';var geoUrl='https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';var rounded=function rounded(num){var num=Math.round(num);if(num>Math.pow(10,12)){num=num/Math.pow(10,12)+' Trillion';}else if(num>Math.pow(10,9)){num=num/Math.pow(10,9)+' Billion';}else if(num>Math.pow(10,6)){num=num/Math.pow(10,6)+' Million';}return num;};function notThisCountry(country){var NAME=country.properties.NAME;// return NAME !== '';\nreturn true;}var MapChart=function MapChart(_ref){var setTooltipContent=_ref.setTooltipContent,setname=_ref.setname,setpop_est=_ref.setpop_est,setsubrg=_ref.setsubrg,setcontinent=_ref.setcontinent,setgdp=_ref.setgdp,handleColorFill=_ref.handleColorFill,handleColorStroke=_ref.handleColorStroke,handleStrokeWidth=_ref.handleStrokeWidth,handleClick=_ref.handleClick;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ComposableMap,{\"data-tip\":\"\",projectionConfig:{scale:140}},/*#__PURE__*/React.createElement(ZoomableGroup,null,/*#__PURE__*/React.createElement(Geographies,{geography:geoUrl},function(_ref2){var geographies=_ref2.geographies;return geographies.map(function(geo){var fillcolor=handleColorFill(geo);var strokecolor=handleColorStroke(geo);var strokewidth=handleStrokeWidth(geo);return notThisCountry(geo)?/*#__PURE__*/React.createElement(Geography,{key:geo.rsmKey,geography:geo,stroke:strokecolor,fill:fillcolor,strokeWidth:strokewidth,onMouseEnter:function onMouseEnter(){var _geo$properties=geo.properties,NAME=_geo$properties.NAME,POP_EST=_geo$properties.POP_EST,SUBREGION=_geo$properties.SUBREGION,CONTINENT=_geo$properties.CONTINENT,GDP_MD_EST=_geo$properties.GDP_MD_EST;setTooltipContent(\"\".concat(NAME));setname(NAME);setpop_est(rounded(POP_EST));setcontinent(CONTINENT);setgdp(rounded(GDP_MD_EST*1000));setsubrg(SUBREGION);},onMouseLeave:function onMouseLeave(){setTooltipContent('');setname('');setpop_est('');setcontinent('');setgdp();setsubrg('');},onClick:function onClick(){handleClick(geo);},style:{default:{outline:'none'},hover:{fill:'#F53',outline:'none'},pressed:{fill:'#',outline:'none'}}}):null;});}))));};var VectorMap=function VectorMap(_ref3){var setname=_ref3.setname,setpop_est=_ref3.setpop_est,setsubrg=_ref3.setsubrg,setcontinent=_ref3.setcontinent,setgdp=_ref3.setgdp,handleColorStroke=_ref3.handleColorStroke,handleColorFill=_ref3.handleColorFill,handleStrokeWidth=_ref3.handleStrokeWidth,handleClick=_ref3.handleClick;var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),content=_React$useState2[0],setContent=_React$useState2[1];var mapWidth=1000;var mapHeight=600;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MapChart,{setTooltipContent:setContent,mapWidth:mapWidth,mapHeight:mapHeight,setname:setname,setpop_est:setpop_est,setsubrg:setsubrg,setcontinent:setcontinent,setgdp:setgdp,handleColorFill:handleColorFill,handleColorStroke:handleColorStroke,handleStrokeWidth:handleStrokeWidth,handleClick:handleClick}),/*#__PURE__*/React.createElement(ReactTooltip,null,content));};export default memo(VectorMap);","map":{"version":3,"sources":["/Users/shashwatkansal/Documents/Shashwat/Projects/conquer2/V0.3/conquer2/frontend/src/pages/Map/VectorMap.jsx"],"names":["React","memo","ZoomableGroup","ComposableMap","Geographies","Geography","Marker","Annotation","geoCentroid","ReactTooltip","geoUrl","rounded","num","Math","round","pow","notThisCountry","country","NAME","properties","MapChart","setTooltipContent","setname","setpop_est","setsubrg","setcontinent","setgdp","handleColorFill","handleColorStroke","handleStrokeWidth","handleClick","scale","geographies","map","geo","fillcolor","strokecolor","strokewidth","rsmKey","POP_EST","SUBREGION","CONTINENT","GDP_MD_EST","default","outline","hover","fill","pressed","VectorMap","useState","content","setContent","mapWidth","mapHeight"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography, Marker, Annotation } from 'react-simple-maps';\nimport { geoCentroid } from 'd3-geo';\nimport ReactTooltip from 'react-tooltip';\n\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\n\nconst rounded = (num) => {\n\tvar num = Math.round(num);\n\tif (num > Math.pow(10, 12)) {\n\t\tnum = num / Math.pow(10, 12) + ' Trillion';\n\t} else if (num > Math.pow(10, 9)) {\n\t\tnum = num / Math.pow(10, 9) + ' Billion';\n\t} else if (num > Math.pow(10, 6)) {\n\t\tnum = num / Math.pow(10, 6) + ' Million';\n\t}\n\treturn num;\n};\n\nfunction notThisCountry(country) {\n\tconst { NAME } = country.properties;\n\t// return NAME !== '';\n\treturn true;\n}\n\nconst MapChart = ({\n\tsetTooltipContent,\n\tsetname,\n\tsetpop_est,\n\tsetsubrg,\n\tsetcontinent,\n\tsetgdp,\n\thandleColorFill,\n\thandleColorStroke,\n\thandleStrokeWidth,\n\thandleClick\n}) => {\n\treturn (\n\t\t<div>\n\t\t\t{/* <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }} width={mapWidth} height={mapHeight}> */}\n\t\t\t{/* <ZoomableGroup translateExtent={[ [ 0, -mapHeight ], [ mapWidth, mapHeight ] ]}> */}\n\t\t\t<ComposableMap data-tip=\"\" projectionConfig={{ scale: 140 }}>\n\t\t\t\t<ZoomableGroup>\n\t\t\t\t\t<Geographies geography={geoUrl}>\n\t\t\t\t\t\t{({ geographies }) =>\n\t\t\t\t\t\t\tgeographies.map((geo) => {\n\t\t\t\t\t\t\t\tconst fillcolor = handleColorFill(geo);\n\t\t\t\t\t\t\t\tconst strokecolor = handleColorStroke(geo);\n\t\t\t\t\t\t\t\tconst strokewidth = handleStrokeWidth(geo);\n\t\t\t\t\t\t\t\treturn notThisCountry(geo) ? (\n\t\t\t\t\t\t\t\t\t<Geography\n\t\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n\t\t\t\t\t\t\t\t\t\tgeography={geo}\n\t\t\t\t\t\t\t\t\t\tstroke={strokecolor}\n\t\t\t\t\t\t\t\t\t\tfill={fillcolor}\n\t\t\t\t\t\t\t\t\t\tstrokeWidth={strokewidth}\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t\t\t\tconst { NAME, POP_EST, SUBREGION, CONTINENT, GDP_MD_EST } = geo.properties;\n\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME}`);\n\t\t\t\t\t\t\t\t\t\t\tsetname(NAME);\n\t\t\t\t\t\t\t\t\t\t\tsetpop_est(rounded(POP_EST));\n\t\t\t\t\t\t\t\t\t\t\tsetcontinent(CONTINENT);\n\t\t\t\t\t\t\t\t\t\t\tsetgdp(rounded(GDP_MD_EST * 1000));\n\t\t\t\t\t\t\t\t\t\t\tsetsubrg(SUBREGION);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetTooltipContent('');\n\t\t\t\t\t\t\t\t\t\t\tsetname('');\n\t\t\t\t\t\t\t\t\t\t\tsetpop_est('');\n\t\t\t\t\t\t\t\t\t\t\tsetcontinent('');\n\t\t\t\t\t\t\t\t\t\t\tsetgdp();\n\t\t\t\t\t\t\t\t\t\t\tsetsubrg('');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\thandleClick(geo);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\t\t\t\t\tfill: '#F53',\n\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tpressed: {\n\t\t\t\t\t\t\t\t\t\t\t\tfill: '#',\n\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</Geographies>\n\t\t\t\t</ZoomableGroup>\n\t\t\t</ComposableMap>\n\t\t</div>\n\t);\n};\n\nconst VectorMap = ({\n\tsetname,\n\tsetpop_est,\n\tsetsubrg,\n\tsetcontinent,\n\tsetgdp,\n\thandleColorStroke,\n\thandleColorFill,\n\thandleStrokeWidth,\n\thandleClick\n}) => {\n\tconst [ content, setContent ] = React.useState('');\n\tconst mapWidth = 1000;\n\tconst mapHeight = 600;\n\treturn (\n\t\t<div>\n\t\t\t<MapChart\n\t\t\t\tsetTooltipContent={setContent}\n\t\t\t\tmapWidth={mapWidth}\n\t\t\t\tmapHeight={mapHeight}\n\t\t\t\tsetname={setname}\n\t\t\t\tsetpop_est={setpop_est}\n\t\t\t\tsetsubrg={setsubrg}\n\t\t\t\tsetcontinent={setcontinent}\n\t\t\t\tsetgdp={setgdp}\n\t\t\t\thandleColorFill={handleColorFill}\n\t\t\t\thandleColorStroke={handleColorStroke}\n\t\t\t\thandleStrokeWidth={handleStrokeWidth}\n\t\t\t\thandleClick={handleClick}\n\t\t\t/>\n\t\t\t<ReactTooltip>{content}</ReactTooltip>\n\t\t</div>\n\t);\n};\n\nexport default memo(VectorMap);\n"]},"metadata":{},"sourceType":"module"}