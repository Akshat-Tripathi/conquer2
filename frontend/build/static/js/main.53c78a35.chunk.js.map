{"version":3,"sources":["media/HomeBackgroundVideo.mp4","pages/Home.jsx","pages/UnderConstruction.jsx","pages/Map.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Credits","className","Box","color","Typography","variant","align","Date","getFullYear","Title","React","Component","StartGameBox","props","useState","action","method","type","placeholder","name","required","value","Video","useEffect","attemptPlay","videoEl","useRef","current","play","catch","error","console","muted","autoPlay","id","playsInline","src","videoSource","alt","Home","UnderConstruction","MapSettings","setTooltipContent","data-tip","geography","geographies","map","geo","key","rsmKey","onMouseEnter","properties","NAME","GDP_MD_EST","POP_EST","wealth","Math","round","pow","getWealth","onMouseLeave","style","default","fill","outline","hover","pressed","MapDisplay","state","setState","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.53c78a35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HomeBackgroundVideo.ebe2f040.mp4\";","import React, { Component, useEffect, useRef } from \"react\";\r\nimport videoSource from \"../media/HomeBackgroundVideo.mp4\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  makeStyles,\r\n  Button,\r\n  TextField,\r\n  MenuItem,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport \"./Home.css\";\r\n\r\n//TODO: ADD A FUNCTIONING FORM - FORMIK?\r\n\r\nfunction Credits() {\r\n  return (\r\n    <div className=\"credits\">\r\n      <Box color=\"white\">\r\n        <Typography variant=\"body2\" color=\"gray\" align=\"center\">\r\n          {\"Copyright Â© \"}\r\n          {new Date().getFullYear()}\r\n          {\".\"}\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Title() {\r\n  return (\r\n    <div className=\"title-head\">\r\n      <Box align=\"center\" color=\"white\">\r\n        <Typography variant=\"h2\">CONQUER V2.0</Typography>\r\n      </Box>\r\n      <Box color=\"white\" align=\"center\">\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          by Imperium Games\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst gamemodes = [\r\n  {\r\n    label: \"World Conquest - 2025\",\r\n    value: \"WC\",\r\n  },\r\n  {\r\n    label: \"World War I - 1914\",\r\n    value: \"EW\",\r\n  },\r\n  {\r\n    label: \"American Independence War - 1776\",\r\n    value: \"ACW\",\r\n  },\r\n  {\r\n    label: \"Genghis Khan's Expedition - 1333\",\r\n    value: \"GKE\",\r\n  },\r\n  {\r\n    label: \"The Mahabharata - 3200BCE\",\r\n    value: \"MB\",\r\n  },\r\n];\r\n\r\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst onSubmit = async (values) => {\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n};\r\n\r\nclass gameForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: null,\r\n      gamemode: null,\r\n      noOfPlayers: null,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const ign = target.username;\r\n  }\r\n}\r\n\r\nfunction StartGameBox(props) {\r\n  //Collect form information\r\n  const state = {\r\n    username: \"Genghis Khan\",\r\n    gamemode: \"WC\",\r\n    noOfPlayers: 6,\r\n  };\r\n\r\n  //List the gamemode options\r\n  const [war, setWar] = React.useState(\"World Conquest 2025\");\r\n\r\n  const handleChange = (event) => {\r\n    setWar(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form-wrapper\">\r\n        <h3 className=\"gamebox-title\">Join the game!</h3>\r\n        \r\n        <form action = \"/join\" method=\"POST\">\r\n            <div className=\"username\"><input type=\"text\" placeholder=\"Username\" name = \"username\" required></input></div>\r\n            <div><input type =\"password\" placeholder=\"Password\" name = \"password\" required></input></div>\r\n            <div><input type=\"text\" placeholder=\"Game Id\" name = \"id\"></input></div>\r\n            <input type=\"submit\" name=\"submit\" value=\"join\"></input>\r\n        </form>\r\n\r\n        <form action = \"/create\" method=\"POST\">\r\n            <select className=\"gamemode\" name=\"type\" required>\r\n                <option value=\"realtime\">Realtime game</option>\r\n            </select>\r\n            <div><input type=\"text\" placeholder=\"Username\" name = \"username\" required></input></div>\r\n            <div><input type =\"password\" placeholder=\"Password\" name = \"password\" required></input></div>\r\n            <div><input className=\"noOfPlayers\" type=\"number\" placeholder=\"maxPlayers\" name = \"maxPlayers\" required></input></div>\r\n            <div><input type=\"number\" placeholder=\"startingTroops\" name = \"startingTroops\" required></input></div>\r\n            <div><input type=\"number\" placeholder=\"startingCountries\" name = \"startingCountries\" required></input></div>\r\n            <div><input type=\"number\" placeholder=\"interval\" name = \"troopInterval\" required></input></div>\r\n            <input type=\"submit\" name=\"submit\" value=\"create\"></input>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Video() {\r\n  useEffect(() => {\r\n    attemptPlay();\r\n  }, []);\r\n\r\n  const videoEl = useRef(null);\r\n\r\n  const attemptPlay = () => {\r\n    videoEl &&\r\n      videoEl.current &&\r\n      videoEl.current.play().catch((error) => {\r\n        console.error(\"Error attempting to play\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"video\">\r\n      <video muted autoPlay className=\"home-video\" id=\"home-video\">\r\n        <source\r\n          playsInline\r\n          src={videoSource}\r\n          type=\"video/mp4\"\r\n          alt=\"This is Sparta!\"\r\n        />\r\n        What kind of browser version are you on... Your browser unfortunately\r\n        does not yet support the video tag!\r\n      </video>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home-page\">\r\n        <Video />\r\n        <Title />\r\n        <StartGameBox />\r\n        <Credits />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const UnderConstruction = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header\">\r\n      <p>\r\n        <code>UNDER DEVELOPMENT</code>\r\n      </p>\r\n      <a className=\"App-link\">By Shashwat Kansal and Akshat Tripathi</a>\r\n    </header>\r\n  </div>\r\n);\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nfunction MapDisplay() {\r\n  const [state, setState] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <MapSettings setTooltipContent={setState} />\r\n      <ReactTooltip>{state}</ReactTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getWealth = (GDP_MD_EST, POP_EST) => {\r\n  var wealth = Math.round(GDP_MD_EST);\r\n  if (wealth > Math.pow(10, 12)) {\r\n    wealth = wealth / Math.pow(10, 12) + \" Trillion\";\r\n  } else if (wealth > Math.pow(10, 9)) {\r\n    wealth = wealth / Math.pow(10, 9) + \" Billion\";\r\n  } else if (wealth > Math.pow(10, 6)) {\r\n    wealth = wealth / Math.pow(10, 6) + \" Million\";\r\n  }\r\n  return wealth;\r\n};\r\n\r\nconst MapSettings = ({ setTooltipContent }) => {\r\n  return (\r\n    <div>\r\n      <ComposableMap data-tip=\"\">\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME, POP_EST, GDP_MD_EST } = geo.properties;\r\n                    setTooltipContent(\r\n                      `${NAME} - ${getWealth(GDP_MD_EST, POP_EST)}`\r\n                    );\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\",\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\",\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapDisplay;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home.jsx\";\r\nimport { UnderConstruction } from \"./pages/UnderConstruction\";\r\nimport MapDisplay from \"./pages/Map.jsx\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <Switch>\r\n            <div>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/underdev\" component={UnderConstruction} />\r\n              <Route path=\"/game\" component={MapDisplay} />\r\n            </div>\r\n          </Switch>\r\n        </Router>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}